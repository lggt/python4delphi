<?xml version="1.0" ?><namespace name="FMX.ListView" platform="Win32">
  <class name="TAdapterListView" file="FMX.ListView.pas" line="27">
    
    <ancestor name="TStyledControl" namespace="FMX.Controls">
      <methodref name="GetStyleData" visibility="class private">
      </methodref>
      <methodref name="SetStyleData" visibility="class private">
      </methodref>
      <methodref name="SetStyleLookup" visibility="class private">
      </methodref>
      <methodref name="ScaleChangedHandler" visibility="class private">
      </methodref>
      <methodref name="StyleChangedHandler" visibility="class private">
      </methodref>
      <methodref name="InternalFreeStyle" visibility="private">
      </methodref>
      <methodref name="SearchInto" visibility="protected" procflags="override">
      </methodref>
      <methodref name="GetBackIndex" visibility="protected" procflags="override">
      </methodref>
      <methodref name="IsHelpContextStored" visibility="protected">
      </methodref>
      <methodref name="SetHelpContext" visibility="protected">
      </methodref>
      <methodref name="SetHelpKeyword" visibility="protected">
      </methodref>
      <methodref name="Notification" visibility="protected" procflags="override">
      </methodref>
      <methodref name="DoSetSize" visibility="protected" procflags="override">
      </methodref>
      <methodref name="DoApplyStyleLookup" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="StyleDataChanged" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="RequestStyleData" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="Painting" visibility="protected" procflags="override">
      </methodref>
      <methodref name="ApplyStyle" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="FreeStyle" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetStyleContext" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetDefaultStyleLookupName" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetParentClassStyleLookupName" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoEnter" visibility="protected" procflags="override">
      </methodref>
      <methodref name="Disappear" visibility="protected" procflags="override">
      </methodref>
      <methodref name="AdjustSize" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="AdjustFixedSize" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="ChooseAdjustType" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoStyleChanged" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="StyleLookupChanged" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="RecycleResourceLink" visibility="protected">
      </methodref>
      <methodref name="KillResourceLink" visibility="protected">
      </methodref>
      <methodref name="DoDeleteChildren" visibility="protected" procflags="override">
      </methodref>
      <methodref name="GenerateStyleName" visibility="protected">
      </methodref>
      <methodref name="GetStyleObject" visibility="protected" procflags="overload virtual">
      </methodref>
      <methodref name="GetStyleObject" visibility="protected" procflags="overload virtual">
      </methodref>
      <methodref name="SetAdjustSizeValue" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="SetAdjustType" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetResourceLink" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetResourceControl" visibility="protected">
      </methodref>
      <propertyref name="IsNeedStyleLookup" visibility="protected">
      </propertyref>
      <propertyref name="ResourceLink" visibility="protected">
      </propertyref>
      <propertyref name="ResourceControl" visibility="protected">
      </propertyref>
      <methodref name="GetAdjustSizeValue" visibility="protected" procflags="override">
      </methodref>
      <methodref name="GetAdjustType" visibility="protected" procflags="override">
      </methodref>
      <methodref name="Create" visibility="public" procflags="constructor overload override">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="override">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor override">
      </methodref>
      <propertyref name="AdjustType" visibility="public">
      </propertyref>
      <propertyref name="AdjustSizeValue" visibility="public">
      </propertyref>
      <propertyref name="StyleState" visibility="public">
      </propertyref>
      <methodref name="RecalcSize" visibility="public" procflags="override">
      </methodref>
      <methodref name="FindStyleResource" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="FindStyleResource" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FindAndCloneStyleResource" visibility="public">
      </methodref>
      <methodref name="SetNewScene" visibility="public" procflags="override">
      </methodref>
      <methodref name="ApplyStyleLookup" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NeedStyleLookup" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Inflate" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="PrepareForPaint" visibility="public" procflags="override">
      </methodref>
      <methodref name="StartTriggerAnimation" visibility="public" procflags="override">
      </methodref>
      <methodref name="StartTriggerAnimationWait" visibility="public" procflags="override">
      </methodref>
      <propertyref name="AutoTranslate" visibility="public">
      </propertyref>
      <propertyref name="DefaultStyleLookupName" visibility="public">
      </propertyref>
      <propertyref name="ParentClassStyleLookupName" visibility="public">
      </propertyref>
      <propertyref name="HelpType" visibility="public">
      </propertyref>
      <propertyref name="HelpKeyword" visibility="public">
      </propertyref>
      <propertyref name="HelpContext" visibility="public">
      </propertyref>
      <propertyref name="StylesData" visibility="public">
      </propertyref>
      <propertyref name="StyleLookup" visibility="public">
      </propertyref>
      <propertyref name="LoadableStyle" visibility="public">
      </propertyref>
      <methodref name="LookupStyleObject" visibility="public" procflags="class">
      </methodref>
      <ancestor name="TControl" namespace="FMX.Controls">
        <interfaces>
          <implements name="ITriggerEffect"/>
          <implements name="ITriggerAnimation"/>
          <implements name="ITabStopController"/>
          <implements name="IGestureControl"/>
          <implements name="IEffectContainer"/>
          <implements name="IAlignableObject"/>
          <implements name="IRotatedControl"/>
          <implements name="IAlignRoot"/>
          <implements name="IContainerObject"/>
          <implements name="IControl"/>
        </interfaces>
        <methodref name="AddToEffectsList" visibility="class private">
        </methodref>
        <methodref name="RemoveFromEffectsList" visibility="class private">
        </methodref>
        <methodref name="GetInvertAbsoluteMatrix" visibility="class private">
        </methodref>
        <methodref name="SetPosition" visibility="class private">
        </methodref>
        <methodref name="SetHitTest" visibility="class private">
        </methodref>
        <methodref name="SetClipChildren" visibility="class private">
        </methodref>
        <methodref name="GetCanvas" visibility="class private" procflags="inline">
        </methodref>
        <methodref name="SetLocked" visibility="class private">
        </methodref>
        <methodref name="SetTempCanvas" visibility="class private">
        </methodref>
        <methodref name="SetOpacity" visibility="class private">
        </methodref>
        <methodref name="IsOpacityStored" visibility="class private">
        </methodref>
        <methodref name="SetCursor" visibility="class private">
        </methodref>
        <methodref name="RefreshInheritedCursor" visibility="class private">
        </methodref>
        <methodref name="RefreshInheritedCursorForChildren" visibility="class private">
        </methodref>
        <methodref name="GetAbsoluteWidth" visibility="class private">
        </methodref>
        <methodref name="GetAbsoluteHeight" visibility="class private">
        </methodref>
        <methodref name="IsAnchorsStored" visibility="class private">
        </methodref>
        <methodref name="GetEnabled" visibility="class private">
        </methodref>
        <methodref name="GetCursor" visibility="class private">
        </methodref>
        <methodref name="GetInheritedCursor" visibility="class private">
        </methodref>
        <methodref name="GetAbsoluteHasEffect" visibility="class private">
        </methodref>
        <methodref name="GetAbsoluteHasDisablePaintEffect" visibility="class private">
        </methodref>
        <methodref name="GetAbsoluteHasAfterPaintEffect" visibility="class private">
        </methodref>
        <methodref name="PaddingChangedHandler" visibility="class private" procflags="overload">
        </methodref>
        <methodref name="MarginsChanged" visibility="class private">
        </methodref>
        <methodref name="MatrixChanged" visibility="class private">
        </methodref>
        <methodref name="SizeChanged" visibility="class private">
        </methodref>
        <methodref name="GetControlsCount" visibility="class private">
        </methodref>
        <methodref name="OnClickStored" visibility="class private">
        </methodref>
        <methodref name="IsPopupMenuStored" visibility="class private">
        </methodref>
        <methodref name="RequestAlign" visibility="class private">
        </methodref>
        <methodref name="SetMinClipHeight" visibility="class private">
        </methodref>
        <methodref name="SetMinClipWidth" visibility="class private">
        </methodref>
        <methodref name="UpdateSmallSizeControl" visibility="class private">
        </methodref>
        <methodref name="Create@" visibility="class private" procflags="class constructor noself">
        </methodref>
        <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
        </methodref>
        <methodref name="SetOnClick" visibility="class private">
        </methodref>
        <methodref name="GetIsFocused" visibility="class private">
        </methodref>
        <methodref name="SetPadding" visibility="class private">
        </methodref>
        <methodref name="SetMargins" visibility="class private">
        </methodref>
        <methodref name="SetTouchTargetExpansion" visibility="class private">
        </methodref>
        <methodref name="InternalSizeChanged" visibility="class private">
        </methodref>
        <methodref name="ReadFixedWidth" visibility="class private">
        </methodref>
        <methodref name="WriteFixedWidth" visibility="class private">
        </methodref>
        <methodref name="ReadFixedHeight" visibility="class private">
        </methodref>
        <methodref name="WriteFixedHeight" visibility="class private">
        </methodref>
        <methodref name="ReadDesignVisible" visibility="class private">
        </methodref>
        <methodref name="ReadHint" visibility="class private">
        </methodref>
        <methodref name="ReadShowHint" visibility="class private">
        </methodref>
        <methodref name="DisabledOpacityStored" visibility="class private">
        </methodref>
        <methodref name="SetDisabledOpacity" visibility="class private">
        </methodref>
        <methodref name="GetAxisAlignedRect" visibility="class private">
        </methodref>
        <methodref name="GetRotationAngle" visibility="class private">
        </methodref>
        <methodref name="GetRotationCenter" visibility="class private">
        </methodref>
        <methodref name="GetScale" visibility="class private">
        </methodref>
        <methodref name="SetRotationAngle" visibility="class private">
        </methodref>
        <methodref name="SetRotationCenter" visibility="class private">
        </methodref>
        <methodref name="SetScale" visibility="class private">
        </methodref>
        <methodref name="GetTabOrder" visibility="class private">
        </methodref>
        <methodref name="SetTabOrder" visibility="class private">
        </methodref>
        <methodref name="GetTabStop" visibility="class private">
        </methodref>
        <methodref name="SetTabStop" visibility="class private">
        </methodref>
        <methodref name="SetDisableDisappear" visibility="class private">
        </methodref>
        <methodref name="GetDisableDisappear" visibility="class private">
        </methodref>
        <methodref name="UpdateParentProperties" visibility="class private">
        </methodref>
        <methodref name="CreateTouchManagerIfRequired" visibility="private">
        </methodref>
        <methodref name="GetTouchManager" visibility="private">
        </methodref>
        <methodref name="SetTouchManager" visibility="private">
        </methodref>
        <methodref name="IsShowHintStored" visibility="private">
        </methodref>
        <methodref name="SetParentShowHint" visibility="private">
        </methodref>
        <methodref name="SetShowHint" visibility="private">
        </methodref>
        <methodref name="GetAbsoluteClipRect" visibility="private">
        </methodref>
        <methodref name="HintStored" visibility="private">
        </methodref>
        <methodref name="RepaintJointArea" visibility="class protected">
        </methodref>
        <methodref name="DoAbsoluteChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CheckHitTest" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetInPaintTo" visibility="protected">
        </methodref>
        <methodref name="EndUpdateNoChanges" visibility="protected">
        </methodref>
        <methodref name="SetHint" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetEnabled" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Loaded" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Updated" visibility="protected" procflags="override">
        </methodref>
        <methodref name="DefineProperties" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Notification" visibility="protected" procflags="override">
        </methodref>
        <methodref name="ParentChanged" visibility="protected" procflags="override">
        </methodref>
        <methodref name="ChangeOrder" visibility="protected" procflags="override">
        </methodref>
        <methodref name="ChangeChildren" visibility="protected" procflags="override">
        </methodref>
        <methodref name="SetVisible" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoSetWidth" visibility="protected" procflags="virtual" symflags="deprecated">
        </methodref>
        <methodref name="DoSetHeight" visibility="protected" procflags="virtual" symflags="deprecated">
        </methodref>
        <methodref name="DoSetSize" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="HandleSizeChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoMatrixChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetHeight" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetWidth" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetSize" visibility="protected" procflags="overload virtual">
        </methodref>
        <methodref name="SetSize" visibility="protected" procflags="overload virtual">
        </methodref>
        <methodref name="GetAbsoluteRect" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetChildrenMatrix" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetAbsoluteScale" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetParentedRect" visibility="protected" procflags="virtual" symflags="deprecated">
        </methodref>
        <methodref name="GetClipRect" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetEffectsRect" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetAbsoluteEnabled" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetChildrenRect" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetLocalRect" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetBoundsRect" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetBoundsRect" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="IsHeightStored" visibility="protected" procflags="virtual" symflags="deprecated">
        </methodref>
        <methodref name="IsWidthStored" visibility="protected" procflags="virtual" symflags="deprecated">
        </methodref>
        <methodref name="IsPositionStored" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="IsSizeStored" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetPopupMenu" visibility="protected">
        </methodref>
        <methodref name="GetAbsoluteMatrix" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetHasClipParent" visibility="protected">
        </methodref>
        <methodref name="GetUpdateRect" visibility="protected">
        </methodref>
        <methodref name="DoGetUpdateRect" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetAbsoluteOpacity" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="BeginAutoDrag" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Capture" visibility="protected">
        </methodref>
        <methodref name="ReleaseCapture" visibility="protected">
        </methodref>
        <propertyref name="EnableExecuteAction" visibility="protected">
        </propertyref>
        <methodref name="Click" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DblClick" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="MouseDown" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="MouseMove" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="MouseUp" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="MouseWheel" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="MouseClick" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="KeyDown" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="KeyUp" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DialogKey" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="AfterDialogKey" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ShowContextMenu" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DragEnter" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DragOver" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DragDrop" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DragLeave" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DragEnd" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetDefaultTouchTargetExpansion" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetCanFocus" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetCanParentFocus" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="EnterChildren" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ExitChildren" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetParentedVisible" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="NeedUpdateEffects" visibility="protected">
        </methodref>
        <methodref name="BeforeEffectEnabledChanged" visibility="protected">
        </methodref>
        <methodref name="EffectEnabledChanged" visibility="protected">
        </methodref>
        <methodref name="Realign" visibility="protected">
        </methodref>
        <methodref name="ChildrenAlignChanged" visibility="protected">
        </methodref>
        <methodref name="GetAlign" visibility="protected">
        </methodref>
        <methodref name="SetAlign" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetAnchors" visibility="protected">
        </methodref>
        <methodref name="SetAnchors" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetMargins" visibility="protected">
        </methodref>
        <methodref name="GetPadding" visibility="protected">
        </methodref>
        <methodref name="GetWidth" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetHeight" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetLeft" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetTop" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetAllowAlign" visibility="protected">
        </methodref>
        <methodref name="GetAnchorRules" visibility="protected">
        </methodref>
        <methodref name="GetAnchorOrigin" visibility="protected">
        </methodref>
        <methodref name="GetOriginalParentSize" visibility="protected">
        </methodref>
        <methodref name="GetAnchorMove" visibility="protected">
        </methodref>
        <methodref name="SetAnchorMove" visibility="protected">
        </methodref>
        <methodref name="GetAdjustSizeValue" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetAdjustType" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetContainerWidth" visibility="protected">
        </methodref>
        <methodref name="GetContainerHeight" visibility="protected">
        </methodref>
        <methodref name="GetObject" visibility="protected">
        </methodref>
        <methodref name="GetParent" visibility="protected">
        </methodref>
        <methodref name="GetVisible" visibility="protected">
        </methodref>
        <methodref name="GetDesignInteractive" visibility="protected">
        </methodref>
        <methodref name="GetPopupMenu" visibility="protected">
        </methodref>
        <methodref name="DoEnter" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoExit" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoActivate" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoDeactivate" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoMouseEnter" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoMouseLeave" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CheckForAllowFocus" visibility="protected">
        </methodref>
        <methodref name="GetDragMode" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetDragMode" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetLocked" visibility="protected">
        </methodref>
        <methodref name="GetHitTest" visibility="protected">
        </methodref>
        <methodref name="GetAcceptsControls" visibility="protected">
        </methodref>
        <methodref name="SetAcceptsControls" visibility="protected">
        </methodref>
        <methodref name="FindTarget" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ObjectAtPoint" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="HasHint" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetHintString" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetHintObject" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CanShowHint" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="BroadcastGesture" visibility="protected">
        </methodref>
        <methodref name="CMGesture" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="TouchManager" visibility="protected">
        </methodref>
        <methodref name="GetFirstControlWithGesture" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetFirstControlWithGestureEngine" visibility="protected">
        </methodref>
        <methodref name="GetListOfInteractiveGestures" visibility="protected">
        </methodref>
        <methodref name="Tap" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetFirstVisibleObjectIndex" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetLastVisibleObjectIndex" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetDefaultSize" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="FillTextFlags" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ApplyEffect" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="PaintInternal" visibility="protected">
        </methodref>
        <methodref name="SupportsPaintStage" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CanRepaint" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="RepaintRect" visibility="protected">
        </methodref>
        <methodref name="PaintChildren" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Painting" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Paint" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoPaint" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="AfterPaint" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DrawDesignBorder" visibility="protected">
        </methodref>
        <methodref name="DoRealign" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoBeginUpdate" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoEndUpdate" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Move" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Resize" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoResized" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Disappear" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Show" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Hide" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="AncestorVisibleChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="AncestorParentChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ClipChildrenChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="HitTestChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="PaddingChanged" visibility="protected" procflags="overload virtual">
        </methodref>
        <propertyref name="MinClipWidth" visibility="protected">
        </propertyref>
        <propertyref name="MinClipHeight" visibility="protected">
        </propertyref>
        <propertyref name="SmallSizeControl" visibility="protected">
        </propertyref>
        <methodref name="DoAddObject" visibility="protected" procflags="override">
        </methodref>
        <methodref name="DoInsertObject" visibility="protected" procflags="override">
        </methodref>
        <methodref name="DoRemoveObject" visibility="protected" procflags="override">
        </methodref>
        <methodref name="DoDeleteChildren" visibility="protected" procflags="override">
        </methodref>
        <propertyref name="PaintStage" visibility="protected">
        </propertyref>
        <propertyref name="TempCanvas" visibility="protected">
        </propertyref>
        <methodref name="SetLeft" visibility="protected">
        </methodref>
        <methodref name="SetTop" visibility="protected">
        </methodref>
        <methodref name="UpdateExplicitBounds" visibility="protected">
        </methodref>
        <methodref name="UpdateAnchorRules" visibility="protected">
        </methodref>
        <propertyref name="Left" visibility="protected">
        </propertyref>
        <propertyref name="Top" visibility="protected">
        </propertyref>
        <propertyref name="ExplicitLeft" visibility="protected">
        </propertyref>
        <propertyref name="ExplicitTop" visibility="protected">
        </propertyref>
        <propertyref name="ExplicitWidth" visibility="protected">
        </propertyref>
        <propertyref name="ExplicitHeight" visibility="protected">
        </propertyref>
        <methodref name="GetActionLinkClass" visibility="protected" procflags="override">
        </methodref>
        <methodref name="ActionChange" visibility="protected" procflags="override">
        </methodref>
        <methodref name="EnabledStored" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="VisibleStored" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="EnabledChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="VisibleChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="IsControlRectEmpty" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetControls" visibility="protected">
        </methodref>
        <methodref name="DoGesture" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetTabStopController" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetTabListClass" visibility="protected" procflags="virtual">
        </methodref>
        <propertyref name="DoubleClick" visibility="protected">
        </propertyref>
        <propertyref name="RotationAngle" visibility="protected">
        </propertyref>
        <propertyref name="RotationCenter" visibility="protected">
        </propertyref>
        <propertyref name="Scale" visibility="protected">
        </propertyref>
        <propertyref name="DisabledOpacity" visibility="protected">
        </propertyref>
        <propertyref name="ParentContent" visibility="protected">
        </propertyref>
        <propertyref name="ParentShowHint" visibility="protected">
        </propertyref>
        <methodref name="Create" visibility="public" procflags="constructor override">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor override">
        </methodref>
        <methodref name="SetNewScene" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="SetBounds" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="AbsoluteToLocal" visibility="public" procflags="overload virtual">
        </methodref>
        <methodref name="AbsoluteToLocal" visibility="public" procflags="overload">
        </methodref>
        <methodref name="LocalToAbsolute" visibility="public" procflags="overload virtual">
        </methodref>
        <methodref name="LocalToAbsolute" visibility="public" procflags="overload">
        </methodref>
        <methodref name="ScreenToLocal" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="LocalToScreen" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="ConvertLocalPointFrom" visibility="public">
        </methodref>
        <methodref name="ConvertLocalPointTo" visibility="public">
        </methodref>
        <methodref name="AbsoluteToLocalVector" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="LocalToAbsoluteVector" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="PointInObject" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="PointInObjectLocal" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="MakeScreenshot" visibility="public">
        </methodref>
        <methodref name="BeginUpdate" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="IsUpdating" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="EndUpdate" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="RecalcAbsoluteNow" visibility="public">
        </methodref>
        <methodref name="RecalcUpdateRect" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="RecalcOpacity" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="RecalcAbsolute" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="RecalcEnabled" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="RecalcHasEffect" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="RecalcHasClipParent" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="PrepareForPaint" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="RecalcSize" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="UpdateEffects" visibility="public">
        </methodref>
        <methodref name="ApplyTriggerEffect" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="StartTriggerAnimation" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="StartTriggerAnimationWait" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="SetFocus" visibility="public">
        </methodref>
        <methodref name="ResetFocus" visibility="public">
        </methodref>
        <methodref name="PaintTo" visibility="public">
        </methodref>
        <methodref name="Repaint" visibility="public">
        </methodref>
        <methodref name="InvalidateRect" visibility="public">
        </methodref>
        <methodref name="Lock" visibility="public">
        </methodref>
        <propertyref name="AbsoluteMatrix" visibility="public">
        </propertyref>
        <propertyref name="AbsoluteOpacity" visibility="public">
        </propertyref>
        <propertyref name="AbsoluteWidth" visibility="public">
        </propertyref>
        <propertyref name="AbsoluteHeight" visibility="public">
        </propertyref>
        <propertyref name="AbsoluteScale" visibility="public">
        </propertyref>
        <propertyref name="AbsoluteEnabled" visibility="public">
        </propertyref>
        <propertyref name="AbsoluteRect" visibility="public">
        </propertyref>
        <propertyref name="AbsoluteClipRect" visibility="public">
        </propertyref>
        <propertyref name="AxisAlignedRect" visibility="public">
        </propertyref>
        <propertyref name="ApplyingEffect" visibility="public">
        </propertyref>
        <propertyref name="HasEffect" visibility="public">
        </propertyref>
        <propertyref name="HasDisablePaintEffect" visibility="public">
        </propertyref>
        <propertyref name="HasAfterPaintEffect" visibility="public">
        </propertyref>
        <propertyref name="HasClipParent" visibility="public">
        </propertyref>
        <propertyref name="ChildrenRect" visibility="public">
        </propertyref>
        <propertyref name="DefaultSize" visibility="public">
        </propertyref>
        <propertyref name="FixedSize" visibility="public">
        </propertyref>
        <propertyref name="InvertAbsoluteMatrix" visibility="public">
        </propertyref>
        <propertyref name="InPaintTo" visibility="public">
        </propertyref>
        <propertyref name="LocalRect" visibility="public">
        </propertyref>
        <propertyref name="Pressed" visibility="public">
        </propertyref>
        <propertyref name="PressedPosition" visibility="public">
        </propertyref>
        <propertyref name="UpdateRect" visibility="public">
        </propertyref>
        <propertyref name="BoundsRect" visibility="public">
        </propertyref>
        <propertyref name="ParentedRect" visibility="public">
        </propertyref>
        <propertyref name="ParentedVisible" visibility="public">
        </propertyref>
        <propertyref name="ClipRect" visibility="public">
        </propertyref>
        <propertyref name="Canvas" visibility="public">
        </propertyref>
        <propertyref name="Controls" visibility="public">
        </propertyref>
        <propertyref name="ControlsCount" visibility="public">
        </propertyref>
        <propertyref name="ParentControl" visibility="public">
        </propertyref>
        <propertyref name="Scene" visibility="public">
        </propertyref>
        <propertyref name="AutoCapture" visibility="public">
        </propertyref>
        <propertyref name="CanFocus" visibility="public">
        </propertyref>
        <propertyref name="CanParentFocus" visibility="public">
        </propertyref>
        <propertyref name="DisableFocusEffect" visibility="public">
        </propertyref>
        <propertyref name="IsInflated" visibility="public">
        </propertyref>
        <methodref name="EnumControls" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EnumControls" visibility="public" procflags="overload" symflags="deprecated">
        </methodref>
        <methodref name="GetTabList" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="ShowInDesigner" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="ShouldTestMouseHits" visibility="public" procflags="virtual">
        </methodref>
        <propertyref name="IsMouseOver" visibility="public">
        </propertyref>
        <propertyref name="IsDragOver" visibility="public">
        </propertyref>
        <propertyref name="IsFocused" visibility="public">
        </propertyref>
        <propertyref name="IsVisible" visibility="public">
        </propertyref>
        <propertyref name="Align" visibility="public">
        </propertyref>
        <propertyref name="Anchors" visibility="public">
        </propertyref>
        <propertyref name="Cursor" visibility="public">
        </propertyref>
        <propertyref name="InheritedCursor" visibility="public">
        </propertyref>
        <propertyref name="DragMode" visibility="public">
        </propertyref>
        <propertyref name="EnableDragHighlight" visibility="public">
        </propertyref>
        <propertyref name="Enabled" visibility="public">
        </propertyref>
        <propertyref name="Position" visibility="public">
        </propertyref>
        <propertyref name="Locked" visibility="public">
        </propertyref>
        <propertyref name="Width" visibility="public">
        </propertyref>
        <propertyref name="Height" visibility="public">
        </propertyref>
        <propertyref name="Size" visibility="public">
        </propertyref>
        <propertyref name="Padding" visibility="public">
        </propertyref>
        <propertyref name="Margins" visibility="public">
        </propertyref>
        <propertyref name="Opacity" visibility="public">
        </propertyref>
        <propertyref name="ClipChildren" visibility="public">
        </propertyref>
        <propertyref name="ClipParent" visibility="public">
        </propertyref>
        <propertyref name="HitTest" visibility="public">
        </propertyref>
        <propertyref name="PopupMenu" visibility="public">
        </propertyref>
        <propertyref name="TabOrder" visibility="public">
        </propertyref>
        <propertyref name="Visible" visibility="public">
        </propertyref>
        <eventref name="CustomSceneAddRect" visibility="public">
        </eventref>
        <eventref name="OnDragEnter" visibility="public">
        </eventref>
        <eventref name="OnDragLeave" visibility="public">
        </eventref>
        <eventref name="OnDragOver" visibility="public">
        </eventref>
        <eventref name="OnDragDrop" visibility="public">
        </eventref>
        <eventref name="OnDragEnd" visibility="public">
        </eventref>
        <eventref name="OnKeyDown" visibility="public">
        </eventref>
        <eventref name="OnKeyUp" visibility="public">
        </eventref>
        <eventref name="OnClick" visibility="public">
        </eventref>
        <eventref name="OnDblClick" visibility="public">
        </eventref>
        <eventref name="OnCanFocus" visibility="public">
        </eventref>
        <eventref name="OnEnter" visibility="public">
        </eventref>
        <eventref name="OnExit" visibility="public">
        </eventref>
        <eventref name="OnMouseDown" visibility="public">
        </eventref>
        <eventref name="OnMouseMove" visibility="public">
        </eventref>
        <eventref name="OnMouseUp" visibility="public">
        </eventref>
        <eventref name="OnMouseWheel" visibility="public">
        </eventref>
        <eventref name="OnMouseEnter" visibility="public">
        </eventref>
        <eventref name="OnMouseLeave" visibility="public">
        </eventref>
        <eventref name="OnPainting" visibility="public">
        </eventref>
        <eventref name="OnPaint" visibility="public">
        </eventref>
        <eventref name="OnResize" visibility="public">
        </eventref>
        <eventref name="OnResized" visibility="public">
        </eventref>
        <eventref name="OnActivate" visibility="public">
        </eventref>
        <eventref name="OnDeactivate" visibility="public">
        </eventref>
        <eventref name="OnApplyStyleLookup" visibility="public">
        </eventref>
        <propertyref name="TouchTargetExpansion" visibility="public">
        </propertyref>
        <propertyref name="TabStop" visibility="public">
        </propertyref>
        <propertyref name="DisableDisappear" visibility="public">
        </propertyref>
        <propertyref name="ShowHint" visibility="public">
        </propertyref>
        <propertyref name="Hint" visibility="public">
        </propertyref>
        <propertyref name="Touch" visibility="published">
        </propertyref>
        <eventref name="OnGesture" visibility="published">
        </eventref>
        <eventref name="OnTap" visibility="published">
        </eventref>
        <ancestor name="TFmxObject" namespace="FMX.Types">
          <interfaces>
            <implements name="IActionClient"/>
            <implements name="IFreeNotification"/>
          </interfaces>
          <methodref name="SetStyleName" visibility="private">
          </methodref>
          <methodref name="SetStored" visibility="private">
          </methodref>
          <methodref name="GetChildrenCount" visibility="private" procflags="inline">
          </methodref>
          <methodref name="GetIndexOfChild" visibility="private">
          </methodref>
          <methodref name="SetIndexOfChild" visibility="private">
          </methodref>
          <methodref name="SetIndex" visibility="private">
          </methodref>
          <methodref name="GetActionRoot" visibility="private">
          </methodref>
          <methodref name="GetActionClient" visibility="private" procflags="inline">
          </methodref>
          <methodref name="SetActionClient" visibility="private">
          </methodref>
          <methodref name="GetAction" visibility="private">
          </methodref>
          <methodref name="SetAction" visibility="private">
          </methodref>
          <methodref name="GetIndex" visibility="private">
          </methodref>
          <methodref name="Create@" visibility="class private" procflags="class constructor noself">
          </methodref>
          <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
          </methodref>
          <methodref name="CreateChildrenList" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="ResetChildrenIndicesSpan" visibility="protected">
          </methodref>
          <methodref name="ResetChildrenIndices" visibility="protected">
          </methodref>
          <methodref name="GetBackIndex" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DefineProperties" visibility="protected" procflags="override">
          </methodref>
          <methodref name="IgnoreBindingName" visibility="protected">
          </methodref>
          <methodref name="GetChildren" visibility="protected" procflags="override">
          </methodref>
          <methodref name="SetParentComponent" visibility="protected" procflags="override">
          </methodref>
          <methodref name="Notification" visibility="protected" procflags="override">
          </methodref>
          <methodref name="GetActionLinkClass" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="InitiateAction" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoActionChange" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="ActionChange" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoActionClientChanged" visibility="protected" procflags="virtual">
          </methodref>
          <propertyref name="ActionLink" visibility="protected">
          </propertyref>
          <propertyref name="Action" visibility="protected">
          </propertyref>
          <propertyref name="StyleIndexer" visibility="protected">
          </propertyref>
          <methodref name="GetParentComponent" visibility="public" procflags="override">
          </methodref>
          <methodref name="HasParent" visibility="public" procflags="override">
          </methodref>
          <methodref name="AddToResourcePool" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="RemoveFromResourcePool" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetParent" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoRootChanging" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoRootChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="ParentChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="ChangeOrder" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="ChangeChildren" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoAddObject" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoInsertObject" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoRemoveObject" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoDeleteChildren" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SearchInto" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="FreeNotification" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SupportsPlatformService" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetData" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetData" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="IgnoreIntegerValue" visibility="protected">
          </methodref>
          <methodref name="IgnoreFloatValue" visibility="protected">
          </methodref>
          <methodref name="IgnoreBooleanValue" visibility="protected">
          </methodref>
          <methodref name="IgnoreIdentValue" visibility="protected">
          </methodref>
          <methodref name="Create" visibility="public" procflags="constructor override">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="BeforeDestruction" visibility="public" procflags="override">
          </methodref>
          <methodref name="Release" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="Released" visibility="public" symflags="deprecated">
          </methodref>
          <methodref name="ObjectState" visibility="public" symflags="deprecated">
          </methodref>
          <methodref name="SetRoot" visibility="public">
          </methodref>
          <methodref name="SetDesign" visibility="public">
          </methodref>
          <methodref name="Clone" visibility="public">
          </methodref>
          <methodref name="AddObject" visibility="public">
          </methodref>
          <methodref name="InsertObject" visibility="public">
          </methodref>
          <methodref name="RemoveObject" visibility="public" procflags="overload">
          </methodref>
          <methodref name="RemoveObject" visibility="public" procflags="overload">
          </methodref>
          <methodref name="ContainsObject" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="Exchange" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="DeleteChildren" visibility="public">
          </methodref>
          <methodref name="IsChild" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="BringChildToFront" visibility="public">
          </methodref>
          <methodref name="SendChildToBack" visibility="public">
          </methodref>
          <methodref name="BringToFront" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="SendToBack" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="AddObjectsToList" visibility="public">
          </methodref>
          <methodref name="Sort" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="EnumObjects" visibility="public">
          </methodref>
          <methodref name="AnimateFloat" visibility="public" symflags="deprecated">
          </methodref>
          <methodref name="AnimateFloatDelay" visibility="public" symflags="deprecated">
          </methodref>
          <methodref name="AnimateFloatWait" visibility="public" symflags="deprecated">
          </methodref>
          <methodref name="AnimateInt" visibility="public" symflags="deprecated">
          </methodref>
          <methodref name="AnimateIntWait" visibility="public" symflags="deprecated">
          </methodref>
          <methodref name="AnimateColor" visibility="public" symflags="deprecated">
          </methodref>
          <methodref name="StopPropertyAnimation" visibility="public">
          </methodref>
          <methodref name="AddFreeNotify" visibility="public">
          </methodref>
          <methodref name="RemoveFreeNotify" visibility="public">
          </methodref>
          <methodref name="FindStyleResource" visibility="public" procflags="overload virtual">
          </methodref>
          <propertyref name="Root" visibility="public">
          </propertyref>
          <propertyref name="Stored" visibility="public">
          </propertyref>
          <propertyref name="TagObject" visibility="public">
          </propertyref>
          <propertyref name="TagFloat" visibility="public">
          </propertyref>
          <propertyref name="TagString" visibility="public">
          </propertyref>
          <propertyref name="ChildrenCount" visibility="public">
          </propertyref>
          <propertyref name="Children" visibility="public">
          </propertyref>
          <propertyref name="Data" visibility="public">
          </propertyref>
          <propertyref name="Parent" visibility="public">
          </propertyref>
          <propertyref name="Index" visibility="public">
          </propertyref>
          <propertyref name="ActionClient" visibility="public">
          </propertyref>
          <propertyref name="StyleName" visibility="published">
          </propertyref>
          <ancestor name="TComponent" namespace="System.Classes">
            <interfaces>
              <implements name="IInterfaceComponentReference"/>
              <implements name="IInterface"/>
            </interfaces>
            <methodref name="GetComObject" visibility="private">
            </methodref>
            <methodref name="GetComponent" visibility="private">
            </methodref>
            <methodref name="GetComponentCount" visibility="private">
            </methodref>
            <methodref name="GetComponentIndex" visibility="private">
            </methodref>
            <methodref name="Insert" visibility="private">
            </methodref>
            <methodref name="ReadLeft" visibility="private">
            </methodref>
            <methodref name="ReadTop" visibility="private">
            </methodref>
            <methodref name="Remove" visibility="private">
            </methodref>
            <methodref name="RemoveNotification" visibility="private">
            </methodref>
            <methodref name="SetComponentIndex" visibility="private">
            </methodref>
            <methodref name="SetReference" visibility="private">
            </methodref>
            <methodref name="WriteLeft" visibility="private">
            </methodref>
            <methodref name="WriteTop" visibility="private">
            </methodref>
            <methodref name="IntfGetComponent" visibility="private">
            </methodref>
            <methodref name="DoGetDeltaStreams" visibility="private">
            </methodref>
            <methodref name="ReadDeltaStream" visibility="private">
            </methodref>
            <methodref name="ReadDeltaState" visibility="private">
            </methodref>
            <methodref name="FindSortedComponent" visibility="private">
            </methodref>
            <methodref name="AddSortedComponent" visibility="private">
            </methodref>
            <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
            </methodref>
            <methodref name="Create@" visibility="class private" procflags="class constructor noself">
            </methodref>
            <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ChangeName" visibility="protected">
            </methodref>
            <methodref name="DefineProperties" visibility="protected" procflags="override">
            </methodref>
            <methodref name="GetChildren" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="GetOwner" visibility="protected" procflags="override">
            </methodref>
            <methodref name="Loaded" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Notification" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="ReadState" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="CanObserve" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetObservers" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetAncestor" visibility="protected">
            </methodref>
            <methodref name="SetDesigning" visibility="protected">
            </methodref>
            <methodref name="SetInline" visibility="protected">
            </methodref>
            <methodref name="SetDesignInstance" visibility="protected">
            </methodref>
            <methodref name="SetName" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="Updating" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="Updated" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
            </methodref>
            <methodref name="ValidateRename" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="WriteState" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="RemoveFreeNotifications" visibility="protected">
            </methodref>
            <methodref name="QueryInterface" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="_AddRef" visibility="protected">
            </methodref>
            <methodref name="_Release" visibility="protected">
            </methodref>
            <methodref name="GetTypeInfoCount" visibility="protected">
            </methodref>
            <methodref name="GetTypeInfo" visibility="protected">
            </methodref>
            <methodref name="GetIDsOfNames" visibility="protected">
            </methodref>
            <methodref name="Invoke" visibility="protected">
            </methodref>
            <eventref name="OnGetDeltaStreams" visibility="protected">
            </eventref>
            <methodref name="Create" visibility="public" procflags="constructor virtual">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor override">
            </methodref>
            <methodref name="BeforeDestruction" visibility="public" procflags="override">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="EndInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="EndInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="EndFunctionInvoke" visibility="public">
            </methodref>
            <methodref name="DestroyComponents" visibility="public">
            </methodref>
            <methodref name="Destroying" visibility="public">
            </methodref>
            <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
            </methodref>
            <methodref name="FindComponent" visibility="public">
            </methodref>
            <methodref name="FreeNotification" visibility="public">
            </methodref>
            <methodref name="RemoveFreeNotification" visibility="public">
            </methodref>
            <methodref name="FreeOnRelease" visibility="public">
            </methodref>
            <methodref name="GetEnumerator" visibility="public" procflags="inline">
            </methodref>
            <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
            </methodref>
            <methodref name="GetNamePath" visibility="public" procflags="override">
            </methodref>
            <methodref name="HasParent" visibility="public" procflags="dynamic">
            </methodref>
            <methodref name="InsertComponent" visibility="public">
            </methodref>
            <methodref name="RemoveComponent" visibility="public">
            </methodref>
            <methodref name="SetSubComponent" visibility="public">
            </methodref>
            <methodref name="SafeCallException" visibility="public" procflags="override">
            </methodref>
            <methodref name="UpdateAction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="IsImplementorOf" visibility="public">
            </methodref>
            <methodref name="ReferenceInterface" visibility="public">
            </methodref>
            <propertyref name="ComObject" visibility="public">
            </propertyref>
            <propertyref name="Components" visibility="public">
            </propertyref>
            <propertyref name="ComponentCount" visibility="public">
            </propertyref>
            <propertyref name="ComponentIndex" visibility="public">
            </propertyref>
            <propertyref name="ComponentState" visibility="public">
            </propertyref>
            <propertyref name="ComponentStyle" visibility="public">
            </propertyref>
            <propertyref name="DesignInfo" visibility="public">
            </propertyref>
            <propertyref name="Owner" visibility="public">
            </propertyref>
            <propertyref name="VCLComObject" visibility="public">
            </propertyref>
            <propertyref name="Observers" visibility="public">
            </propertyref>
            <propertyref name="Name" visibility="published">
            </propertyref>
            <propertyref name="Tag" visibility="published">
            </propertyref>
            <ancestor name="TPersistent" namespace="System.Classes">
              <methodref name="AssignError" visibility="private">
              </methodref>
              <methodref name="AssignTo" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DefineProperties" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetOwner" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor override">
              </methodref>
              <methodref name="Assign" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="GetNamePath" visibility="public" procflags="dynamic">
              </methodref>
              <ancestor name="TObject" namespace="System">
                <methodref name="Create" visibility="public" procflags="constructor">
                </methodref>
                <methodref name="Free" visibility="public">
                </methodref>
                <methodref name="DisposeOf" visibility="public" procflags="inline">
                </methodref>
                <methodref name="InitInstance" visibility="public" procflags="class">
                </methodref>
                <methodref name="CleanupInstance" visibility="public">
                </methodref>
                <methodref name="ClassType" visibility="public" procflags="inline">
                </methodref>
                <methodref name="ClassName" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassNameIs" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassParent" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="ClassInfo" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="InstanceSize" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="InheritsFrom" visibility="public" procflags="class">
                </methodref>
                <methodref name="MethodAddress" visibility="public" procflags="class overload">
                </methodref>
                <methodref name="MethodAddress" visibility="public" procflags="class overload">
                </methodref>
                <methodref name="MethodName" visibility="public" procflags="class">
                </methodref>
                <methodref name="QualifiedClassName" visibility="public" procflags="class">
                </methodref>
                <methodref name="FieldAddress" visibility="public" procflags="overload">
                </methodref>
                <methodref name="FieldAddress" visibility="public" procflags="overload">
                </methodref>
                <methodref name="GetInterface" visibility="public">
                </methodref>
                <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                </methodref>
                <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="UnitName" visibility="public" procflags="class">
                </methodref>
                <methodref name="UnitScope" visibility="public" procflags="class">
                </methodref>
                <methodref name="Equals" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="GetHashCode" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="ToString" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="SafeCallException" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Dispatch" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="NewInstance" visibility="public" procflags="class virtual">
                </methodref>
                <methodref name="FreeInstance" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                </methodref>
                <methodref name="GetDisposed" visibility="protected" procflags="inline">
                </methodref>
                <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                </methodref>
                <propertyref name="Disposed" visibility="protected">
                </propertyref>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <field name="FAdapter" type="IListViewAdapter" visibility="class private" size="4" offset="944" file="FMX.ListView.pas" line="29"/>
      <field name="FHeightSumsNeedUpdate" type="Boolean" visibility="class private" size="1" offset="948" file="FMX.ListView.pas" line="30"/>
      <procedure name="ItemsMayChange" visibility="class private" file="FMX.ListView.pas" line="32">
        <parameters>
          <parameter name="Sender" type="TObject"/>
        </parameters>
      </procedure>
      <procedure name="ItemsCouldHaveChanged" visibility="class private" file="FMX.ListView.pas" line="33">
        <parameters>
          <parameter name="Sender" type="TObject"/>
        </parameters>
      </procedure>
      <procedure name="ItemsChange" visibility="class private" file="FMX.ListView.pas" line="34">
        <parameters>
          <parameter name="Sender" type="TObject"/>
        </parameters>
      </procedure>
      <procedure name="ItemsResize" visibility="class private" file="FMX.ListView.pas" line="35">
        <parameters>
          <parameter name="Sender" type="TObject"/>
        </parameters>
      </procedure>
      <procedure name="ItemsInvalidate" visibility="class private" file="FMX.ListView.pas" line="36">
        <parameters>
          <parameter name="Sender" type="TObject"/>
        </parameters>
      </procedure>
      <procedure name="ResetView" visibility="class private" file="FMX.ListView.pas" line="37">
        <parameters>
          <parameter name="Sender" type="TObject"/>
        </parameters>
      </procedure>
      <procedure name="DoAdapterSet" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="40">
        <devnotes><summary>
Called right after the adapter of the list view is set.


</summary></devnotes>
      </procedure>
      <procedure name="SetAdapter" visibility="protected" file="FMX.ListView.pas" line="42">
        <devnotes><summary>
Setter of Adapter.


</summary></devnotes>
        <parameters>
          <parameter name="Adapter" type="IListViewAdapter"/>
        </parameters>
      </procedure>
      <procedure name="InvalidateHeights" visibility="protected" file="FMX.ListView.pas" line="44">
        <devnotes><summary>
Changes the value of HeightSumsNeedUpdate to True to indicate that the total height of the list view items has changed since the last time that the list view presentation calculated that height.
Subclasses of TAdapterListView that handle the presentation of the list view must change the value of HeightSumsNeedUpdate to False each time that they calculate the total height of the list view items and update the list view presentation accordingly.


</summary></devnotes>
      </procedure>
      <procedure name="DoItemsChange" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="46">
        <devnotes><summary>
Called after the items of the adapter change.
</summary></devnotes>
      </procedure>
      <procedure name="DoItemsMayChange" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="49">
        <devnotes><summary>
Called before the items of the adapter might change as a result of filtering or sorting.
</summary></devnotes>
      </procedure>
      <procedure name="DoItemsCouldHaveChanged" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="52">
        <devnotes><summary>
Called after the items of the adapter might have changed as a result of filtering or sorting.
</summary></devnotes>
      </procedure>
      <procedure name="DoItemsResize" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="54">
        <devnotes><summary>
Called when the size of the items of the adapter has changed.
</summary></devnotes>
      </procedure>
      <procedure name="DoItemsInvalidate" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="57">
        <devnotes><summary>
Called when the items of the adapter need to be painted again.
</summary></devnotes>
      </procedure>
      <procedure name="DoResetView" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="60">
        <devnotes><summary>
Called when the view of the specified item of the adapter needs to be recreated.


</summary></devnotes>
        <parameters>
          <parameter name="Sender" type="TListItem" paramflags="const"/>
        </parameters>
      </procedure>
      <property name="HeightSumsNeedUpdate" visibility="protected" read="FHeightSumsNeedUpdate" write="FHeightSumsNeedUpdate" type="Boolean" file="FMX.ListView.pas" line="62">
        <devnotes><summary>
Indicates whether the total height of the list view items has changed since the last time that the list view presentation calculated that height (True) or not (False).
Subclasses of TAdapterListView that handle the presentation of the list view must change the value of HeightSumsNeedUpdate to False each time that they calculate the total height of the list view items and update the list view presentation accordingly.


</summary></devnotes>
      </property>
      <property name="Adapter" visibility="public" read="FAdapter" write="SetAdapter" type="IListViewAdapter" file="FMX.ListView.pas" line="65">
        <devnotes><summary>
Object that handles all interactions between the list view control and its list view items.
</summary></devnotes>
      </property>
    </members>
  </class>
  <class name="TListViewBase" file="FMX.ListView.pas" line="80">
    
    <ancestor name="TAdapterListView" namespace="FMX.ListView">
      <methodref name="ItemsMayChange" visibility="class private"/>
      <methodref name="ItemsCouldHaveChanged" visibility="class private"/>
      <methodref name="ItemsChange" visibility="class private"/>
      <methodref name="ItemsResize" visibility="class private"/>
      <methodref name="ItemsInvalidate" visibility="class private"/>
      <methodref name="ResetView" visibility="class private"/>
      <methodref name="DoAdapterSet" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="SetAdapter" visibility="protected">
      </methodref>
      <methodref name="InvalidateHeights" visibility="protected">
      </methodref>
      <methodref name="DoItemsChange" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoItemsMayChange" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoItemsCouldHaveChanged" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoItemsResize" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoItemsInvalidate" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoResetView" visibility="protected" procflags="virtual">
      </methodref>
      <propertyref name="HeightSumsNeedUpdate" visibility="protected">
      </propertyref>
      <propertyref name="Adapter" visibility="public">
      </propertyref>
      <ancestor name="TStyledControl" namespace="FMX.Controls">
        <methodref name="GetStyleData" visibility="class private">
        </methodref>
        <methodref name="SetStyleData" visibility="class private">
        </methodref>
        <methodref name="SetStyleLookup" visibility="class private">
        </methodref>
        <methodref name="ScaleChangedHandler" visibility="class private">
        </methodref>
        <methodref name="StyleChangedHandler" visibility="class private">
        </methodref>
        <methodref name="InternalFreeStyle" visibility="private">
        </methodref>
        <methodref name="SearchInto" visibility="protected" procflags="override">
        </methodref>
        <methodref name="GetBackIndex" visibility="protected" procflags="override">
        </methodref>
        <methodref name="IsHelpContextStored" visibility="protected">
        </methodref>
        <methodref name="SetHelpContext" visibility="protected">
        </methodref>
        <methodref name="SetHelpKeyword" visibility="protected">
        </methodref>
        <methodref name="Notification" visibility="protected" procflags="override">
        </methodref>
        <methodref name="DoSetSize" visibility="protected" procflags="override">
        </methodref>
        <methodref name="DoApplyStyleLookup" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="StyleDataChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="RequestStyleData" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Painting" visibility="protected" procflags="override">
        </methodref>
        <methodref name="ApplyStyle" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="FreeStyle" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetStyleContext" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetDefaultStyleLookupName" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetParentClassStyleLookupName" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoEnter" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Disappear" visibility="protected" procflags="override">
        </methodref>
        <methodref name="AdjustSize" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="AdjustFixedSize" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ChooseAdjustType" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoStyleChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="StyleLookupChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="RecycleResourceLink" visibility="protected">
        </methodref>
        <methodref name="KillResourceLink" visibility="protected">
        </methodref>
        <methodref name="DoDeleteChildren" visibility="protected" procflags="override">
        </methodref>
        <methodref name="GenerateStyleName" visibility="protected">
        </methodref>
        <methodref name="GetStyleObject" visibility="protected" procflags="overload virtual">
        </methodref>
        <methodref name="GetStyleObject" visibility="protected" procflags="overload virtual">
        </methodref>
        <methodref name="SetAdjustSizeValue" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetAdjustType" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetResourceLink" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetResourceControl" visibility="protected">
        </methodref>
        <propertyref name="IsNeedStyleLookup" visibility="protected">
        </propertyref>
        <propertyref name="ResourceLink" visibility="protected">
        </propertyref>
        <propertyref name="ResourceControl" visibility="protected">
        </propertyref>
        <methodref name="GetAdjustSizeValue" visibility="protected" procflags="override">
        </methodref>
        <methodref name="GetAdjustType" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Create" visibility="public" procflags="constructor overload override">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="override">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor override">
        </methodref>
        <propertyref name="AdjustType" visibility="public">
        </propertyref>
        <propertyref name="AdjustSizeValue" visibility="public">
        </propertyref>
        <propertyref name="StyleState" visibility="public">
        </propertyref>
        <methodref name="RecalcSize" visibility="public" procflags="override">
        </methodref>
        <methodref name="FindStyleResource" visibility="public" procflags="overload override">
        </methodref>
        <methodref name="FindStyleResource" visibility="public" procflags="overload">
        </methodref>
        <methodref name="FindAndCloneStyleResource" visibility="public">
        </methodref>
        <methodref name="SetNewScene" visibility="public" procflags="override">
        </methodref>
        <methodref name="ApplyStyleLookup" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="NeedStyleLookup" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="Inflate" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="PrepareForPaint" visibility="public" procflags="override">
        </methodref>
        <methodref name="StartTriggerAnimation" visibility="public" procflags="override">
        </methodref>
        <methodref name="StartTriggerAnimationWait" visibility="public" procflags="override">
        </methodref>
        <propertyref name="AutoTranslate" visibility="public">
        </propertyref>
        <propertyref name="DefaultStyleLookupName" visibility="public">
        </propertyref>
        <propertyref name="ParentClassStyleLookupName" visibility="public">
        </propertyref>
        <propertyref name="HelpType" visibility="public">
        </propertyref>
        <propertyref name="HelpKeyword" visibility="public">
        </propertyref>
        <propertyref name="HelpContext" visibility="public">
        </propertyref>
        <propertyref name="StylesData" visibility="public">
        </propertyref>
        <propertyref name="StyleLookup" visibility="public">
        </propertyref>
        <propertyref name="LoadableStyle" visibility="public">
        </propertyref>
        <methodref name="LookupStyleObject" visibility="public" procflags="class">
        </methodref>
        <ancestor name="TControl" namespace="FMX.Controls">
          <interfaces>
            <implements name="ITriggerEffect"/>
            <implements name="ITriggerAnimation"/>
            <implements name="ITabStopController"/>
            <implements name="IGestureControl"/>
            <implements name="IEffectContainer"/>
            <implements name="IAlignableObject"/>
            <implements name="IRotatedControl"/>
            <implements name="IAlignRoot"/>
            <implements name="IContainerObject"/>
            <implements name="IControl"/>
          </interfaces>
          <methodref name="AddToEffectsList" visibility="class private">
          </methodref>
          <methodref name="RemoveFromEffectsList" visibility="class private">
          </methodref>
          <methodref name="GetInvertAbsoluteMatrix" visibility="class private">
          </methodref>
          <methodref name="SetPosition" visibility="class private">
          </methodref>
          <methodref name="SetHitTest" visibility="class private">
          </methodref>
          <methodref name="SetClipChildren" visibility="class private">
          </methodref>
          <methodref name="GetCanvas" visibility="class private" procflags="inline">
          </methodref>
          <methodref name="SetLocked" visibility="class private">
          </methodref>
          <methodref name="SetTempCanvas" visibility="class private">
          </methodref>
          <methodref name="SetOpacity" visibility="class private">
          </methodref>
          <methodref name="IsOpacityStored" visibility="class private">
          </methodref>
          <methodref name="SetCursor" visibility="class private">
          </methodref>
          <methodref name="RefreshInheritedCursor" visibility="class private">
          </methodref>
          <methodref name="RefreshInheritedCursorForChildren" visibility="class private">
          </methodref>
          <methodref name="GetAbsoluteWidth" visibility="class private">
          </methodref>
          <methodref name="GetAbsoluteHeight" visibility="class private">
          </methodref>
          <methodref name="IsAnchorsStored" visibility="class private">
          </methodref>
          <methodref name="GetEnabled" visibility="class private">
          </methodref>
          <methodref name="GetCursor" visibility="class private">
          </methodref>
          <methodref name="GetInheritedCursor" visibility="class private">
          </methodref>
          <methodref name="GetAbsoluteHasEffect" visibility="class private">
          </methodref>
          <methodref name="GetAbsoluteHasDisablePaintEffect" visibility="class private">
          </methodref>
          <methodref name="GetAbsoluteHasAfterPaintEffect" visibility="class private">
          </methodref>
          <methodref name="PaddingChangedHandler" visibility="class private" procflags="overload">
          </methodref>
          <methodref name="MarginsChanged" visibility="class private">
          </methodref>
          <methodref name="MatrixChanged" visibility="class private">
          </methodref>
          <methodref name="SizeChanged" visibility="class private">
          </methodref>
          <methodref name="GetControlsCount" visibility="class private">
          </methodref>
          <methodref name="OnClickStored" visibility="class private">
          </methodref>
          <methodref name="IsPopupMenuStored" visibility="class private">
          </methodref>
          <methodref name="RequestAlign" visibility="class private">
          </methodref>
          <methodref name="SetMinClipHeight" visibility="class private">
          </methodref>
          <methodref name="SetMinClipWidth" visibility="class private">
          </methodref>
          <methodref name="UpdateSmallSizeControl" visibility="class private">
          </methodref>
          <methodref name="Create@" visibility="class private" procflags="class constructor noself">
          </methodref>
          <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
          </methodref>
          <methodref name="SetOnClick" visibility="class private">
          </methodref>
          <methodref name="GetIsFocused" visibility="class private">
          </methodref>
          <methodref name="SetPadding" visibility="class private">
          </methodref>
          <methodref name="SetMargins" visibility="class private">
          </methodref>
          <methodref name="SetTouchTargetExpansion" visibility="class private">
          </methodref>
          <methodref name="InternalSizeChanged" visibility="class private">
          </methodref>
          <methodref name="ReadFixedWidth" visibility="class private">
          </methodref>
          <methodref name="WriteFixedWidth" visibility="class private">
          </methodref>
          <methodref name="ReadFixedHeight" visibility="class private">
          </methodref>
          <methodref name="WriteFixedHeight" visibility="class private">
          </methodref>
          <methodref name="ReadDesignVisible" visibility="class private">
          </methodref>
          <methodref name="ReadHint" visibility="class private">
          </methodref>
          <methodref name="ReadShowHint" visibility="class private">
          </methodref>
          <methodref name="DisabledOpacityStored" visibility="class private">
          </methodref>
          <methodref name="SetDisabledOpacity" visibility="class private">
          </methodref>
          <methodref name="GetAxisAlignedRect" visibility="class private">
          </methodref>
          <methodref name="GetRotationAngle" visibility="class private">
          </methodref>
          <methodref name="GetRotationCenter" visibility="class private">
          </methodref>
          <methodref name="GetScale" visibility="class private">
          </methodref>
          <methodref name="SetRotationAngle" visibility="class private">
          </methodref>
          <methodref name="SetRotationCenter" visibility="class private">
          </methodref>
          <methodref name="SetScale" visibility="class private">
          </methodref>
          <methodref name="GetTabOrder" visibility="class private">
          </methodref>
          <methodref name="SetTabOrder" visibility="class private">
          </methodref>
          <methodref name="GetTabStop" visibility="class private">
          </methodref>
          <methodref name="SetTabStop" visibility="class private">
          </methodref>
          <methodref name="SetDisableDisappear" visibility="class private">
          </methodref>
          <methodref name="GetDisableDisappear" visibility="class private">
          </methodref>
          <methodref name="UpdateParentProperties" visibility="class private">
          </methodref>
          <methodref name="CreateTouchManagerIfRequired" visibility="private">
          </methodref>
          <methodref name="GetTouchManager" visibility="private">
          </methodref>
          <methodref name="SetTouchManager" visibility="private">
          </methodref>
          <methodref name="IsShowHintStored" visibility="private">
          </methodref>
          <methodref name="SetParentShowHint" visibility="private">
          </methodref>
          <methodref name="SetShowHint" visibility="private">
          </methodref>
          <methodref name="GetAbsoluteClipRect" visibility="private">
          </methodref>
          <methodref name="HintStored" visibility="private">
          </methodref>
          <methodref name="RepaintJointArea" visibility="class protected">
          </methodref>
          <methodref name="DoAbsoluteChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="CheckHitTest" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetInPaintTo" visibility="protected">
          </methodref>
          <methodref name="EndUpdateNoChanges" visibility="protected">
          </methodref>
          <methodref name="SetHint" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetEnabled" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="Loaded" visibility="protected" procflags="override">
          </methodref>
          <methodref name="Updated" visibility="protected" procflags="override">
          </methodref>
          <methodref name="DefineProperties" visibility="protected" procflags="override">
          </methodref>
          <methodref name="Notification" visibility="protected" procflags="override">
          </methodref>
          <methodref name="ParentChanged" visibility="protected" procflags="override">
          </methodref>
          <methodref name="ChangeOrder" visibility="protected" procflags="override">
          </methodref>
          <methodref name="ChangeChildren" visibility="protected" procflags="override">
          </methodref>
          <methodref name="SetVisible" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoSetWidth" visibility="protected" procflags="virtual" symflags="deprecated">
          </methodref>
          <methodref name="DoSetHeight" visibility="protected" procflags="virtual" symflags="deprecated">
          </methodref>
          <methodref name="DoSetSize" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="HandleSizeChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoMatrixChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetHeight" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetWidth" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetSize" visibility="protected" procflags="overload virtual">
          </methodref>
          <methodref name="SetSize" visibility="protected" procflags="overload virtual">
          </methodref>
          <methodref name="GetAbsoluteRect" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetChildrenMatrix" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetAbsoluteScale" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetParentedRect" visibility="protected" procflags="virtual" symflags="deprecated">
          </methodref>
          <methodref name="GetClipRect" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetEffectsRect" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetAbsoluteEnabled" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetChildrenRect" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetLocalRect" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetBoundsRect" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetBoundsRect" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="IsHeightStored" visibility="protected" procflags="virtual" symflags="deprecated">
          </methodref>
          <methodref name="IsWidthStored" visibility="protected" procflags="virtual" symflags="deprecated">
          </methodref>
          <methodref name="IsPositionStored" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="IsSizeStored" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetPopupMenu" visibility="protected">
          </methodref>
          <methodref name="GetAbsoluteMatrix" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetHasClipParent" visibility="protected">
          </methodref>
          <methodref name="GetUpdateRect" visibility="protected">
          </methodref>
          <methodref name="DoGetUpdateRect" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetAbsoluteOpacity" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="BeginAutoDrag" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="Capture" visibility="protected">
          </methodref>
          <methodref name="ReleaseCapture" visibility="protected">
          </methodref>
          <propertyref name="EnableExecuteAction" visibility="protected">
          </propertyref>
          <methodref name="Click" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DblClick" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="MouseDown" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="MouseMove" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="MouseUp" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="MouseWheel" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="MouseClick" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="KeyDown" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="KeyUp" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DialogKey" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="AfterDialogKey" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="ShowContextMenu" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DragEnter" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DragOver" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DragDrop" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DragLeave" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DragEnd" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetDefaultTouchTargetExpansion" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetCanFocus" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetCanParentFocus" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="EnterChildren" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="ExitChildren" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetParentedVisible" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="NeedUpdateEffects" visibility="protected">
          </methodref>
          <methodref name="BeforeEffectEnabledChanged" visibility="protected">
          </methodref>
          <methodref name="EffectEnabledChanged" visibility="protected">
          </methodref>
          <methodref name="Realign" visibility="protected">
          </methodref>
          <methodref name="ChildrenAlignChanged" visibility="protected">
          </methodref>
          <methodref name="GetAlign" visibility="protected">
          </methodref>
          <methodref name="SetAlign" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetAnchors" visibility="protected">
          </methodref>
          <methodref name="SetAnchors" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetMargins" visibility="protected">
          </methodref>
          <methodref name="GetPadding" visibility="protected">
          </methodref>
          <methodref name="GetWidth" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetHeight" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetLeft" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetTop" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetAllowAlign" visibility="protected">
          </methodref>
          <methodref name="GetAnchorRules" visibility="protected">
          </methodref>
          <methodref name="GetAnchorOrigin" visibility="protected">
          </methodref>
          <methodref name="GetOriginalParentSize" visibility="protected">
          </methodref>
          <methodref name="GetAnchorMove" visibility="protected">
          </methodref>
          <methodref name="SetAnchorMove" visibility="protected">
          </methodref>
          <methodref name="GetAdjustSizeValue" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetAdjustType" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetContainerWidth" visibility="protected">
          </methodref>
          <methodref name="GetContainerHeight" visibility="protected">
          </methodref>
          <methodref name="GetObject" visibility="protected">
          </methodref>
          <methodref name="GetParent" visibility="protected">
          </methodref>
          <methodref name="GetVisible" visibility="protected">
          </methodref>
          <methodref name="GetDesignInteractive" visibility="protected">
          </methodref>
          <methodref name="GetPopupMenu" visibility="protected">
          </methodref>
          <methodref name="DoEnter" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoExit" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoActivate" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoDeactivate" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoMouseEnter" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoMouseLeave" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="CheckForAllowFocus" visibility="protected">
          </methodref>
          <methodref name="GetDragMode" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetDragMode" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetLocked" visibility="protected">
          </methodref>
          <methodref name="GetHitTest" visibility="protected">
          </methodref>
          <methodref name="GetAcceptsControls" visibility="protected">
          </methodref>
          <methodref name="SetAcceptsControls" visibility="protected">
          </methodref>
          <methodref name="FindTarget" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="ObjectAtPoint" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="HasHint" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetHintString" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetHintObject" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="CanShowHint" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="BroadcastGesture" visibility="protected">
          </methodref>
          <methodref name="CMGesture" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="TouchManager" visibility="protected">
          </methodref>
          <methodref name="GetFirstControlWithGesture" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetFirstControlWithGestureEngine" visibility="protected">
          </methodref>
          <methodref name="GetListOfInteractiveGestures" visibility="protected">
          </methodref>
          <methodref name="Tap" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetFirstVisibleObjectIndex" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetLastVisibleObjectIndex" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetDefaultSize" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="FillTextFlags" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="ApplyEffect" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="PaintInternal" visibility="protected">
          </methodref>
          <methodref name="SupportsPaintStage" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="CanRepaint" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="RepaintRect" visibility="protected">
          </methodref>
          <methodref name="PaintChildren" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="Painting" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="Paint" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoPaint" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="AfterPaint" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DrawDesignBorder" visibility="protected">
          </methodref>
          <methodref name="DoRealign" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoBeginUpdate" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoEndUpdate" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="Move" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="Resize" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoResized" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="Disappear" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="Show" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="Hide" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="AncestorVisibleChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="AncestorParentChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="ClipChildrenChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="HitTestChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="PaddingChanged" visibility="protected" procflags="overload virtual">
          </methodref>
          <propertyref name="MinClipWidth" visibility="protected">
          </propertyref>
          <propertyref name="MinClipHeight" visibility="protected">
          </propertyref>
          <propertyref name="SmallSizeControl" visibility="protected">
          </propertyref>
          <methodref name="DoAddObject" visibility="protected" procflags="override">
          </methodref>
          <methodref name="DoInsertObject" visibility="protected" procflags="override">
          </methodref>
          <methodref name="DoRemoveObject" visibility="protected" procflags="override">
          </methodref>
          <methodref name="DoDeleteChildren" visibility="protected" procflags="override">
          </methodref>
          <propertyref name="PaintStage" visibility="protected">
          </propertyref>
          <propertyref name="TempCanvas" visibility="protected">
          </propertyref>
          <methodref name="SetLeft" visibility="protected">
          </methodref>
          <methodref name="SetTop" visibility="protected">
          </methodref>
          <methodref name="UpdateExplicitBounds" visibility="protected">
          </methodref>
          <methodref name="UpdateAnchorRules" visibility="protected">
          </methodref>
          <propertyref name="Left" visibility="protected">
          </propertyref>
          <propertyref name="Top" visibility="protected">
          </propertyref>
          <propertyref name="ExplicitLeft" visibility="protected">
          </propertyref>
          <propertyref name="ExplicitTop" visibility="protected">
          </propertyref>
          <propertyref name="ExplicitWidth" visibility="protected">
          </propertyref>
          <propertyref name="ExplicitHeight" visibility="protected">
          </propertyref>
          <methodref name="GetActionLinkClass" visibility="protected" procflags="override">
          </methodref>
          <methodref name="ActionChange" visibility="protected" procflags="override">
          </methodref>
          <methodref name="EnabledStored" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="VisibleStored" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="EnabledChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="VisibleChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="IsControlRectEmpty" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetControls" visibility="protected">
          </methodref>
          <methodref name="DoGesture" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetTabStopController" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetTabListClass" visibility="protected" procflags="virtual">
          </methodref>
          <propertyref name="DoubleClick" visibility="protected">
          </propertyref>
          <propertyref name="RotationAngle" visibility="protected">
          </propertyref>
          <propertyref name="RotationCenter" visibility="protected">
          </propertyref>
          <propertyref name="Scale" visibility="protected">
          </propertyref>
          <propertyref name="DisabledOpacity" visibility="protected">
          </propertyref>
          <propertyref name="ParentContent" visibility="protected">
          </propertyref>
          <propertyref name="ParentShowHint" visibility="protected">
          </propertyref>
          <methodref name="Create" visibility="public" procflags="constructor override">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="SetNewScene" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="SetBounds" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="AbsoluteToLocal" visibility="public" procflags="overload virtual">
          </methodref>
          <methodref name="AbsoluteToLocal" visibility="public" procflags="overload">
          </methodref>
          <methodref name="LocalToAbsolute" visibility="public" procflags="overload virtual">
          </methodref>
          <methodref name="LocalToAbsolute" visibility="public" procflags="overload">
          </methodref>
          <methodref name="ScreenToLocal" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="LocalToScreen" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="ConvertLocalPointFrom" visibility="public">
          </methodref>
          <methodref name="ConvertLocalPointTo" visibility="public">
          </methodref>
          <methodref name="AbsoluteToLocalVector" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="LocalToAbsoluteVector" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="PointInObject" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="PointInObjectLocal" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="MakeScreenshot" visibility="public">
          </methodref>
          <methodref name="BeginUpdate" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="IsUpdating" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="EndUpdate" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="RecalcAbsoluteNow" visibility="public">
          </methodref>
          <methodref name="RecalcUpdateRect" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="RecalcOpacity" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="RecalcAbsolute" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="RecalcEnabled" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="RecalcHasEffect" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="RecalcHasClipParent" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="PrepareForPaint" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="RecalcSize" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="UpdateEffects" visibility="public">
          </methodref>
          <methodref name="ApplyTriggerEffect" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="StartTriggerAnimation" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="StartTriggerAnimationWait" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="SetFocus" visibility="public">
          </methodref>
          <methodref name="ResetFocus" visibility="public">
          </methodref>
          <methodref name="PaintTo" visibility="public">
          </methodref>
          <methodref name="Repaint" visibility="public">
          </methodref>
          <methodref name="InvalidateRect" visibility="public">
          </methodref>
          <methodref name="Lock" visibility="public">
          </methodref>
          <propertyref name="AbsoluteMatrix" visibility="public">
          </propertyref>
          <propertyref name="AbsoluteOpacity" visibility="public">
          </propertyref>
          <propertyref name="AbsoluteWidth" visibility="public">
          </propertyref>
          <propertyref name="AbsoluteHeight" visibility="public">
          </propertyref>
          <propertyref name="AbsoluteScale" visibility="public">
          </propertyref>
          <propertyref name="AbsoluteEnabled" visibility="public">
          </propertyref>
          <propertyref name="AbsoluteRect" visibility="public">
          </propertyref>
          <propertyref name="AbsoluteClipRect" visibility="public">
          </propertyref>
          <propertyref name="AxisAlignedRect" visibility="public">
          </propertyref>
          <propertyref name="ApplyingEffect" visibility="public">
          </propertyref>
          <propertyref name="HasEffect" visibility="public">
          </propertyref>
          <propertyref name="HasDisablePaintEffect" visibility="public">
          </propertyref>
          <propertyref name="HasAfterPaintEffect" visibility="public">
          </propertyref>
          <propertyref name="HasClipParent" visibility="public">
          </propertyref>
          <propertyref name="ChildrenRect" visibility="public">
          </propertyref>
          <propertyref name="DefaultSize" visibility="public">
          </propertyref>
          <propertyref name="FixedSize" visibility="public">
          </propertyref>
          <propertyref name="InvertAbsoluteMatrix" visibility="public">
          </propertyref>
          <propertyref name="InPaintTo" visibility="public">
          </propertyref>
          <propertyref name="LocalRect" visibility="public">
          </propertyref>
          <propertyref name="Pressed" visibility="public">
          </propertyref>
          <propertyref name="PressedPosition" visibility="public">
          </propertyref>
          <propertyref name="UpdateRect" visibility="public">
          </propertyref>
          <propertyref name="BoundsRect" visibility="public">
          </propertyref>
          <propertyref name="ParentedRect" visibility="public">
          </propertyref>
          <propertyref name="ParentedVisible" visibility="public">
          </propertyref>
          <propertyref name="ClipRect" visibility="public">
          </propertyref>
          <propertyref name="Canvas" visibility="public">
          </propertyref>
          <propertyref name="Controls" visibility="public">
          </propertyref>
          <propertyref name="ControlsCount" visibility="public">
          </propertyref>
          <propertyref name="ParentControl" visibility="public">
          </propertyref>
          <propertyref name="Scene" visibility="public">
          </propertyref>
          <propertyref name="AutoCapture" visibility="public">
          </propertyref>
          <propertyref name="CanFocus" visibility="public">
          </propertyref>
          <propertyref name="CanParentFocus" visibility="public">
          </propertyref>
          <propertyref name="DisableFocusEffect" visibility="public">
          </propertyref>
          <propertyref name="IsInflated" visibility="public">
          </propertyref>
          <methodref name="EnumControls" visibility="public" procflags="overload">
          </methodref>
          <methodref name="EnumControls" visibility="public" procflags="overload" symflags="deprecated">
          </methodref>
          <methodref name="GetTabList" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="ShowInDesigner" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="ShouldTestMouseHits" visibility="public" procflags="virtual">
          </methodref>
          <propertyref name="IsMouseOver" visibility="public">
          </propertyref>
          <propertyref name="IsDragOver" visibility="public">
          </propertyref>
          <propertyref name="IsFocused" visibility="public">
          </propertyref>
          <propertyref name="IsVisible" visibility="public">
          </propertyref>
          <propertyref name="Align" visibility="public">
          </propertyref>
          <propertyref name="Anchors" visibility="public">
          </propertyref>
          <propertyref name="Cursor" visibility="public">
          </propertyref>
          <propertyref name="InheritedCursor" visibility="public">
          </propertyref>
          <propertyref name="DragMode" visibility="public">
          </propertyref>
          <propertyref name="EnableDragHighlight" visibility="public">
          </propertyref>
          <propertyref name="Enabled" visibility="public">
          </propertyref>
          <propertyref name="Position" visibility="public">
          </propertyref>
          <propertyref name="Locked" visibility="public">
          </propertyref>
          <propertyref name="Width" visibility="public">
          </propertyref>
          <propertyref name="Height" visibility="public">
          </propertyref>
          <propertyref name="Size" visibility="public">
          </propertyref>
          <propertyref name="Padding" visibility="public">
          </propertyref>
          <propertyref name="Margins" visibility="public">
          </propertyref>
          <propertyref name="Opacity" visibility="public">
          </propertyref>
          <propertyref name="ClipChildren" visibility="public">
          </propertyref>
          <propertyref name="ClipParent" visibility="public">
          </propertyref>
          <propertyref name="HitTest" visibility="public">
          </propertyref>
          <propertyref name="PopupMenu" visibility="public">
          </propertyref>
          <propertyref name="TabOrder" visibility="public">
          </propertyref>
          <propertyref name="Visible" visibility="public">
          </propertyref>
          <eventref name="CustomSceneAddRect" visibility="public">
          </eventref>
          <eventref name="OnDragEnter" visibility="public">
          </eventref>
          <eventref name="OnDragLeave" visibility="public">
          </eventref>
          <eventref name="OnDragOver" visibility="public">
          </eventref>
          <eventref name="OnDragDrop" visibility="public">
          </eventref>
          <eventref name="OnDragEnd" visibility="public">
          </eventref>
          <eventref name="OnKeyDown" visibility="public">
          </eventref>
          <eventref name="OnKeyUp" visibility="public">
          </eventref>
          <eventref name="OnClick" visibility="public">
          </eventref>
          <eventref name="OnDblClick" visibility="public">
          </eventref>
          <eventref name="OnCanFocus" visibility="public">
          </eventref>
          <eventref name="OnEnter" visibility="public">
          </eventref>
          <eventref name="OnExit" visibility="public">
          </eventref>
          <eventref name="OnMouseDown" visibility="public">
          </eventref>
          <eventref name="OnMouseMove" visibility="public">
          </eventref>
          <eventref name="OnMouseUp" visibility="public">
          </eventref>
          <eventref name="OnMouseWheel" visibility="public">
          </eventref>
          <eventref name="OnMouseEnter" visibility="public">
          </eventref>
          <eventref name="OnMouseLeave" visibility="public">
          </eventref>
          <eventref name="OnPainting" visibility="public">
          </eventref>
          <eventref name="OnPaint" visibility="public">
          </eventref>
          <eventref name="OnResize" visibility="public">
          </eventref>
          <eventref name="OnResized" visibility="public">
          </eventref>
          <eventref name="OnActivate" visibility="public">
          </eventref>
          <eventref name="OnDeactivate" visibility="public">
          </eventref>
          <eventref name="OnApplyStyleLookup" visibility="public">
          </eventref>
          <propertyref name="TouchTargetExpansion" visibility="public">
          </propertyref>
          <propertyref name="TabStop" visibility="public">
          </propertyref>
          <propertyref name="DisableDisappear" visibility="public">
          </propertyref>
          <propertyref name="ShowHint" visibility="public">
          </propertyref>
          <propertyref name="Hint" visibility="public">
          </propertyref>
          <propertyref name="Touch" visibility="published">
          </propertyref>
          <eventref name="OnGesture" visibility="published">
          </eventref>
          <eventref name="OnTap" visibility="published">
          </eventref>
          <ancestor name="TFmxObject" namespace="FMX.Types">
            <interfaces>
              <implements name="IActionClient"/>
              <implements name="IFreeNotification"/>
            </interfaces>
            <methodref name="SetStyleName" visibility="private">
            </methodref>
            <methodref name="SetStored" visibility="private">
            </methodref>
            <methodref name="GetChildrenCount" visibility="private" procflags="inline">
            </methodref>
            <methodref name="GetIndexOfChild" visibility="private">
            </methodref>
            <methodref name="SetIndexOfChild" visibility="private">
            </methodref>
            <methodref name="SetIndex" visibility="private">
            </methodref>
            <methodref name="GetActionRoot" visibility="private">
            </methodref>
            <methodref name="GetActionClient" visibility="private" procflags="inline">
            </methodref>
            <methodref name="SetActionClient" visibility="private">
            </methodref>
            <methodref name="GetAction" visibility="private">
            </methodref>
            <methodref name="SetAction" visibility="private">
            </methodref>
            <methodref name="GetIndex" visibility="private">
            </methodref>
            <methodref name="Create@" visibility="class private" procflags="class constructor noself">
            </methodref>
            <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
            </methodref>
            <methodref name="CreateChildrenList" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ResetChildrenIndicesSpan" visibility="protected">
            </methodref>
            <methodref name="ResetChildrenIndices" visibility="protected">
            </methodref>
            <methodref name="GetBackIndex" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DefineProperties" visibility="protected" procflags="override">
            </methodref>
            <methodref name="IgnoreBindingName" visibility="protected">
            </methodref>
            <methodref name="GetChildren" visibility="protected" procflags="override">
            </methodref>
            <methodref name="SetParentComponent" visibility="protected" procflags="override">
            </methodref>
            <methodref name="Notification" visibility="protected" procflags="override">
            </methodref>
            <methodref name="GetActionLinkClass" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="InitiateAction" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoActionChange" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ActionChange" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoActionClientChanged" visibility="protected" procflags="virtual">
            </methodref>
            <propertyref name="ActionLink" visibility="protected">
            </propertyref>
            <propertyref name="Action" visibility="protected">
            </propertyref>
            <propertyref name="StyleIndexer" visibility="protected">
            </propertyref>
            <methodref name="GetParentComponent" visibility="public" procflags="override">
            </methodref>
            <methodref name="HasParent" visibility="public" procflags="override">
            </methodref>
            <methodref name="AddToResourcePool" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="RemoveFromResourcePool" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetParent" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoRootChanging" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoRootChanged" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ParentChanged" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ChangeOrder" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ChangeChildren" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoAddObject" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoInsertObject" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoRemoveObject" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoDeleteChildren" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SearchInto" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="FreeNotification" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SupportsPlatformService" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetData" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetData" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="IgnoreIntegerValue" visibility="protected">
            </methodref>
            <methodref name="IgnoreFloatValue" visibility="protected">
            </methodref>
            <methodref name="IgnoreBooleanValue" visibility="protected">
            </methodref>
            <methodref name="IgnoreIdentValue" visibility="protected">
            </methodref>
            <methodref name="Create" visibility="public" procflags="constructor override">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor override">
            </methodref>
            <methodref name="BeforeDestruction" visibility="public" procflags="override">
            </methodref>
            <methodref name="Release" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Released" visibility="public" symflags="deprecated">
            </methodref>
            <methodref name="ObjectState" visibility="public" symflags="deprecated">
            </methodref>
            <methodref name="SetRoot" visibility="public">
            </methodref>
            <methodref name="SetDesign" visibility="public">
            </methodref>
            <methodref name="Clone" visibility="public">
            </methodref>
            <methodref name="AddObject" visibility="public">
            </methodref>
            <methodref name="InsertObject" visibility="public">
            </methodref>
            <methodref name="RemoveObject" visibility="public" procflags="overload">
            </methodref>
            <methodref name="RemoveObject" visibility="public" procflags="overload">
            </methodref>
            <methodref name="ContainsObject" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Exchange" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="DeleteChildren" visibility="public">
            </methodref>
            <methodref name="IsChild" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="BringChildToFront" visibility="public">
            </methodref>
            <methodref name="SendChildToBack" visibility="public">
            </methodref>
            <methodref name="BringToFront" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="SendToBack" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="AddObjectsToList" visibility="public">
            </methodref>
            <methodref name="Sort" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="EnumObjects" visibility="public">
            </methodref>
            <methodref name="AnimateFloat" visibility="public" symflags="deprecated">
            </methodref>
            <methodref name="AnimateFloatDelay" visibility="public" symflags="deprecated">
            </methodref>
            <methodref name="AnimateFloatWait" visibility="public" symflags="deprecated">
            </methodref>
            <methodref name="AnimateInt" visibility="public" symflags="deprecated">
            </methodref>
            <methodref name="AnimateIntWait" visibility="public" symflags="deprecated">
            </methodref>
            <methodref name="AnimateColor" visibility="public" symflags="deprecated">
            </methodref>
            <methodref name="StopPropertyAnimation" visibility="public">
            </methodref>
            <methodref name="AddFreeNotify" visibility="public">
            </methodref>
            <methodref name="RemoveFreeNotify" visibility="public">
            </methodref>
            <methodref name="FindStyleResource" visibility="public" procflags="overload virtual">
            </methodref>
            <propertyref name="Root" visibility="public">
            </propertyref>
            <propertyref name="Stored" visibility="public">
            </propertyref>
            <propertyref name="TagObject" visibility="public">
            </propertyref>
            <propertyref name="TagFloat" visibility="public">
            </propertyref>
            <propertyref name="TagString" visibility="public">
            </propertyref>
            <propertyref name="ChildrenCount" visibility="public">
            </propertyref>
            <propertyref name="Children" visibility="public">
            </propertyref>
            <propertyref name="Data" visibility="public">
            </propertyref>
            <propertyref name="Parent" visibility="public">
            </propertyref>
            <propertyref name="Index" visibility="public">
            </propertyref>
            <propertyref name="ActionClient" visibility="public">
            </propertyref>
            <propertyref name="StyleName" visibility="published">
            </propertyref>
            <ancestor name="TComponent" namespace="System.Classes">
              <interfaces>
                <implements name="IInterfaceComponentReference"/>
                <implements name="IInterface"/>
              </interfaces>
              <methodref name="GetComObject" visibility="private">
              </methodref>
              <methodref name="GetComponent" visibility="private">
              </methodref>
              <methodref name="GetComponentCount" visibility="private">
              </methodref>
              <methodref name="GetComponentIndex" visibility="private">
              </methodref>
              <methodref name="Insert" visibility="private">
              </methodref>
              <methodref name="ReadLeft" visibility="private">
              </methodref>
              <methodref name="ReadTop" visibility="private">
              </methodref>
              <methodref name="Remove" visibility="private">
              </methodref>
              <methodref name="RemoveNotification" visibility="private">
              </methodref>
              <methodref name="SetComponentIndex" visibility="private">
              </methodref>
              <methodref name="SetReference" visibility="private">
              </methodref>
              <methodref name="WriteLeft" visibility="private">
              </methodref>
              <methodref name="WriteTop" visibility="private">
              </methodref>
              <methodref name="IntfGetComponent" visibility="private">
              </methodref>
              <methodref name="DoGetDeltaStreams" visibility="private">
              </methodref>
              <methodref name="ReadDeltaStream" visibility="private">
              </methodref>
              <methodref name="ReadDeltaState" visibility="private">
              </methodref>
              <methodref name="FindSortedComponent" visibility="private">
              </methodref>
              <methodref name="AddSortedComponent" visibility="private">
              </methodref>
              <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
              </methodref>
              <methodref name="Create@" visibility="class private" procflags="class constructor noself">
              </methodref>
              <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ChangeName" visibility="protected">
              </methodref>
              <methodref name="DefineProperties" visibility="protected" procflags="override">
              </methodref>
              <methodref name="GetChildren" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="GetOwner" visibility="protected" procflags="override">
              </methodref>
              <methodref name="Loaded" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Notification" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="ReadState" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="CanObserve" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetObservers" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetAncestor" visibility="protected">
              </methodref>
              <methodref name="SetDesigning" visibility="protected">
              </methodref>
              <methodref name="SetInline" visibility="protected">
              </methodref>
              <methodref name="SetDesignInstance" visibility="protected">
              </methodref>
              <methodref name="SetName" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="Updating" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="Updated" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
              </methodref>
              <methodref name="ValidateRename" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="WriteState" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="RemoveFreeNotifications" visibility="protected">
              </methodref>
              <methodref name="QueryInterface" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="_AddRef" visibility="protected">
              </methodref>
              <methodref name="_Release" visibility="protected">
              </methodref>
              <methodref name="GetTypeInfoCount" visibility="protected">
              </methodref>
              <methodref name="GetTypeInfo" visibility="protected">
              </methodref>
              <methodref name="GetIDsOfNames" visibility="protected">
              </methodref>
              <methodref name="Invoke" visibility="protected">
              </methodref>
              <eventref name="OnGetDeltaStreams" visibility="protected">
              </eventref>
              <methodref name="Create" visibility="public" procflags="constructor virtual">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor override">
              </methodref>
              <methodref name="BeforeDestruction" visibility="public" procflags="override">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="EndInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="EndInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="EndFunctionInvoke" visibility="public">
              </methodref>
              <methodref name="DestroyComponents" visibility="public">
              </methodref>
              <methodref name="Destroying" visibility="public">
              </methodref>
              <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
              </methodref>
              <methodref name="FindComponent" visibility="public">
              </methodref>
              <methodref name="FreeNotification" visibility="public">
              </methodref>
              <methodref name="RemoveFreeNotification" visibility="public">
              </methodref>
              <methodref name="FreeOnRelease" visibility="public">
              </methodref>
              <methodref name="GetEnumerator" visibility="public" procflags="inline">
              </methodref>
              <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
              </methodref>
              <methodref name="GetNamePath" visibility="public" procflags="override">
              </methodref>
              <methodref name="HasParent" visibility="public" procflags="dynamic">
              </methodref>
              <methodref name="InsertComponent" visibility="public">
              </methodref>
              <methodref name="RemoveComponent" visibility="public">
              </methodref>
              <methodref name="SetSubComponent" visibility="public">
              </methodref>
              <methodref name="SafeCallException" visibility="public" procflags="override">
              </methodref>
              <methodref name="UpdateAction" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="IsImplementorOf" visibility="public">
              </methodref>
              <methodref name="ReferenceInterface" visibility="public">
              </methodref>
              <propertyref name="ComObject" visibility="public">
              </propertyref>
              <propertyref name="Components" visibility="public">
              </propertyref>
              <propertyref name="ComponentCount" visibility="public">
              </propertyref>
              <propertyref name="ComponentIndex" visibility="public">
              </propertyref>
              <propertyref name="ComponentState" visibility="public">
              </propertyref>
              <propertyref name="ComponentStyle" visibility="public">
              </propertyref>
              <propertyref name="DesignInfo" visibility="public">
              </propertyref>
              <propertyref name="Owner" visibility="public">
              </propertyref>
              <propertyref name="VCLComObject" visibility="public">
              </propertyref>
              <propertyref name="Observers" visibility="public">
              </propertyref>
              <propertyref name="Name" visibility="published">
              </propertyref>
              <propertyref name="Tag" visibility="published">
              </propertyref>
              <ancestor name="TPersistent" namespace="System.Classes">
                <methodref name="AssignError" visibility="private">
                </methodref>
                <methodref name="AssignTo" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="DefineProperties" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="GetOwner" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor override">
                </methodref>
                <methodref name="Assign" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="GetNamePath" visibility="public" procflags="dynamic">
                </methodref>
                <ancestor name="TObject" namespace="System">
                  <methodref name="Create" visibility="public" procflags="constructor">
                  </methodref>
                  <methodref name="Free" visibility="public">
                  </methodref>
                  <methodref name="DisposeOf" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="InitInstance" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="CleanupInstance" visibility="public">
                  </methodref>
                  <methodref name="ClassType" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="ClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassNameIs" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassParent" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="ClassInfo" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InstanceSize" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InheritsFrom" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="QualifiedClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="GetInterface" visibility="public">
                  </methodref>
                  <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="UnitName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="UnitScope" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="Equals" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="GetHashCode" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="ToString" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="SafeCallException" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Dispatch" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="NewInstance" visibility="public" procflags="class virtual">
                  </methodref>
                  <methodref name="FreeInstance" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                  </methodref>
                  <methodref name="GetDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <propertyref name="Disposed" visibility="protected">
                  </propertyref>
                </ancestor>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <interfaces>
      <implements name="IControlTypeSupportable"/>
      <implements name="IMessageSendingCompatible"/>
      <implements name="IGlyph"/>
      <implements name="IListViewController"/>
      <implements name="IListItemStyleResources"/>
      <implements name="ISearchResponder"/>
    </interfaces>
    <members>
      <const name="ChangeRepaintedIncidentDelay" visibility="private" type="Comp" file="FMX.ListView.pas" line="83">
        <value>
          0.1
        </value>
      </const>
      <const name="PhysicsProcessingInterval" visibility="private" type="Integer" file="FMX.ListView.pas" line="84">
        <value>
          $8
        </value>
      </const>
      <const name="RecurrentTimerInterval" visibility="private" type="Integer" file="FMX.ListView.pas" line="85">
        <value>
          $10
        </value>
      </const>
      <const name="AutoTapScrollingSpeed" visibility="private" type="Integer" file="FMX.ListView.pas" line="86">
        <value>
          $8
        </value>
      </const>
      <const name="AutoTapMaxScrollingTime" visibility="private" type="Integer" file="FMX.ListView.pas" line="87">
        <value>
          $1
        </value>
      </const>
      <const name="TapSelectWaitTime" visibility="private" type="Comp" file="FMX.ListView.pas" line="88">
        <value>
          0.25
        </value>
      </const>
      <const name="SelectionFadeInTime" visibility="private" type="Comp" file="FMX.ListView.pas" line="89">
        <value>
          0.125
        </value>
      </const>
      <const name="SelectionFadeOutTime" visibility="private" type="Comp" file="FMX.ListView.pas" line="90">
        <value>
          0.25
        </value>
      </const>
      <const name="MinScrollThreshold" visibility="private" type="Integer" file="FMX.ListView.pas" line="91">
        <value>
          $A
        </value>
      </const>
      <const name="MinSwypeThreshold" visibility="private" type="Integer" file="FMX.ListView.pas" line="92">
        <value>
          $28
        </value>
      </const>
      <const name="DefaultDeleteButtonWidth" visibility="private" type="Integer" file="FMX.ListView.pas" line="94">
        <value>
          $48
        </value>
      </const>
      <const name="ItemSeparatorTop" visibility="private" type="Integer" file="FMX.ListView.pas" line="96">
        <value>
          $1
        </value>
      </const>
      <const name="ItemSeparatorBottom" visibility="private" type="Integer" file="FMX.ListView.pas" line="97">
        <value>
          $2
        </value>
      </const>
      <const name="EditModeSelectionAlpha" visibility="private" type="Comp" file="FMX.ListView.pas" line="99">
        <value>
          0.25
        </value>
      </const>
      <const name="EditModeAnimationDuration" visibility="private" type="Comp" file="FMX.ListView.pas" line="101">
        <value>
          0.1
        </value>
      </const>
      <const name="DeleteModeAnimationDuration" visibility="private" type="Comp" file="FMX.ListView.pas" line="102">
        <value>
          0.15
        </value>
      </const>
      <const name="DefaultDeleteButtonText" visibility="private" type="string" file="FMX.ListView.pas" line="96">
        <value>
          Delete
        </value>
      </const>
      <const name="PullRefreshIndicatorStrengthStart" visibility="private" type="Integer" file="FMX.ListView.pas" line="105">
        <value>
          $10
        </value>
      </const>
      <const name="PullRefreshIndicatorMaxSteps" visibility="private" type="Integer" file="FMX.ListView.pas" line="106">
        <value>
          $C
        </value>
      </const>
      <const name="DefaultLeftMargin" visibility="private" type="Integer" file="FMX.ListView.pas" line="108">
        <value>
          $A
        </value>
      </const>
      <const name="DefaultRightMargin" visibility="private" type="Integer" file="FMX.ListView.pas" line="109">
        <value>
          $B
        </value>
      </const>
      <type name="THandleChangeEvent" file="FMX.ListView.pas" line="115" procflags="closure">
      </type>
      <type name="TListItemEvent" file="FMX.ListView.pas" line="119" procflags="closure">
      </type>
      <type name="TListItemClickEventEx" file="FMX.ListView.pas" line="125" procflags="closure">
      </type>
      <type name="TListItemEvent" file="FMX.ListView.pas" line="119" procflags="closure">
      </type>
      <type name="TUpdatingItemViewEvent" file="FMX.ListView.pas" line="130" procflags="closure">
      </type>
      <type name="TDeletingItemEvent" file="FMX.ListView.pas" line="132" procflags="closure">
      </type>
      <type name="TDeleteItemEvent" file="FMX.ListView.pas" line="134" procflags="closure">
      </type>
      <type name="TDeleteChangeVisibilityEvent" file="FMX.ListView.pas" line="136" procflags="closure">
      </type>
      <enum name="TDelayedIncident" visibility="private" alias="FMX.ListView.TDelayedIncident" file="FMX.ListView.pas" line="141">
        <element value="0" name="ChangeRepainted" file="FMX.ListView.pas" line="141"/>
        <element value="1" name="Invalidate" file="FMX.ListView.pas" line="141"/>
        <element value="2" name="SetItemIndex" file="FMX.ListView.pas" line="141"/>
        <element value="3" name="ClickEvent" file="FMX.ListView.pas" line="141"/>
      </enum>
      <struct name="TDelayedIncidentEntry" visibility="private" alias="FMX.ListView.TDelayedIncidentEntry" size="32" file="FMX.ListView.pas" line="143">
        <field name="Incident" type="TListViewBase.TDelayedIncident" visibility="public" size="1" offset="0" file="FMX.ListView.pas" line="144"/>
        <field name="Triggered" type="Boolean" visibility="public" size="1" offset="1" file="FMX.ListView.pas" line="145"/>
        <field name="StartTime" type="Double" visibility="public" size="8" offset="8" file="FMX.ListView.pas" line="146"/>
        <field name="TimeToWait" type="Double" visibility="public" size="8" offset="16" file="FMX.ListView.pas" line="147"/>
        <field name="CustomData" type="NativeInt" visibility="public" size="4" offset="24" file="FMX.ListView.pas" line="148"/>
      </struct>
      <enum name="TTransitionType" visibility="private" alias="FMX.ListView.TTransitionType" file="FMX.ListView.pas" line="153">
        <element value="0" name="None" file="FMX.ListView.pas" line="153"/>
        <element value="1" name="EditMode" file="FMX.ListView.pas" line="153"/>
        <element value="2" name="DeleteMode" file="FMX.ListView.pas" line="153"/>
      </enum>
      <enum name="TInternalDragMode" visibility="private" alias="FMX.ListView.TInternalDragMode" file="FMX.ListView.pas" line="155">
        <element value="0" name="None" file="FMX.ListView.pas" line="155"/>
        <element value="1" name="Drag" file="FMX.ListView.pas" line="155"/>
        <element value="2" name="Swype" file="FMX.ListView.pas" line="155"/>
      </enum>
      <struct name="TItemSelectionAlpha" visibility="private" alias="FMX.ListView.TItemSelectionAlpha" size="16" file="FMX.ListView.pas" line="157">
        <field name="StartTime" type="Double" visibility="public" size="8" offset="0" file="FMX.ListView.pas" line="158"/>
        <field name="Alpha" type="Single" visibility="public" size="4" offset="8" file="FMX.ListView.pas" line="159"/>
        <field name="StartAlpha" type="Single" visibility="public" size="4" offset="12" file="FMX.ListView.pas" line="160"/>
        <function name="Create" visibility="public" procflags="static inline" file="FMX.ListView.pas" line="162">
          <parameters>
            <parameter name="StartTime" type="Double" paramflags="const"/>
            <parameter name="Alpha" type="Single" paramflags="const"/>
            <parameter name="StartAlpha" type="Single" paramflags="const"/>
            <retval type="TListViewBase.TItemSelectionAlpha"/>
          </parameters>
        </function>
      </struct>
      <enum name="TPullRefreshAnimation" visibility="private" alias="FMX.ListView.TPullRefreshAnimation" file="FMX.ListView.pas" line="166">
        <element value="0" name="NotPlaying" file="FMX.ListView.pas" line="166"/>
        <element value="1" name="Playing" file="FMX.ListView.pas" line="166"/>
        <element value="2" name="Finished" file="FMX.ListView.pas" line="166"/>
      </enum>
      <enum name="TStateFlag" visibility="private" alias="FMX.ListView.TStateFlag" file="FMX.ListView.pas" line="167">
        <element value="0" name="NeedsRebuild" file="FMX.ListView.pas" line="167"/>
        <element value="1" name="NeedsScrollingLimitsUpdate" file="FMX.ListView.pas" line="167"/>
        <element value="2" name="Invalid" file="FMX.ListView.pas" line="167"/>
        <element value="3" name="Painting" file="FMX.ListView.pas" line="167"/>
        <element value="4" name="ResettingObjects" file="FMX.ListView.pas" line="167"/>
        <element value="5" name="ScrollingActive" file="FMX.ListView.pas" line="167"/>
        <element value="6" name="ScrollingMouseTouch" file="FMX.ListView.pas" line="168"/>
        <element value="7" name="NeedsScrollBarDisplay" file="FMX.ListView.pas" line="168"/>
      </enum>
      <set name="TStateFlags" visibility="private" alias="FMX.ListView.TStateFlags" type="TListViewBase.TStateFlag" file="FMX.ListView.pas" line="169">
        <element name="NeedsRebuild"/>
        <element name="NeedsScrollingLimitsUpdate"/>
        <element name="Invalid"/>
        <element name="Painting"/>
        <element name="ResettingObjects"/>
        <element name="ScrollingActive"/>
        <element name="ScrollingMouseTouch"/>
        <element name="NeedsScrollBarDisplay"/>
      </set>
      <struct name="TEstimatedHeights" visibility="private" alias="FMX.ListView.TEstimatedHeights" size="12" file="FMX.ListView.pas" line="170">
        <field name="Item" type="Single" visibility="public" size="4" offset="0" file="FMX.ListView.pas" line="171"/>
        <field name="Header" type="Single" visibility="public" size="4" offset="4" file="FMX.ListView.pas" line="172"/>
        <field name="Footer" type="Single" visibility="public" size="4" offset="8" file="FMX.ListView.pas" line="173"/>
      </struct>
      <field name="FTimerService" type="IFMXTimerService" visibility="private" size="4" offset="952" file="FMX.ListView.pas" line="177"/>
      <field name="FSystemInformationService" type="IFMXSystemInformationService" visibility="private" size="4" offset="956" file="FMX.ListView.pas" line="178"/>
      <field name="FListingService" type="IFMXListingService" visibility="private" size="4" offset="960" file="FMX.ListView.pas" line="179"/>
      <field name="FStateFlags" type="TListViewBase.TStateFlags" visibility="private" size="1" offset="964" file="FMX.ListView.pas" line="180"/>
      <field name="FRecurrentTimerHandle" type="NativeUInt" visibility="private" size="4" offset="968" file="FMX.ListView.pas" line="181"/>
      <field name="FDelayedIncidents" type="TListViewBase.TDelayedIncidents" visibility="private" size="4" offset="972" file="FMX.ListView.pas" line="182"/>
      <field name="FSelectionAlphas" type="TListViewBase.TItemSelectionAlphas" visibility="private" size="4" offset="976" file="FMX.ListView.pas" line="183"/>
      <field name="FItemIndex" type="Integer" visibility="private" size="4" offset="980" file="FMX.ListView.pas" line="184"/>
      <field name="FAniCalc" type="TAniCalculations" visibility="private" size="4" offset="984" file="FMX.ListView.pas" line="185"/>
      <field name="FScrollViewPos" type="Single" visibility="private" size="4" offset="988" file="FMX.ListView.pas" line="186"/>
      <field name="FBrush" type="TBrush" visibility="private" size="4" offset="992" file="FMX.ListView.pas" line="187"/>
      <field name="FStroke" type="TStrokeBrush" visibility="private" size="4" offset="996" file="FMX.ListView.pas" line="188"/>
      <field name="FMouseDownAt" type="TPointF" visibility="private" size="8" offset="1000" file="FMX.ListView.pas" line="189"/>
      <field name="FMouseClickPrev" type="TPointF" visibility="private" size="8" offset="1008" file="FMX.ListView.pas" line="190"/>
      <field name="FMouseClickDelta" type="TPointF" visibility="private" size="8" offset="1016" file="FMX.ListView.pas" line="191"/>
      <field name="FMouseClicked" type="Boolean" visibility="private" size="1" offset="1024" file="FMX.ListView.pas" line="192"/>
      <field name="FMouseClickIndex" type="Integer" visibility="private" size="4" offset="1028" file="FMX.ListView.pas" line="193"/>
      <field name="FMouseEventIndex" type="Integer" visibility="private" size="4" offset="1032" file="FMX.ListView.pas" line="194"/>
      <field name="FItemSpaces" type="TBounds" visibility="private" size="4" offset="1036" file="FMX.ListView.pas" line="195"/>
      <field name="FMousePrevScrollPos" type="Single" visibility="private" size="4" offset="1040" file="FMX.ListView.pas" line="196"/>
      <field name="FClickEventItemIndex" type="Integer" visibility="private" size="4" offset="1044" file="FMX.ListView.pas" line="197"/>
      <field name="FClickEventMousePos" type="TPointF" visibility="private" size="8" offset="1048" file="FMX.ListView.pas" line="198"/>
      <field name="FClickEventControl" type="TListItemDrawable" visibility="private" size="4" offset="1056" file="FMX.ListView.pas" line="199">
        <attributes>
          <attribute name="TObject"/>
        </attributes>
      </field>
      <field name="FHeightSums" type="TListViewBase.TItemHeightSums" visibility="private" size="4" offset="1060" file="FMX.ListView.pas" line="200"/>
      <field name="FMaxKnownHeight" type="Integer" visibility="private" size="4" offset="1064" file="FMX.ListView.pas" line="201"/>
      <field name="FSideSpace" type="Integer" visibility="private" size="4" offset="1068" file="FMX.ListView.pas" line="202"/>
      <field name="FScrollScale" type="Single" visibility="private" size="4" offset="1072" file="FMX.ListView.pas" line="203"/>
      <field name="FBackgroundStyleColor" type="TAlphaColor" visibility="private" size="4" offset="1076" file="FMX.ListView.pas" line="204"/>
      <field name="FSelectionStyleColor" type="TAlphaColor" visibility="private" size="4" offset="1080" file="FMX.ListView.pas" line="205"/>
      <field name="FItemStyleFillColor" type="TAlphaColor" visibility="private" size="4" offset="1084" file="FMX.ListView.pas" line="206"/>
      <field name="FItemStyleFillAltColor" type="TAlphaColor" visibility="private" size="4" offset="1088" file="FMX.ListView.pas" line="207"/>
      <field name="FItemStyleFrameColor" type="TAlphaColor" visibility="private" size="4" offset="1092" file="FMX.ListView.pas" line="208"/>
      <field name="FSelectionStyleImage" type="TStyleObject" visibility="private" size="4" offset="1096" file="FMX.ListView.pas" line="209">
        <attributes>
          <attribute name="TObject"/>
        </attributes>
      </field>
      <field name="FHeaderStyleImage" type="TStyleObject" visibility="private" size="4" offset="1100" file="FMX.ListView.pas" line="210">
        <attributes>
          <attribute name="TObject"/>
        </attributes>
      </field>
      <field name="FTouchAnimationObject" type="ITouchAnimationObject" visibility="private" size="4" offset="1104" file="FMX.ListView.pas" line="211"/>
      <field name="FScrollBar" type="TScrollBar" visibility="private" size="4" offset="1108" file="FMX.ListView.pas" line="212"/>
      <field name="FTransparent" type="Boolean" visibility="private" size="1" offset="1112" file="FMX.ListView.pas" line="213"/>
      <field name="FAllowSelection" type="Boolean" visibility="private" size="1" offset="1113" file="FMX.ListView.pas" line="214"/>
      <field name="FAlternatingColors" type="Boolean" visibility="private" size="1" offset="1114" file="FMX.ListView.pas" line="215"/>
      <field name="FTapSelectItemIndex" type="Integer" visibility="private" size="4" offset="1116" file="FMX.ListView.pas" line="216"/>
      <field name="FTapSelectNewIndexApplied" type="Integer" visibility="private" size="4" offset="1120" file="FMX.ListView.pas" line="217"/>
      <field name="FTapSelectStartTime" type="Double" visibility="private" size="8" offset="1128" file="FMX.ListView.pas" line="218"/>
      <field name="FShowSelection" type="Boolean" visibility="private" size="1" offset="1136" file="FMX.ListView.pas" line="219"/>
      <field name="FOnChange" type="TNotifyEvent" visibility="private" size="8" offset="1144" file="FMX.ListView.pas" line="220"/>
      <field name="FOnChangeRepainted" type="TNotifyEvent" visibility="private" size="8" offset="1152" file="FMX.ListView.pas" line="221"/>
      <field name="FOnItemsChange" type="TNotifyEvent" visibility="private" size="8" offset="1160" file="FMX.ListView.pas" line="222"/>
      <field name="FOnScrollViewChange" type="TNotifyEvent" visibility="private" size="8" offset="1168" file="FMX.ListView.pas" line="223"/>
      <field name="FOnSearchChange" type="TNotifyEvent" visibility="private" size="8" offset="1176" file="FMX.ListView.pas" line="224"/>
      <field name="FOnFilter" type="TFilterEvent" visibility="private" size="8" offset="1184" file="FMX.ListView.pas" line="225"/>
      <field name="FAutoTapScroll" type="Boolean" visibility="private" size="1" offset="1192" file="FMX.ListView.pas" line="226"/>
      <field name="FAutoTapTreshold" type="Integer" visibility="private" size="4" offset="1196" file="FMX.ListView.pas" line="227"/>
      <field name="FAutoTapDistance" type="Integer" visibility="private" size="4" offset="1200" file="FMX.ListView.pas" line="228"/>
      <field name="FOnListItemClick" type="TListViewBase.TListItemEvent" visibility="private" size="8" offset="1208" file="FMX.ListView.pas" line="229"/>
      <field name="FOnItemClickEx" type="TListViewBase.TListItemClickEventEx" visibility="private" size="8" offset="1216" file="FMX.ListView.pas" line="230"/>
      <field name="FOnItemChange" type="TListViewBase.TListItemEvent" visibility="private" size="8" offset="1224" file="FMX.ListView.pas" line="231"/>
      <field name="FOnEditModeChanging" type="TListViewBase.THandleChangeEvent" visibility="private" size="8" offset="1232" file="FMX.ListView.pas" line="232"/>
      <field name="FOnEditModeChange" type="TNotifyEvent" visibility="private" size="8" offset="1240" file="FMX.ListView.pas" line="233"/>
      <field name="FOnUpdateItemView" type="TListViewBase.TListItemEvent" visibility="private" size="8" offset="1248" file="FMX.ListView.pas" line="234"/>
      <field name="FOnUpdatingItemView" type="TListViewBase.TUpdatingItemViewEvent" visibility="private" size="8" offset="1256" file="FMX.ListView.pas" line="235"/>
      <field name="FOnDeleteChange" type="TListViewBase.TDeleteChangeVisibilityEvent" visibility="private" size="8" offset="1264" file="FMX.ListView.pas" line="236"/>
      <field name="FOnDeletingItem" type="TListViewBase.TDeletingItemEvent" visibility="private" size="8" offset="1272" file="FMX.ListView.pas" line="237"/>
      <field name="FOnDeleteItem" type="TListViewBase.TDeleteItemEvent" visibility="private" size="8" offset="1280" file="FMX.ListView.pas" line="238"/>
      <field name="FOnPullRefresh" type="TNotifyEvent" visibility="private" size="8" offset="1288" file="FMX.ListView.pas" line="239"/>
      <field name="FDeleteButtonText" type="string" visibility="private" size="4" offset="1296" file="FMX.ListView.pas" line="240"/>
      <field name="FEditMode" type="Boolean" visibility="private" size="1" offset="1300" file="FMX.ListView.pas" line="241"/>
      <field name="FCanSwipeDelete" type="Boolean" visibility="private" size="1" offset="1301" file="FMX.ListView.pas" line="242"/>
      <field name="FDeleteButtonIndex" type="Integer" visibility="private" size="4" offset="1304" file="FMX.ListView.pas" line="243"/>
      <field name="FPrevDeleteButtonIndex" type="Integer" visibility="private" size="4" offset="1308" file="FMX.ListView.pas" line="244"/>
      <field name="FStyleResources" type="TListItemStyleResources" visibility="private" size="4" offset="1312" file="FMX.ListView.pas" line="245"/>
      <field name="FUpdatingStyleResources" type="Boolean" visibility="private" size="1" offset="1316" file="FMX.ListView.pas" line="246"/>
      <field name="FDisableMouseWheel" type="Boolean" visibility="private" size="1" offset="1317" file="FMX.ListView.pas" line="247"/>
      <field name="FTransitionStartTime" type="Double" visibility="private" size="8" offset="1320" file="FMX.ListView.pas" line="248"/>
      <field name="FTransitionType" type="TListViewBase.TTransitionType" visibility="private" size="1" offset="1328" file="FMX.ListView.pas" line="249"/>
      <field name="FEditModeTransitionAlpha" type="Single" visibility="private" size="4" offset="1332" file="FMX.ListView.pas" line="250"/>
      <field name="FDeleteModeTransitionAlpha" type="Single" visibility="private" size="4" offset="1336" file="FMX.ListView.pas" line="251"/>
      <field name="FDeleteLayout" type="TLayout" visibility="private" size="4" offset="1340" file="FMX.ListView.pas" line="252"/>
      <field name="FDeleteButton" type="TSpeedButton" visibility="private" size="4" offset="1344" file="FMX.ListView.pas" line="253"/>
      <field name="FDragListMode" type="TListViewBase.TInternalDragMode" visibility="private" size="1" offset="1348" file="FMX.ListView.pas" line="254"/>
      <field name="FSearchEdit" type="TSearchBox" visibility="private" size="4" offset="1352" file="FMX.ListView.pas" line="255"/>
      <field name="FSearchVisible" type="Boolean" visibility="private" size="1" offset="1356" file="FMX.ListView.pas" line="256"/>
      <field name="FSearchAlwaysOnTop" type="Boolean" visibility="private" size="1" offset="1357" file="FMX.ListView.pas" line="257"/>
      <field name="FSelectionCrossfade" type="Boolean" visibility="private" size="1" offset="1358" file="FMX.ListView.pas" line="258"/>
      <field name="FPullToRefresh" type="Boolean" visibility="private" size="1" offset="1359" file="FMX.ListView.pas" line="259"/>
      <field name="FPullRefreshWait" type="Boolean" visibility="private" size="1" offset="1360" file="FMX.ListView.pas" line="260"/>
      <field name="FPullRefreshTriggered" type="Boolean" visibility="private" size="1" offset="1361" file="FMX.ListView.pas" line="261"/>
      <field name="FPullRefreshAnimation" type="TListViewBase.TPullRefreshAnimation" visibility="private" size="1" offset="1362" file="FMX.ListView.pas" line="262"/>
      <field name="FPullRefreshAnimationStartTime" type="Double" visibility="private" size="8" offset="1368" file="FMX.ListView.pas" line="263"/>
      <field name="FPullRefreshAnimationStopTime" type="Double" visibility="private" size="8" offset="1376" file="FMX.ListView.pas" line="264"/>
      <field name="FScrollStretchStrength" type="Single" visibility="private" size="4" offset="1384" file="FMX.ListView.pas" line="265"/>
      <field name="FControlType" type="TControlType" visibility="private" size="1" offset="1388" file="FMX.ListView.pas" line="266"/>
      <field name="FNativeOptions" type="TListViewNativeOptions" visibility="private" size="1" offset="1389" file="FMX.ListView.pas" line="267"/>
      <field name="FImageLink" type="TGlyphImageLink" visibility="private" size="4" offset="1392" file="FMX.ListView.pas" line="268"/>
      <field name="FMessageSender" type="TMessageSender" visibility="private" size="4" offset="1396" file="FMX.ListView.pas" line="269"/>
      <field name="FItemSelectedBeforeChange" type="TListItem" visibility="private" size="4" offset="1400" file="FMX.ListView.pas" line="270"/>
      <field name="FEstimatedHeights" type="TListViewBase.TEstimatedHeights" visibility="private" size="12" offset="1404" file="FMX.ListView.pas" line="271"/>
      <function name="IsRunningOnDesktop" visibility="private" file="FMX.ListView.pas" line="273">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="HasTouchTracking" visibility="private" file="FMX.ListView.pas" line="274">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="HasSearchFeatures" visibility="private" file="FMX.ListView.pas" line="275">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="HasSearchAsItem" visibility="private" file="FMX.ListView.pas" line="276">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="IsDeleteModeAllowed" visibility="private" file="FMX.ListView.pas" line="277">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="HasStretchyScrolling" visibility="private" file="FMX.ListView.pas" line="278">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="HasPhysicsStretchyScrolling" visibility="private" file="FMX.ListView.pas" line="279">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="HasScrollingStretchGlow" visibility="private" file="FMX.ListView.pas" line="280">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="HasPullRefreshStroke" visibility="private" file="FMX.ListView.pas" line="281">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="CanDisplaySelectionForItem" visibility="private" file="FMX.ListView.pas" line="283">
        <parameters>
          <parameter name="Index" type="Integer" paramflags="const"/>
          <parameter name="Item" type="TListItem" paramflags="const">
            <value>
              nil
            </value>
          </parameter>
          <parameter name="IncludeMultiSelect" type="Boolean" paramflags="const">
            <value>
              False
            </value>
          </parameter>
          <parameter name="IncludeCrossFaded" type="Boolean" paramflags="const">
            <value>
              False
            </value>
          </parameter>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="GetDefaultSelectionAlpha" visibility="private" file="FMX.ListView.pas" line="285">
        <parameters>
          <retval type="Single"/>
        </parameters>
      </function>
      <function name="GetItemSelectionAlpha" visibility="private" file="FMX.ListView.pas" line="286">
        <parameters>
          <parameter name="Index" type="Integer" paramflags="const"/>
          <retval type="Single"/>
        </parameters>
      </function>
      <procedure name="DestroyRecurrentTimer" visibility="private" file="FMX.ListView.pas" line="287">
      </procedure>
      <procedure name="UpdateRecurrentTimer" visibility="private" file="FMX.ListView.pas" line="288">
      </procedure>
      <function name="HasRecurrentTimerEvents" visibility="private" file="FMX.ListView.pas" line="289">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <procedure name="RecurrentTimerEvent" visibility="private" file="FMX.ListView.pas" line="290">
      </procedure>
      <procedure name="StartIncident" visibility="private" file="FMX.ListView.pas" line="291">
        <parameters>
          <parameter name="Incident" type="TListViewBase.TDelayedIncident" paramflags="const"/>
          <parameter name="Triggered" type="Boolean" paramflags="const">
            <value>
              True
            </value>
          </parameter>
          <parameter name="TimeToWait" type="Single" paramflags="const">
            <value>
              0
            </value>
          </parameter>
          <parameter name="CustomData" type="NativeInt" paramflags="const">
            <value>
              $0
            </value>
          </parameter>
        </parameters>
      </procedure>
      <procedure name="ProcessIncident" visibility="private" file="FMX.ListView.pas" line="293">
        <parameters>
          <parameter name="Entry" type="TListViewBase.TDelayedIncidentEntry" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="TriggerIncidents" visibility="private" file="FMX.ListView.pas" line="294">
        <parameters>
          <parameter name="Incident" type="TListViewBase.TDelayedIncident" paramflags="const"/>
          <parameter name="ResetStartupTime" type="Boolean" paramflags="const">
            <value>
              True
            </value>
          </parameter>
        </parameters>
      </procedure>
      <procedure name="ProcessDelayedIncidents" visibility="private" file="FMX.ListView.pas" line="295">
      </procedure>
      <procedure name="ProcessTransitionAnimation" visibility="private" file="FMX.ListView.pas" line="296">
      </procedure>
      <procedure name="ProcessTapSelectItem" visibility="private" file="FMX.ListView.pas" line="297">
      </procedure>
      <procedure name="ProcessSelectionAlphas" visibility="private" file="FMX.ListView.pas" line="298">
      </procedure>
      <procedure name="InsertItemCrossFade" visibility="private" file="FMX.ListView.pas" line="299">
        <parameters>
          <parameter name="Index" type="Integer" paramflags="const"/>
          <parameter name="ShowAnimation" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="RemoveItemCrossFade" visibility="private" file="FMX.ListView.pas" line="300">
        <parameters>
          <parameter name="Index" type="Integer" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="StartPullRefreshAnimation" visibility="private" file="FMX.ListView.pas" line="301">
      </procedure>
      <procedure name="ProcessPullRefreshAnimation" visibility="private" file="FMX.ListView.pas" line="302">
      </procedure>
      <function name="GetPullRefreshStrength" visibility="private" file="FMX.ListView.pas" line="303">
        <parameters>
          <retval type="Single"/>
        </parameters>
      </function>
      <function name="GetPullRefreshIndicatorSteps" visibility="private" file="FMX.ListView.pas" line="304">
        <parameters>
          <retval type="Integer"/>
        </parameters>
      </function>
      <function name="GetPullRefreshIndicatorAlpha" visibility="private" file="FMX.ListView.pas" line="305">
        <parameters>
          <retval type="Single"/>
        </parameters>
      </function>
      <function name="GetPullRefreshStrokeWidth" visibility="private" file="FMX.ListView.pas" line="306">
        <parameters>
          <retval type="Single"/>
        </parameters>
      </function>
      <procedure name="PaintPullRefreshIndicator" visibility="private" file="FMX.ListView.pas" line="307">
        <parameters>
          <parameter name="ACanvas" type="TCanvas" paramflags="const"/>
          <parameter name="AStrength" type="Single" paramflags="const"/>
          <parameter name="AOpacity" type="Single" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="PaintPullRefreshStroke" visibility="private" file="FMX.ListView.pas" line="308">
        <parameters>
          <parameter name="ACanvas" type="TCanvas" paramflags="const"/>
          <parameter name="AStrength" type="Single" paramflags="const"/>
          <parameter name="AOpacity" type="Single" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="PaintScrollingStretchGlow" visibility="private" file="FMX.ListView.pas" line="309">
        <parameters>
          <parameter name="ACanvas" type="TCanvas" paramflags="const"/>
          <parameter name="AIntensity" type="Single" paramflags="const"/>
          <parameter name="AOpacity" type="Single" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="UpdatePullRefreshState" visibility="private" file="FMX.ListView.pas" line="310">
      </procedure>
      <procedure name="UpdateScrollStretchStrength" visibility="private" file="FMX.ListView.pas" line="311">
        <parameters>
          <parameter name="NewValue" type="Single" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DeleteButtonClicked" visibility="private" file="FMX.ListView.pas" line="312">
        <parameters>
          <parameter name="Sender" type="TObject"/>
        </parameters>
      </procedure>
      <procedure name="ScrollBarChange" visibility="private" file="FMX.ListView.pas" line="313">
        <parameters>
          <parameter name="Sender" type="TObject"/>
        </parameters>
      </procedure>
      <procedure name="ItemSpacesChange" visibility="private" file="FMX.ListView.pas" line="314">
        <parameters>
          <parameter name="Sender" type="TObject"/>
        </parameters>
      </procedure>
      <procedure name="AniCalcChange" visibility="private" file="FMX.ListView.pas" line="315">
        <parameters>
          <parameter name="Sender" type="TObject"/>
        </parameters>
      </procedure>
      <procedure name="AniCalcStart" visibility="private" file="FMX.ListView.pas" line="316">
        <parameters>
          <parameter name="Sender" type="TObject"/>
        </parameters>
      </procedure>
      <procedure name="AniCalcStop" visibility="private" file="FMX.ListView.pas" line="317">
        <parameters>
          <parameter name="Sender" type="TObject"/>
        </parameters>
      </procedure>
      <function name="GetItemIndex" visibility="private" file="FMX.ListView.pas" line="318">
        <parameters>
          <retval type="Integer"/>
        </parameters>
      </function>
      <procedure name="SetItemIndex" visibility="private" file="FMX.ListView.pas" line="319">
        <parameters>
          <parameter name="Value" type="Integer" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetItemIndexInternal" visibility="private" file="FMX.ListView.pas" line="320">
        <parameters>
          <parameter name="Value" type="Integer" paramflags="const"/>
          <parameter name="DisableSelection" type="Boolean" paramflags="const">
            <value>
              False
            </value>
          </parameter>
          <parameter name="DisableCrossfade" type="Boolean" paramflags="const">
            <value>
              False
            </value>
          </parameter>
        </parameters>
      </procedure>
      <function name="GetMaxScrollViewPos" visibility="private" file="FMX.ListView.pas" line="322">
        <parameters>
          <retval type="Integer"/>
        </parameters>
      </function>
      <procedure name="UpdateScrollViewPos" visibility="private" file="FMX.ListView.pas" line="323">
        <parameters>
          <parameter name="Value" type="Single" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="UpdateSearchEditPos" visibility="private" file="FMX.ListView.pas" line="324">
      </procedure>
      <procedure name="SetScrollViewPos" visibility="private" file="FMX.ListView.pas" line="325">
        <parameters>
          <parameter name="Value" type="Single" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="UpdateScrollingLimits" visibility="private" file="FMX.ListView.pas" line="326">
      </procedure>
      <procedure name="UpdateScrollBar" visibility="private" file="FMX.ListView.pas" line="327">
      </procedure>
      <procedure name="GetNumberOfRenderingPasses" visibility="private" file="FMX.ListView.pas" line="328">
        <parameters>
          <parameter name="StartItem" type="Integer" paramflags="const"/>
          <parameter name="EndItem" type="Integer" paramflags="const"/>
          <parameter name="Passes" type="Integer" paramflags="var"/>
          <parameter name="Subpasses" type="Integer" paramflags="var"/>
        </parameters>
      </procedure>
      <function name="GetItemHeight" visibility="private" procflags="overload virtual" file="FMX.ListView.pas" line="329">
        <parameters>
          <parameter name="Index" type="Integer" paramflags="const"/>
          <retval type="Integer"/>
        </parameters>
      </function>
      <function name="GetItemRelRect" visibility="private" procflags="inline" file="FMX.ListView.pas" line="330">
        <parameters>
          <parameter name="Index" type="Integer" paramflags="const"/>
          <parameter name="LocRect" type="TRectF" paramflags="const"/>
          <parameter name="SideSpace" type="Integer" paramflags="const">
            <value>
              $0
            </value>
          </parameter>
          <retval type="TRectF"/>
        </parameters>
      </function>
      <function name="GetItemGroupSeparators" visibility="private" procflags="inline" file="FMX.ListView.pas" line="331">
        <parameters>
          <parameter name="Index" type="Integer" paramflags="const"/>
          <retval type="Integer"/>
        </parameters>
      </function>
      <function name="FindLocalItemObjectAtPosition" visibility="private" file="FMX.ListView.pas" line="332">
        <parameters>
          <parameter name="ItemIndex" type="Integer" paramflags="const"/>
          <parameter name="Position" type="TPointF" paramflags="const"/>
          <retval type="TListItemDrawable">
            <devnotes>
               <summary>TListItem view is comprised of TListViewDrawables. These are the actual
               view elements that are being painted in the item cells.</summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <function name="GetSeparatorLineHeight" visibility="private" file="FMX.ListView.pas" line="334">
        <parameters>
          <retval type="Single"/>
        </parameters>
      </function>
      <function name="AlignValueToPixel" visibility="private" file="FMX.ListView.pas" line="335">
        <parameters>
          <parameter name="Value" type="Single" paramflags="const"/>
          <retval type="Single"/>
        </parameters>
      </function>
      <procedure name="DrawItemsFill" visibility="private" file="FMX.ListView.pas" line="336">
        <parameters>
          <parameter name="StartItem" type="Integer" paramflags="const"/>
          <parameter name="EndItem" type="Integer" paramflags="const"/>
          <parameter name="LocRect" type="TRectF" paramflags="const"/>
          <parameter name="Opacity" type="Single" paramflags="const"/>
          <parameter name="HeaderIndex" type="Integer" paramflags="const">
            <value>
              $FFFFFFFF
            </value>
          </parameter>
        </parameters>
      </procedure>
      <procedure name="DrawIndexFill" visibility="private" file="FMX.ListView.pas" line="338">
        <parameters>
          <parameter name="AIndex" type="Integer" paramflags="const"/>
          <parameter name="LocRect" type="TRectF" paramflags="const"/>
          <parameter name="Opacity" type="Single" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DrawTouchAnimation" visibility="private" file="FMX.ListView.pas" line="339">
        <parameters>
          <parameter name="Index" type="Integer" paramflags="const"/>
          <parameter name="LocRect" type="TRectF" paramflags="const"/>
          <parameter name="Opacity" type="Single" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetHeaderRelRect" visibility="private" file="FMX.ListView.pas" line="341">
        <parameters>
          <parameter name="StartItem" type="Integer" paramflags="const"/>
          <parameter name="HeaderIndex" type="Integer" paramflags="const"/>
          <parameter name="LocRect" type="TRectF" paramflags="const"/>
          <parameter name="SideSpace" type="Integer" paramflags="const">
            <value>
              $0
            </value>
          </parameter>
          <retval type="TRectF"/>
        </parameters>
      </function>
      <procedure name="DrawHeaderItem" visibility="private" file="FMX.ListView.pas" line="343">
        <parameters>
          <parameter name="LocRect" type="TRectF" paramflags="const"/>
          <parameter name="StartItem" type="Integer" paramflags="const"/>
          <parameter name="HeaderIndex" type="Integer" paramflags="const"/>
          <parameter name="Opacity" type="Single" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DrawListItems" visibility="private" file="FMX.ListView.pas" line="345">
        <parameters>
          <parameter name="AbsOpacity" type="Single" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="UpdateItemLookups" visibility="private" file="FMX.ListView.pas" line="347">
      </procedure>
      <function name="FindItemAbsoluteAt" visibility="private" file="FMX.ListView.pas" line="348">
        <parameters>
          <parameter name="ViewAt" type="Integer" paramflags="const"/>
          <retval type="Integer"/>
        </parameters>
      </function>
      <function name="FindItemAbsoluteAtWithCheck" visibility="private" file="FMX.ListView.pas" line="349">
        <parameters>
          <parameter name="ViewAt" type="Integer" paramflags="const"/>
          <retval type="Integer"/>
        </parameters>
      </function>
      <procedure name="SetSideSpace" visibility="private" file="FMX.ListView.pas" line="350">
        <parameters>
          <parameter name="Value" type="Integer" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetTransparent" visibility="private" file="FMX.ListView.pas" line="351">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetAlternatingColors" visibility="private" file="FMX.ListView.pas" line="352">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetShowSelection" visibility="private" file="FMX.ListView.pas" line="353">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="RecreateNativePresentation" visibility="private" procflags="virtual" file="FMX.ListView.pas" line="354">
      </procedure>
      <procedure name="SetEditMode" visibility="private" file="FMX.ListView.pas" line="356">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetCanSwipeDelete" visibility="private" file="FMX.ListView.pas" line="357">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SelectItem" visibility="private" procflags="virtual" file="FMX.ListView.pas" line="359">
        <parameters>
          <parameter name="ItemIndex" type="Integer" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="UnselectItem" visibility="private" procflags="virtual" file="FMX.ListView.pas" line="360">
        <parameters>
          <parameter name="ItemIndex" type="Integer" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetSelected" visibility="private" file="FMX.ListView.pas" line="361">
        <parameters>
          <retval type="TListItem">
            <devnotes>
               <summary>TListItem is an element that comprises TListView. Each individual item contains a View,
               which in turn is comprised of instances of TListItemDrawable</summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <procedure name="SetSelected" visibility="private" file="FMX.ListView.pas" line="362">
        <parameters>
          <parameter name="Value" type="TListItem" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetNewItemIndex" visibility="private" file="FMX.ListView.pas" line="363">
        <parameters>
          <parameter name="NewIndex" type="Integer" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetSearchVisible" visibility="private" file="FMX.ListView.pas" line="365">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetSearchAlwaysOnTop" visibility="private" file="FMX.ListView.pas" line="366">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetOnFilter" visibility="private" file="FMX.ListView.pas" line="367">
        <parameters>
          <parameter name="Value" type="TFilterEvent" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="OnSearchEditResize" visibility="private" file="FMX.ListView.pas" line="368">
        <parameters>
          <parameter name="Sender" type="TObject"/>
        </parameters>
      </procedure>
      <procedure name="OnSearchEditChange" visibility="private" file="FMX.ListView.pas" line="369">
        <parameters>
          <parameter name="Sender" type="TObject"/>
        </parameters>
      </procedure>
      <function name="DeleteButtonTextStored" visibility="private" file="FMX.ListView.pas" line="370">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <procedure name="SetFilterPredicate" visibility="private" file="FMX.ListView.pas" line="372">
        <parameters>
          <parameter name="Predicate" type="TPredicate&lt;System.string&gt;" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetMessageSender" visibility="private" file="FMX.ListView.pas" line="374">
        <parameters>
          <retval type="TMessageSender"/>
        </parameters>
      </function>
      <procedure name="ReadCanSwipeDelete" visibility="private" file="FMX.ListView.pas" line="376">
        <parameters>
          <parameter name="Reader" type="TReader"/>
        </parameters>
      </procedure>
      <procedure name="ReadIsSearchVisible" visibility="private" file="FMX.ListView.pas" line="377">
        <parameters>
          <parameter name="Reader" type="TReader"/>
        </parameters>
      </procedure>
      <procedure name="ReadIsSearchAlwaysOnTop" visibility="private" file="FMX.ListView.pas" line="378">
        <parameters>
          <parameter name="Reader" type="TReader"/>
        </parameters>
      </procedure>
      <procedure name="ReadEditModeOptions" visibility="private" file="FMX.ListView.pas" line="379">
        <parameters>
          <parameter name="Reader" type="TReader"/>
        </parameters>
      </procedure>
      <function name="GetItemCount" visibility="private" file="FMX.ListView.pas" line="381">
        <parameters>
          <retval type="Integer"/>
        </parameters>
      </function>
      <procedure name="RequestReindexing" visibility="private" file="FMX.ListView.pas" line="384">
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="ItemResized" visibility="private" file="FMX.ListView.pas" line="385">
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="ItemInvalidated" visibility="private" file="FMX.ListView.pas" line="386">
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="ControlClicked" visibility="private" file="FMX.ListView.pas" line="387">
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
          <parameter name="Control" type="TListItemDrawable" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="CheckStateChanged" visibility="private" file="FMX.ListView.pas" line="388">
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
          <parameter name="Control" type="TListItemDrawable" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetScene" visibility="private" file="FMX.ListView.pas" line="389">
        <parameters>
          <retval type="IScene"/>
        </parameters>
      </function>
      <procedure name="DefineProperties" visibility="protected" procflags="override" file="FMX.ListView.pas" line="391">
        <parameters>
          <parameter name="Filer" type="TFiler"/>
        </parameters>
      <devnotes><summary>




Designates methods for storing an object's unpublished data on a stream such as a form file.
FMX.ListView.TListViewBase.DefineProperties inherits from System.Classes.TComponent.DefineProperties. All content below this line refers to System.Classes.TComponent.DefineProperties.
Designates methods for storing an object's unpublished data on a stream such as a form file.
TComponent overrides the DefineProperties method defined in TPersistent to define &quot;fake&quot; Top and Left properties. These are defined so that components that are not controls can be manipulated at design time. However, the Top and Left properties are hidden, that is, they are not published, because only controls appear at run time.
DefineProperties is virtual; descendent classes can override it. When overriding DefineProperties, be aware that the Ancestor property of Filer might be set, and that this property can determine whether or not it is appropriate to write properties.
DefineProperties is called automatically as part of the component streaming system; do not call it directly.
</summary></devnotes></procedure>
      <function name="IsEditMode" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="393">
        <devnotes><summary>
Returns True if in edit mode.


</summary></devnotes>
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <procedure name="DoSetItemIndexInternal" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="395">
        <devnotes><summary>
Used internally by presentation hook.


</summary></devnotes>
        <parameters>
          <parameter name="Value" type="Integer" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DoUpdateScrollViewPos" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="397">
        <devnotes><summary>
Used internally by presentation hook.


</summary></devnotes>
        <parameters>
          <parameter name="Value" type="Single" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DoSetScrollViewPos" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="399">
        <devnotes><summary>
Used internally by presentation hook.


</summary></devnotes>
        <parameters>
          <parameter name="Value" type="Single" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="WillEnterEditMode" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="402">
        <devnotes><summary>
Invoked when the Edit mode is being changed.
If the Edit mode requires a different appearance, this is where an update of appearances needs to be initiated.


</summary></devnotes>
        <parameters>
          <parameter name="Animated" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="HasButtonsInCells" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="404">
        <devnotes><summary>
Returns True if each list view item contains one or more buttons, or False otherwise.
</summary></devnotes>
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="HasDeletionEditMode" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="406">
        <devnotes><summary>
Returns True if the list view supports a mode where you can select list view items to delete, or False otherwise.
</summary></devnotes>
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="HasCheckboxMode" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="408">
        <devnotes><summary>
Returns True if the list view supports a mode where you can select list view items using checkboxes, or False otherwise.
</summary></devnotes>
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <procedure name="ResetEditModeAnimation" visibility="protected" file="FMX.ListView.pas" line="411">
        <devnotes><summary>
Stops edit mode transition animation.


</summary></devnotes>
      </procedure>
      <procedure name="InitEditModeAnimation" visibility="protected" file="FMX.ListView.pas" line="413">
        <devnotes><summary>
Initializes edit mode transition animation.


</summary></devnotes>
      </procedure>
      <procedure name="ResetDeleteModeAnimation" visibility="protected" file="FMX.ListView.pas" line="415">
        <devnotes><summary>
Stops delete mode transition animation.


</summary></devnotes>
      </procedure>
      <procedure name="InitDeleteModeAnimation" visibility="protected" file="FMX.ListView.pas" line="417">
        <devnotes><summary>
Initializes delete mode transition animation.


</summary></devnotes>
      </procedure>
      <procedure name="UpdateDeleteButtonLayout" visibility="protected" file="FMX.ListView.pas" line="419">
        <devnotes><summary>
Updates the layout to place a Delete button.


</summary></devnotes>
      </procedure>
      <procedure name="ProceedDeleteItem" visibility="protected" file="FMX.ListView.pas" line="421">
        <devnotes><summary>
Deletes the item.


</summary></devnotes>
      </procedure>
      <procedure name="ScrollStretchChanged" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="424">
        <devnotes><summary>
This method is invoked when the value of the ScrollStretchStrength property is changed (UpdateScrollStretchStrength).


</summary></devnotes>
      </procedure>
      <property name="ScrollStretchStrength" visibility="protected" read="FScrollStretchStrength" type="Single" default="0" file="FMX.ListView.pas" line="426">
        <devnotes><summary>
Specifies the scroll stretch value when the   PullToRefresh property is invoked.


</summary></devnotes>
      </property>
      <procedure name="SetSelectionCrossfade" visibility="protected" file="FMX.ListView.pas" line="428">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Setter function for the SelectionCrossfade property.


</summary></devnotes></procedure>
      <function name="GetDeleteButtonText" visibility="protected" file="FMX.ListView.pas" line="429">
        <parameters>
          <retval type="string"/>
        </parameters>
      <devnotes><summary>
Getter for the DeleteButtonText property.


</summary></devnotes></function>
      <procedure name="SetDeleteButtonText" visibility="protected" file="FMX.ListView.pas" line="430">
        <parameters>
          <parameter name="Value" type="string" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Setter function for the DeleteButtonText property.


</summary></devnotes></procedure>
      <procedure name="SetPullToRefresh" visibility="protected" file="FMX.ListView.pas" line="431">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Setter function for the PullToRefresh property.


</summary></devnotes></procedure>
      <procedure name="SetControlType" visibility="protected" file="FMX.ListView.pas" line="433">
        <parameters>
          <parameter name="Value" type="TControlType" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Setter function for the ControlType property.


</summary></devnotes></procedure>
      <function name="GetControlType" visibility="protected" file="FMX.ListView.pas" line="434">
        <parameters>
          <retval type="TControlType"/>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></function>
      <procedure name="SetNativeOptions" visibility="protected" file="FMX.ListView.pas" line="435">
        <parameters>
          <parameter name="Value" type="TListViewNativeOptions" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Setter function for the NativeOptions property.


</summary></devnotes></procedure>
      <function name="GetEditModeTransitionAlpha" visibility="protected" file="FMX.ListView.pas" line="438">
        <parameters>
          <retval type="Single"/>
        </parameters>
      <devnotes><summary>
Implements the IListViewController.GetEditModeTransitionAlpha method. 
The GetEditModeTransitionAlpha method of TListViewBase implements the GetClientMargins method of IListViewController.
</summary></devnotes></function>
      <function name="GetDeleteModeTransitionAlpha" visibility="protected" file="FMX.ListView.pas" line="439">
        <parameters>
          <retval type="Single"/>
        </parameters>
      <devnotes><summary>
Implements the IListViewController.GetDeleteModeTransitionAlpha method. 
The GetDeleteModeTransitionAlpha method of TListViewBase implements the GetDeleteModeTransitionAlpha method of IListViewController.
</summary></devnotes></function>
      <procedure name="SetDeleteButtonIndex" visibility="protected" file="FMX.ListView.pas" line="440">
        <parameters>
          <parameter name="NewItemIndex" type="Integer" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <function name="GetItemEditOffset" visibility="protected" file="FMX.ListView.pas" line="441">
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
          <retval type="Single"/>
        </parameters>
      <devnotes><summary>
Implements the IListViewController.GetItemEditOffset method. 
The GetItemEditOffset method of TListViewBase implements the GetItemEditOffset method of IListViewController
</summary></devnotes></function>
      <function name="GetItemDeleteCutoff" visibility="protected" file="FMX.ListView.pas" line="442">
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
          <retval type="Single"/>
        </parameters>
      <devnotes><summary>
Implements the IListViewController.GetItemDeleteCutoff  method. 
The GetItemDeleteCutoff method of TListViewBase implements the IListViewController.GetItemDeleteCutoff method of IListViewController.
</summary></devnotes></function>
      <function name="GetClientMargins" visibility="protected" file="FMX.ListView.pas" line="443">
        <parameters>
          <retval type="TRectF"/>
        </parameters>
      <devnotes><summary>
Implements the IListViewController.GetClientMargins method.
The GetClientMargins method of TListViewBase implements the GetClientMargins method of IListViewController.
</summary></devnotes></function>
      <function name="GetItemCurrentSelectionAlpha" visibility="protected" file="FMX.ListView.pas" line="444">
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
          <retval type="Single"/>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></function>
      <function name="GetImages" visibility="protected" file="FMX.ListView.pas" line="446">
        <parameters>
          <retval type="TCustomImageList"/>
        </parameters>
      <devnotes><summary>
Returns list of images.
Can be nil.
</summary></devnotes></function>
      <procedure name="SetImages" visibility="protected" file="FMX.ListView.pas" line="447">
        <parameters>
          <parameter name="Value" type="TCustomImageList" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Returns list of images.
Can be nil.
</summary></devnotes></procedure>
      <procedure name="DoRequestReindexing" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="450">
        <devnotes><summary>
Hook for the  IListViewController.RequestReindexing.
</summary></devnotes>
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DoItemResized" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="452">
        <devnotes><summary>
Hook for the  IListViewController.ItemResized.
</summary></devnotes>
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DoItemInvalidated" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="454">
        <devnotes><summary>
Notifies the TListView that the item requires repainting.


</summary></devnotes>
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DoCheckStateChanged" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="456">
        <devnotes><summary>
Notifies the TListView that a control inside of an item is clicked.


</summary></devnotes>
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
          <parameter name="Control" type="TListItemDrawable" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DoControlClicked" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="458">
        <devnotes><summary>
Notifies the TListView that an item is clicked.


</summary></devnotes>
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
          <parameter name="Control" type="TListItemDrawable" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetImageIndex" visibility="protected" file="FMX.ListView.pas" line="461">
        <parameters>
          <retval type="TImageIndex"/>
        </parameters>
      <devnotes><summary>
Declares the zero-based index of an image. 
If you use a non-existent index to access an image in the images list, then no image is retrieved and no exception is raised. The usual default value is -1.
</summary></devnotes></function>
      <procedure name="SetImageIndex" visibility="protected" file="FMX.ListView.pas" line="462">
        <parameters>
          <parameter name="Value" type="TImageIndex" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Declares the setter for ImageIndex.


</summary></devnotes></procedure>
      <function name="GetImageList" visibility="protected" procflags="inline" file="FMX.ListView.pas" line="463">
        <parameters>
          <retval type="TBaseImageList"/>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></function>
      <procedure name="SetImageList" visibility="protected" file="FMX.ListView.pas" line="464">
        <parameters>
          <parameter name="Value" type="TBaseImageList" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <function name="GetStyleResources" visibility="protected" file="FMX.ListView.pas" line="468">
        <parameters>
          <retval type="TListItemStyleResources">
            <devnotes>
               <summary>A container used for passing various style-defined properties used in <c>TListView</c></summary>
            </devnotes>
          </retval>
        </parameters>
      <devnotes><summary>
Implements the IListItemStyleResources.GetStyleResources method. 
The GetStyleResources method of TListViewBase implements the GetStyleResources method of IListItemStyleResources.
</summary></devnotes></function>
      <function name="StyleResourcesNeedUpdate" visibility="protected" file="FMX.ListView.pas" line="469">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
Implements the IListItemStyleResources.StyleResourcesNeedUpdate method. 
The StyleResourcesNeedUpdate method of TListViewBase implements the StyleResourcesNeedUpdate method of FMX.ListView.Types.IListItemStyleResources.
</summary></devnotes></function>
      <procedure name="SetItemSpaces" visibility="protected" file="FMX.ListView.pas" line="471">
        <parameters>
          <parameter name="Value" type="TBounds" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Protected setter implementation for the ItemSpaces property.
</summary></devnotes></procedure>
      <function name="GetItemClientRect" visibility="protected" file="FMX.ListView.pas" line="472">
        <parameters>
          <parameter name="Index" type="Integer" paramflags="const"/>
          <retval type="TRectF"/>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></function>
      <function name="GetEstimatedItemHeight" visibility="protected" file="FMX.ListView.pas" line="473">
        <parameters>
          <retval type="Single"/>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></function>
      <function name="GetEstimatedHeaderHeight" visibility="protected" file="FMX.ListView.pas" line="474">
        <parameters>
          <retval type="Single"/>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></function>
      <function name="GetEstimatedFooterHeight" visibility="protected" file="FMX.ListView.pas" line="475">
        <parameters>
          <retval type="Single"/>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></function>
      <procedure name="ImagesChanged" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="480">
        <devnotes><summary>
Should be called when the component needs to redraw the image.
ImagesChanged should be called
when you change the Images reference to the TCustomImageList object or 
the object itself or when you change the ImageIndex property.
</summary></devnotes>
      </procedure>
      <procedure name="Paint" visibility="protected" procflags="override" file="FMX.ListView.pas" line="481">
      <devnotes><summary>
Renders the list view.
</summary></devnotes></procedure>
      <procedure name="AfterPaint" visibility="protected" procflags="override" file="FMX.ListView.pas" line="482">
      <devnotes><summary>
Restores Canvas properties after the painting process. 
FMX.ListView.TListViewBase.AfterPaint inherits from FMX.Controls.TControl.AfterPaint. All content below this line refers to FMX.Controls.TControl.AfterPaint.
Restores Canvas properties after the painting process. 
As implemented in TControl, AfterPaint does nothing.
TShape descendants of TControl override AfterPaint to restore Dash and  Thickness to default values.   
</summary></devnotes></procedure>
      <procedure name="Loaded" visibility="protected" procflags="override" file="FMX.ListView.pas" line="483">
      <devnotes><summary>
Initializes the component after the form file has been read into memory.
FMX.ListView.TListViewBase.Loaded inherits from FMX.Controls.TControl.Loaded. All content below this line refers to FMX.Controls.TControl.Loaded.
Initializes the component after the form file has been read into memory. 
Loaded inherits TComponent.Loaded, realigns the children, if any, and updates the tab list.
For details, see TComponent.Loaded.
</summary></devnotes></procedure>
      <procedure name="MouseDown" visibility="protected" procflags="override" file="FMX.ListView.pas" line="484">
        <parameters>
          <parameter name="Button" type="TMouseButton"/>
          <parameter name="Shift" type="TShiftState"/>
          <parameter name="X" type="Single"/>
          <parameter name="Y" type="Single"/>
        </parameters>
      <devnotes><summary>
OnMouseDown event dispatcher. 
FMX.ListView.TListViewBase.MouseDown inherits from FMX.Controls.TControl.MouseDown. All content below this line refers to FMX.Controls.TControl.MouseDown.
OnMouseDown event dispatcher. 
A control calls MouseDown in response to any of mouse-down messages, decoding the message parameters into the shift-key state and position, which it passes in the Shift, X, and Y parameters, respectively:

Button determines which mouse button is pressed: left, right, or middle.
Shift indicates which shift keys--SHIFT, CTRL, ALT, and CMD (only for Mac)--were down when the user pressed the mouse button.
X and Y are the pixel coordinates of the mouse pointer within the client area of the control. If Button is mbLeft, MouseDown sets PressedPosition as a TPointF(X,Y).
Override the protected MouseDown method to provide other responses when a mouse button is down while the cursor is over the control.

</summary></devnotes></procedure>
      <procedure name="MouseMove" visibility="protected" procflags="override" file="FMX.ListView.pas" line="485">
        <parameters>
          <parameter name="Shift" type="TShiftState"/>
          <parameter name="X" type="Single"/>
          <parameter name="Y" type="Single"/>
        </parameters>
      <devnotes><summary>
OnMouseMove event dispatcher. 
FMX.ListView.TListViewBase.MouseMove inherits from FMX.Controls.TControl.MouseMove. All content below this line refers to FMX.Controls.TControl.MouseMove.
OnMouseMove event dispatcher. 
As the mouse cursor moves across a control, this method is called repeatedly. Each time it is called with the new coordinates that reflect the continuous path of the mouse cursor across the screen real estate covered by the control's visual representation:

Shift indicates which shift keys--SHIFT, CTRL, ALT, and CMD (only for Mac)--were down when the mouse cursor is over the control.
X and Y are the pixel coordinates of the mouse pointer within the client area of the control.
Override the protected MouseMove method to provide other responses when the mouse cursor moves over the control.
</summary></devnotes></procedure>
      <procedure name="MouseUp" visibility="protected" procflags="override" file="FMX.ListView.pas" line="486">
        <parameters>
          <parameter name="Button" type="TMouseButton"/>
          <parameter name="Shift" type="TShiftState"/>
          <parameter name="X" type="Single"/>
          <parameter name="Y" type="Single"/>
        </parameters>
      <devnotes><summary>
OnMouseUp event dispatcher. 
FMX.ListView.TListViewBase.MouseUp inherits from FMX.Controls.TControl.MouseUp. All content below this line refers to FMX.Controls.TControl.MouseUp.
OnMouseUp event dispatcher. 
A control calls MouseUp in response to any of mouse-up messages, decoding the message parameters into the shift-key state and position, which it passes in the Shift, X and Y parameters, respectively: 

Button determines which mouse button was previously pressed: left, right, or middle.
Shift indicates which shift keys--SHIFT, CTRL, ALT, and CMD (only for Mac)--were down when the pressed mouse button is released.
X and Y are the pixel coordinates of the mouse pointer within the client area of the control.
Override the protected MouseUp method to provide other responses when the mouse button previously pressed is released while the cursor is over the control.
</summary></devnotes></procedure>
      <procedure name="MouseWheel" visibility="protected" procflags="override" file="FMX.ListView.pas" line="487">
        <parameters>
          <parameter name="Shift" type="TShiftState"/>
          <parameter name="WheelDelta" type="Integer"/>
          <parameter name="Handled" type="Boolean" paramflags="var"/>
        </parameters>
      <devnotes><summary>
OnMouseWheel event dispatcher. 
FMX.ListView.TListViewBase.MouseWheel inherits from FMX.Controls.TControl.MouseWheel. All content below this line refers to FMX.Controls.TControl.MouseWheel.
OnMouseWheel event dispatcher. 
A control calls MouseWheel in response to any of mouse wheel messages, decoding the message parameters into the shift-key state, wheel rotation, and handle, which it passes in the Shift, WheelDelta, and Handled parameters, respectively:

Shift indicates which shift keys--SHIFT, CTRL, ALT, and CMD (only for Mac)--were down when the pressed mouse button is released.
WheelDelta indicates the distance the wheel was rotated. WheelDelta is positive if the mouse was rotated upward, negative if the mouse was rotated downward.
Handled indicates whether the scroll bar was already moved, depending on the WheelDelta value. If one of the scrolls bars (vertical or horizontal) was already handled or it does not exist, MouseWheel tries to apply the rolling on the other scroll bar, if it exists.
Override the protected MouseWheel method to provide other responses when the mouse wheel is rotated while the cursor is over the control.
</summary></devnotes></procedure>
      <procedure name="KeyDown" visibility="protected" procflags="override" file="FMX.ListView.pas" line="488">
        <parameters>
          <parameter name="Key" type="Word" paramflags="var"/>
          <parameter name="KeyChar" type="Char" paramflags="var"/>
          <parameter name="Shift" type="TShiftState"/>
        </parameters>
      <devnotes><summary>
Provides a response when a key is pressed down while the control has the keyboard focus. 
FMX.ListView.TListViewBase.KeyDown inherits from FMX.Controls.TControl.KeyDown. All content below this line refers to FMX.Controls.TControl.KeyDown.
Provides a response when a key is pressed down while the control has the keyboard focus. 
If the pressed key is the Applications key (Key = vkApps), then KeyDown shows the context menu of the control. Otherwise, KeyDown calls the OnKeyDown event handler if one is assigned. 
TCommonCustomForm and descendant of TControl classes--like TCustomGrid--call KeyDown from their methods handling key pressing. They decode the message parameters into the key code, character code, and shift state. They pass them into the called KeyDown method in the Key, KeyChar, and Shift parameters, respectively:  



Parameters

Descriptions



Key



Is the scan code of the pressed keyboard key or $0.
If a pressed key combination can be a shortcut, then Key &lt;&gt; 0 is a virtual key and KeyChar = #0. 
Physical scan codes of the same key can differ under different platforms (Windows or iOS).
Platform-specific units (for example FMX.Platform.Mac.pas) should translate native scan codes to corresponding Windows codes defined in the UITypes unit.  For example, 

vkReturn = $0D;  {  13 } corresponds to the RETURN keyboard key.
vkF2     = $71;  { 113 } corresponds to the F2 keyboard key.



KeyChar



Is the pressed character (digit) or #0.
If a pressed key combination can be treated as a printable character or digit, then Key = 0 and KeyChar contains a pressed symbol according to the current keyboard's input language, keyboard mode (CAPS LOCK and NUM LOCK keys), keyboard Shift state, and IME state. Editors can use this symbol to add into a text being edited. 




Shift



Indicates which shift keys--SHIFT, CTRL, ALT, and CMD (only for Mac)--were down when the specified key was pressed with the control in focus.


If the control has successfully processed the pressed key combination and no additional processing is required, then KeyDown assigns Key = 0 and KeyChar = #0.  
Override the protected KeyDown method to provide other responses when a key is down while the control has keyboard input focus.
See TCommonCustomForm.KeyDown for more information about parameters.
</summary></devnotes></procedure>
      <function name="ObjectAtPoint" visibility="protected" procflags="override" file="FMX.ListView.pas" line="489">
        <parameters>
          <parameter name="P" type="TPointF"/>
          <retval type="IControl"/>
        </parameters>
      <devnotes><summary>
Returns the control in which a specified point can be found.
FMX.ListView.TListViewBase.ObjectAtPoint inherits from FMX.Controls.TControl.ObjectAtPoint. All content below this line refers to FMX.Controls.TControl.ObjectAtPoint.
Returns the control in which a specified point can be found.
P is the specified point in the object.
ObjectAtPoint returns the control in which the P point is found. 
To start searching within the current control, the control must be visible and enabled. If P is within a child of the control and the child is also a control, the search continues inside the child. 
If P is inside the control (not within a child) and the control can be hit, then ObjectAtPoint returns the control. 
ObjectAtPoint is used internally.
</summary></devnotes></function>
      <procedure name="DoMouseLeave" visibility="protected" procflags="override" file="FMX.ListView.pas" line="490">
      <devnotes><summary>
OnMouseLeave event dispatcher.
FMX.ListView.TListViewBase.DoMouseLeave inherits from FMX.Controls.TControl.DoMouseLeave. All content below this line refers to FMX.Controls.TControl.DoMouseLeave.
OnMouseLeave event dispatcher.
DoMouseLeave is called automatically when the mouse pointer leaves the control's area.
DoMouseLeave starts the animation by calling StartTriggerAnimation and applies effects by calling ApplyTriggerEffect to background the control. 
Override the protected DoMouseLeave method to provide other responses when the mouse pointer leaves the control's area.
</summary></devnotes></procedure>
      <procedure name="Resize" visibility="protected" procflags="override" file="FMX.ListView.pas" line="491">
      <devnotes><summary>
OnResize event dispatcher. 
FMX.ListView.TListViewBase.Resize inherits from FMX.Controls.TControl.Resize. All content below this line refers to FMX.Controls.TControl.Resize.
OnResize event dispatcher. 
A control calls Resize when the dimensions of the control change.
Derived classes can override the protected Resize method to implement specific responses to control resizing.
</summary></devnotes></procedure>
      <function name="GetDefaultStyleLookupName" visibility="protected" procflags="override" file="FMX.ListView.pas" line="492">
        <parameters>
          <retval type="string"/>
        </parameters>
      <devnotes><summary>
Protected getter implementation for the DefaultStyleLookupName property.
FMX.ListView.TListViewBase.GetDefaultStyleLookupName inherits from FMX.Controls.TStyledControl.GetDefaultStyleLookupName. All content below this line refers to FMX.Controls.TStyledControl.GetDefaultStyleLookupName.
Protected getter implementation for the DefaultStyleLookupName property.
When you Create a styled FireMonkey component by extending an existing component, override this method, if you want your component to inherit styles from the parent component. See Step 2 - Implement a Property to Specify the Format: Inheriting Styles of the Parent Component for more information and example code.
</summary></devnotes></function>
      <procedure name="ApplyStyle" visibility="protected" procflags="override" file="FMX.ListView.pas" line="493">
      <devnotes><summary>
Customizes styles in complex objects.
FMX.ListView.TListViewBase.ApplyStyle inherits from FMX.Controls.TStyledControl.ApplyStyle. All content below this line refers to FMX.Controls.TStyledControl.ApplyStyle.
Customizes styles in complex objects.
TStyledControl descendants override it to apply styles in concordance with their primitive components.      
Do not call ApplyStyle explicitly in an application. It is called by the ApplyStyleLookup method when object styles are updated.
For an example of an ApplyStyle implementation, see &quot;TCalloutPanel:Style Contracts&quot; in FireMonkey Component Design.
</summary></devnotes></procedure>
      <procedure name="FreeStyle" visibility="protected" procflags="override" file="FMX.ListView.pas" line="494">
      <devnotes><summary>
Frees the style of TStyledControl.
FMX.ListView.TListViewBase.FreeStyle inherits from FMX.Controls.TStyledControl.FreeStyle. All content below this line refers to FMX.Controls.TStyledControl.FreeStyle.
Frees the style of TStyledControl.
Override it to free additional component-specific style resources.
</summary></devnotes></procedure>
      <procedure name="Invalidate" visibility="protected" file="FMX.ListView.pas" line="495">
      <devnotes><summary>
Forces the repainting of the surface of the rectangle holding this list view component.
</summary></devnotes></procedure>
      <procedure name="DoRealign" visibility="protected" procflags="override" file="FMX.ListView.pas" line="496">
      <devnotes><summary>
Realigns and repaints the ListView.
</summary></devnotes></procedure>
      <procedure name="DoExit" visibility="protected" procflags="override" file="FMX.ListView.pas" line="497">
      <devnotes><summary>
OnExit event dispatcher.
FMX.ListView.TListViewBase.DoExit inherits from FMX.Controls.TControl.DoExit. All content below this line refers to FMX.Controls.TControl.DoExit.
OnExit event dispatcher.
DoExit is called automatically when the input focus moves from the current object.
DoExit repaints the control, starts the animation by calling StartTriggerAnimation, and applies effects by calling ApplyTriggerEffect. When a control receives focus, it is highlighted. The animations and effects applied by DoExit background the control.
Override the protected DoExit method to provide other responses when the focus moves from the current control.
</summary></devnotes></procedure>
      <procedure name="DoChange" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="500">
        <devnotes><summary>
Responds to changing the visibility or appearance of the list view component and also to changing the indexes of list items.
The DoChange method also fires an OnChange event.
</summary></devnotes>
      </procedure>
      <procedure name="DoChangeRepainted" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="502">
        <devnotes><summary>
Handles the TDelayedIncident.ChangeRepainted incident.


</summary></devnotes>
      </procedure>
      <procedure name="DoListItemChange" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="504">
        <devnotes><summary>
Invokes the OnItemChange handler.


</summary></devnotes>
        <parameters>
          <parameter name="AListItem" type="TListItem" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DoListItemClick" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="506">
        <devnotes><summary>
Invokes the OnListItemClick handler.


</summary></devnotes>
        <parameters>
          <parameter name="AListItem" type="TListItem" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DoEditModeChange" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="508">
        <devnotes><summary>
Invokes the OnEditModeChange handler.


</summary></devnotes>
      </procedure>
      <procedure name="DoEditModeChanging" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="510">
        <devnotes><summary>
Responds to entering of the list view into edit mode.
The DoEditModeChanging method also fires an OnEditModeChanging event.
</summary></devnotes>
        <parameters>
          <parameter name="AHandled" type="Boolean" paramflags="var"/>
        </parameters>
      </procedure>
      <procedure name="DoResetEditModeAnimation" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="512">
        <devnotes><summary>
Called at the end of the animation that plays when the edit mode is toggled.


</summary></devnotes>
      </procedure>
      <procedure name="DoUpdateScrollingLimits" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="514">
        <devnotes><summary>
Updates the scrolling limits and animation boundaries.


</summary></devnotes>
      </procedure>
      <procedure name="DoItemsMayChange" visibility="protected" procflags="override" file="FMX.ListView.pas" line="517">
      <devnotes><summary>
Called before the items of the adapter might change as a result of filtering or sorting.
FMX.ListView.TListViewBase.DoItemsMayChange inherits from FMX.ListView.TAdapterListView.DoItemsMayChange. All content below this line refers to FMX.ListView.TAdapterListView.DoItemsMayChange.
Called before the items of the adapter might change as a result of filtering or sorting.

 See Also
FMX.ListView.TAdapterListView.DoItemsCouldHaveChanged
FMX.ListView.TAdapterListView.DoItemsChange
FMX.ListView.TAdapterListView.DoItemsInvalidate
FMX.ListView.TAdapterListView.DoItemsResize

</summary></devnotes></procedure>
      <procedure name="DoItemsCouldHaveChanged" visibility="protected" procflags="override" file="FMX.ListView.pas" line="518">
      <devnotes><summary>
Called after the items of the adapter might have changed as a result of filtering or sorting.
FMX.ListView.TListViewBase.DoItemsCouldHaveChanged inherits from FMX.ListView.TAdapterListView.DoItemsCouldHaveChanged. All content below this line refers to FMX.ListView.TAdapterListView.DoItemsCouldHaveChanged.
Called after the items of the adapter might have changed as a result of filtering or sorting.

 See Also
FMX.ListView.TAdapterListView.DoItemsMayChange
FMX.ListView.TAdapterListView.DoItemsChange
FMX.ListView.TAdapterListView.DoItemsResize
FMX.ListView.TAdapterListView.DoItemsInvalidate

</summary></devnotes></procedure>
      <procedure name="DoItemsInvalidate" visibility="protected" procflags="override" file="FMX.ListView.pas" line="519">
      <devnotes><summary>
Called when the items of the adapter need to be painted again.
FMX.ListView.TListViewBase.DoItemsInvalidate inherits from FMX.ListView.TAdapterListView.DoItemsInvalidate. All content below this line refers to FMX.ListView.TAdapterListView.DoItemsInvalidate.
Called when the items of the adapter need to be painted again.

 See Also
FMX.ListView.TAdapterListView.DoItemsChange
FMX.ListView.TAdapterListView.DoItemsCouldHaveChanged
FMX.ListView.TAdapterListView.DoItemsMayChange
FMX.ListView.TAdapterListView.DoItemsResize
FMX.Controls.TControl.Repaint

</summary></devnotes></procedure>
      <procedure name="DoItemsChange" visibility="protected" procflags="override" file="FMX.ListView.pas" line="521">
        <devnotes><summary>
Called after the items of the adapter change.
FMX.ListView.TListViewBase.DoItemsChange inherits from FMX.ListView.TAdapterListView.DoItemsChange. All content below this line refers to FMX.ListView.TAdapterListView.DoItemsChange.
Called after the items of the adapter change.

 See Also
FMX.ListView.TAdapterListView.DoItemsMayChange
FMX.ListView.TAdapterListView.DoItemsCouldHaveChanged
FMX.ListView.TAdapterListView.DoItemsInvalidate
FMX.ListView.TAdapterListView.DoItemsResize

</summary></devnotes>
      </procedure>
      <procedure name="DoAdapterSet" visibility="protected" procflags="override" file="FMX.ListView.pas" line="522">
      <devnotes><summary>
Called right after the adapter of the list view is set.
FMX.ListView.TListViewBase.DoAdapterSet inherits from FMX.ListView.TAdapterListView.DoAdapterSet. All content below this line refers to FMX.ListView.TAdapterListView.DoAdapterSet.
Called right after the adapter of the list view is set.


</summary></devnotes></procedure>
      <function name="DeleteItem" visibility="protected" file="FMX.ListView.pas" line="526">
        <devnotes><summary>
Deletes an item.


</summary></devnotes>
        <parameters>
          <parameter name="ItemIndex" type="Integer" paramflags="const"/>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <procedure name="DoDeleteItem" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="528">
        <devnotes><summary>
Delets a specific item.
It is called from DeleteItem
</summary></devnotes>
        <parameters>
          <parameter name="ItemIndex" type="Integer" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetFinalItemSpaces" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="530">
        <devnotes><summary>
Returns the area available for item layout.


</summary></devnotes>
        <parameters>
          <parameter name="ForceIncludeScrollBar" type="Boolean" paramflags="const">
            <value>
              True
            </value>
          </parameter>
          <retval type="TRectF"/>
        </parameters>
      </function>
      <function name="GetFinalItemSize" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="532">
        <devnotes><summary>
Returns the size of the item.


</summary></devnotes>
        <parameters>
          <parameter name="ForceIncludeScrollBar" type="Boolean" paramflags="const">
            <value>
              True
            </value>
          </parameter>
          <retval type="TSizeF"/>
        </parameters>
      </function>
      <function name="CanObserve" visibility="protected" procflags="override" file="FMX.ListView.pas" line="533">
        <parameters>
          <parameter name="ID" type="Integer" paramflags="const"/>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
For internal use only.
Do not use this member. It is for internal use only.


</summary></devnotes></function>
      <procedure name="ObserversBeforeSelection" visibility="protected" file="FMX.ListView.pas" line="535">
        <devnotes><summary>
Notify observers about the selection change.


</summary></devnotes>
        <parameters>
          <parameter name="LAllowSelection" type="Boolean" paramflags="out"/>
        </parameters>
      </procedure>
      <function name="ShouldHandleEvents" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="537">
        <devnotes><summary>
Returns True if this ListView should handle input events.


</summary></devnotes>
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <procedure name="DoUpdatingItemView" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="539">
        <devnotes><summary>
Dispatches the OnUpdatingItemView event.
DoUpdatingItemView receives the following parameters:

AListItem is the target list view item.
AHandled determines whether the event handler of OnUpdatingItemView takes care of updating the appearance of the list view item (True) or DoUpdatingItemView must update the appearance of the list view item instead (False).
DoUpdatingItemView passes itself (as the Sender parameter) and the received AListItem and AHandled parameters to the event handler of OnUpdatingItemView.
</summary></devnotes>
        <parameters>
          <parameter name="AListItem" type="TListItem" paramflags="const"/>
          <parameter name="AHandled" type="Boolean" paramflags="var"/>
        </parameters>
      </procedure>
      <procedure name="DoUpdateItemView" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="541">
        <parameters>
          <parameter name="AListItem" type="TListItem" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Dispatches the OnUpdateItemView event.
DoUpdateItemView receives a single parameter, AItem, which is the target list view item.
DoUpdateItemView passes itself (as the Sender parameter) and the received AItem to the event handler of OnUpdateItemView.
</summary></devnotes></procedure>
      <function name="GetGlyphButton" visibility="protected" file="FMX.ListView.pas" line="543">
        <devnotes><summary>
Gets the glyph button for item Index.


</summary></devnotes>
        <parameters>
          <parameter name="Index" type="Integer" paramflags="const"/>
          <retval type="TListItemGlyphButton">
            <devnotes>
               <summary>Glyph button is an additional control usually used in Edit mode. It can be an Add/Plus sign,
               a Delete button or a Checkbox</summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <event name="OnUpdatingItemView" visibility="protected" read="FOnUpdatingItemView" write="FOnUpdatingItemView" type="TListViewBase.TUpdatingItemViewEvent" file="FMX.ListView.pas" line="545">
        <devnotes><summary>
Occurs before the item view is updated (before calling ResetObjects).


</summary></devnotes>
      </event>
      <event name="OnUpdateItemView" visibility="protected" read="FOnUpdateItemView" write="FOnUpdateItemView" type="TListViewBase.TListItemEvent" file="FMX.ListView.pas" line="547">
        <devnotes><summary>
Occurs after the item view is updated (after calling ResetObjects).


</summary></devnotes>
      </event>
      <event name="OnEditModeChange" visibility="protected" read="FOnEditModeChange" write="FOnEditModeChange" type="TNotifyEvent" file="FMX.ListView.pas" line="549">
        <devnotes><summary>
Occurs immediately after the list view component enters the edit mode.
Write an OnEditModeChange event handler to provide additional functionality after entering the edit mode. 
OnEditModeChange is an event of type TNotifyEvent.
</summary></devnotes>
      </event>
      <event name="OnEditModeChanging" visibility="protected" read="FOnEditModeChanging" write="FOnEditModeChanging" type="TListViewBase.THandleChangeEvent" file="FMX.ListView.pas" line="551">
        <devnotes><summary>
Occurs immediately before the list view component enters the edit mode.
Write an OnEditModeChanging event handler to provide additional functionality before entering the edit mode. 
OnEditModeChanging is an event of type TNotifyEvent.
</summary></devnotes>
      </event>
      <constructor name="Create" visibility="public" file="FMX.ListView.pas" line="553">
        <parameters>
          <parameter name="AOwner" type="TComponent"/>
        </parameters>
      <devnotes><summary>
Allocates memory and constructs a safely initialized instance of a component.
Allocates memory and constructs a safely initialized instance of a component.
FMX.ListView.TListViewBase.Create inherits from System.Classes.TComponent.Create. All content below this line refers to System.Classes.TComponent.Create.
Allocates memory and constructs a safely initialized instance of a component.
All objects have a Create method that constructs the object. TComponent redefines Create so that, for components, Create also:

Establishes the relationship of a component and its Owner, as indicated by the AOwner parameter.
Sets the ComponentStyle property to csInheritable, meaning that the component can be inherited by a descendent form type.
It is not necessary to explicitly create components added in the Form Designer. These components are created automatically when the application is run, and they are destroyed when the application is closed.
For components created programmatically, that is, not created in the Form Designer, call Create and pass in an owner component as the AOwner parameter. The owner disposes of the component when it is destroyed. If the component is not owned, then use Free when it needs to be destroyed.

Tip:  When passing in Self as the Owner parameter, consider what Self references. If a component creates another component in one of its methods, then Self refers to the first component and not the component being created, which is then owned by the first component.
Note:  The TComponent constructor is virtual in part to allow polymorphic instantiation of class references. This is critical to the streaming system and to the Form Designer. Do not forget to use the override directive when declaring a new component's Create constructor.</summary></devnotes></constructor>
      <destructor name="Destroy" visibility="public" file="FMX.ListView.pas" line="554">
        <parameters>
        </parameters>
      <devnotes><summary>
Disposes of the component and its owned components.
Disposes of the component and its owned components.
FMX.ListView.TListViewBase.Destroy inherits from System.Classes.TComponent.Destroy. All content below this line refers to System.Classes.TComponent.Destroy.
Disposes of the component and its owned components.
Do not call Destroy directly. Call Free instead. Free verifies that the component is not nil, and only then calls Destroy.
Never explicitly free a component in one of its own event handlers, nor free a component from the event handler of a component that it owns or contains.
To destroy a form, call its Release method. Release waits for all the form's event handlers and the event handlers of the form's components to finish executing before destroying the form.

Note: A form owns all the controls and nonvisual components that are placed on it in design mode. When it is freed, all of these components are automatically freed as well. By default, all forms are owned by the global Application object. When an application terminates, it frees the global Application object, which frees all forms. For objects that are not components, and for components created with a nil owner, be sure to call Free after finishing with the object; otherwise the memory allocated for the object will be lost until the application terminates.</summary></devnotes></destructor>
      <function name="GetDefaultMargins" visibility="public" procflags="class" file="FMX.ListView.pas" line="555">
        <parameters>
          <retval type="TRectF"/>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></function>
      <procedure name="EndUpdate" visibility="public" procflags="override" file="FMX.ListView.pas" line="556">
      <devnotes><summary>
Marks the end of an update session of the control and its children.
FMX.ListView.TListViewBase.EndUpdate inherits from FMX.Controls.TControl.EndUpdate. All content below this line refers to FMX.Controls.TControl.EndUpdate.
Marks the end of an update session of the control and its children.
The update session must be started first by calling BeginUpdate.
EndUpdate decreases the FUpdating semaphore. If all update sessions end and FUpdating is 0, EndUpdate invokes Realign to process layout changes.

 See Also
FMX.Controls.TControl.FUpdating
FMX.Controls.TControl.BeginUpdate
FMX.Controls.TControl.IsUpdating
FMX.Controls.TControl.Realign

</summary></devnotes></procedure>
      <procedure name="RebuildList" visibility="public" procflags="virtual" file="FMX.ListView.pas" line="558">
        <devnotes><summary>
Re-creates the list and updates visible item content when using native presentation.
</summary></devnotes>
      </procedure>
      <procedure name="ScrollTo" visibility="public" file="FMX.ListView.pas" line="560">
        <devnotes><summary>
Scrolls the view instantly (without scrolling effect) to the desired item, placing it in the view.
Use the ScrollTo method in order to immediately scroll, without a slow scrolling graphical effect, to the item specified through its index (the AItemIndex parameter), and place it in the view.
</summary></devnotes>
        <parameters>
          <parameter name="AItemIndex" type="Integer" paramflags="const"/>
        </parameters>
      </procedure>
      <property name="ItemIndex" visibility="public" read="GetItemIndex" write="SetItemIndex" type="Integer" default="-1" file="FMX.ListView.pas" line="562">
        <devnotes><summary>
Specifies the index of the selected item in this list view component.
</summary></devnotes>
      </property>
      <property name="Selected" visibility="public" read="GetSelected" write="SetSelected" type="TListItem" file="FMX.ListView.pas" line="564">
        <devnotes><summary>
List item that is currently selected on the list view.
This property is nil if no item is selected.
To use Selected as an instance of Appearances.TListViewItem, you must cast it as such:


Delphi:

SelectedItemText := TListViewItem(TListView1.Selected).Text;



C++:

SelectedItemText = ((TListViewItem*)(TListView1-&gt;Selected))-&gt;Text;

</summary></devnotes>
      </property>
      <property name="ScrollViewPos" visibility="public" read="FScrollViewPos" write="SetScrollViewPos" type="Single" default="0" file="FMX.ListView.pas" line="566">
        <devnotes><summary>
Specifies the position of the vertical scroll in the list. Setting ScrollViewPos to 0 scrolls the list view to its top.
</summary></devnotes>
      </property>
      <function name="GetItemRect" visibility="public" file="FMX.ListView.pas" line="568">
        <devnotes><summary>
Returns a TRectF that surrounds the specified item.
The GetItemRect method returns a rectangle with floating-point coordinates (TRectF) that surrounds the item specified through its index (the AItemIndex parameter).
</summary></devnotes>
        <parameters>
          <parameter name="AItemIndex" type="Integer" paramflags="const"/>
          <retval type="TRectF"/>
        </parameters>
      </function>
      <procedure name="StopPullRefresh" visibility="public" procflags="virtual" file="FMX.ListView.pas" line="573">
        <devnotes><summary>
StopPullRefresh is a boolean method. It should be called when the &quot;pull to refresh&quot; mode has been triggered to stop the spinning wheel.
StopPullRefresh can be set to

True, as result the spinning wheel does not disappear automatically and StopPullRefresh method needs to be called after the refresh operation is done.
False (default value), as result the spinning wheel disappears automatically shortly after triggering the effect.
Note: This works only in native IOS control and only when the  PullRefreshWait property is set to True.</summary></devnotes>
      </procedure>
      <property name="ItemSpaces" visibility="public" read="FItemSpaces" write="SetItemSpaces" type="TBounds" file="FMX.ListView.pas" line="575">
        <devnotes><summary>
Specifies the space in logical units around the content of each list item.
</summary></devnotes>
      </property>
      <property name="Images" visibility="public" read="GetImages" write="SetImages" type="TCustomImageList" file="FMX.ListView.pas" line="577">
        <devnotes><summary>
Defines the reference to a TCustomImageList list of images to be used to draw images on the component.
If the TCustomImageList list is empty, then Images is nil/null.
Call ImagesChanged when Images is changed.
</summary></devnotes>
      </property>
      <property name="SideSpace" visibility="public" read="FSideSpace" write="SetSideSpace" type="Integer" default="0" file="FMX.ListView.pas" line="579">
        <devnotes><summary>
Specifies the space in logical units on all sides around the list box, encompassing the items.
</summary></devnotes>
      </property>
      <property name="Transparent" visibility="public" read="FTransparent" write="SetTransparent" type="Boolean" file="FMX.ListView.pas" line="581">
        <devnotes><summary>
Specifies whether this list view control is transparent or not. When the control is transparent (Transparent is set to True), its background will not be drawn.
</summary></devnotes>
      </property>
      <property name="AllowSelection" visibility="public" read="FAllowSelection" write="FAllowSelection" type="Boolean" default="1" file="FMX.ListView.pas" line="584">
        <devnotes><summary>
Specifies whether the items are selectable or not.
The AllowSelection property specifies whether the items are selectable or not.

Tip: If items are not selectable, you will still be able to click on the embedded controls.</summary></devnotes>
      </property>
      <property name="AlternatingColors" visibility="public" read="FAlternatingColors" write="SetAlternatingColors" type="Boolean" default="0" file="FMX.ListView.pas" line="586"><devnotes><summary>
Specifies whether the fill colors for odd and even elements are rendered as alternating or not.
The AlternatingColors property specifies whether the background of the individual items in the list should appear rendered in alternating colors.
</summary></devnotes></property>
      <property name="ShowSelection" visibility="public" read="FShowSelection" write="SetShowSelection" type="Boolean" default="1" file="FMX.ListView.pas" line="589">
        <devnotes><summary>
Determines whether the selection is visible when selecting list view items. The ShowSelection property can be disabled when the list view has check boxes.
</summary></devnotes>
      </property>
      <property name="CanSwipeDelete" visibility="public" read="FCanSwipeDelete" write="SetCanSwipeDelete" type="Boolean" default="1" file="FMX.ListView.pas" line="591">
        <devnotes><summary>
Sets the swipe-to-delete feature on list view items.
CanSwipeDelete specifies that a swipe gesture on individual list view items enables the end user to choose either to delete or retain the item.
When this feature has been enabled in the Object Inspector, and the end user swipes an item in a listview, the user has the opportunity to delete the item: a Delete button temporarily appears on the item.  The user can then click the Delete button to delete the item from the listview, or can release the swipe to retain the item in the list view.

Tip: When you swipe an item, this item shows the same behavior and appearance as a list item selected when your list view is in edit mode. For  a preview of this appearance, see TPublishedAppearance.ItemEditAppearance.
The swipe-to-delete feature is supported on mobile apps (iOS and Android), as well as desktop apps (Windows and OS X) when touch input is available.
</summary></devnotes>
      </property>
      <property name="AutoTapScroll" visibility="public" read="FAutoTapScroll" write="FAutoTapScroll" type="Boolean" default="0" file="FMX.ListView.pas" line="593">
        <devnotes><summary>
Specifies whether tapping on the topmost side of this list view automatically scrolls to the top of the list.
Set the AutoTapScroll property to True in order to allow for automatically scrolling to the top of the list when tapping with your finger on the topmost region of this list view component. Set AutoTapScroll to False in order to disable this feature.
</summary></devnotes>
      </property>
      <property name="AutoTapTreshold" visibility="public" read="FAutoTapTreshold" write="FAutoTapTreshold" type="Integer" default="8" file="FMX.ListView.pas" line="595">
        <devnotes><summary>
Specifies the threshold value for the auto tap scrolling.
</summary></devnotes>
      </property>
      <property name="DisableMouseWheel" visibility="public" read="FDisableMouseWheel" write="FDisableMouseWheel" type="Boolean" default="0" file="FMX.ListView.pas" line="597">
        <devnotes><summary>
Specifies whether scrolling this list view using the mouse wheel works or not.
Set the DisableMouseWheel property to False to allow scrolling this list view using the mouse wheel. Set DisableMouseWheel to True to disable this feature.
</summary></devnotes>
      </property>
      <property name="ItemCount" visibility="public" read="GetItemCount" type="Integer" file="FMX.ListView.pas" line="599">
        <devnotes><summary>
Specifies the number of items in this list view component. ItemCount is a read-only property.
Read the ItemCount property in order to obtain the number of list items in this list view component.
</summary></devnotes>
      </property>
      <event name="OnListItemClick" visibility="public" read="FOnListItemClick" write="FOnListItemClick" type="TListViewBase.TListItemEvent" file="FMX.ListView.pas" line="601">
        <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes>
      </event>
      <event name="OnItemClickEx" visibility="public" read="FOnItemClickEx" write="FOnItemClickEx" type="TListViewBase.TListItemClickEventEx" file="FMX.ListView.pas" line="603">
        <devnotes><summary>
Occurs immediately after clicking an item from the list view. OnItemClickEx also receives mouse coordinates inside the clicked item.
Write an OnItemClickEx event handler to respond to clicking an item from the list view component.   
It is safe to modify the contents of the list view in the OnItemClickEx event handler (you may add, remove, update or change the order of list view items). If you do not need to do that, you can also use OnItemClick event handler. It is safe to modify the content of the items themselves in both of those handlers.
The OnItemClickEx event handler receives the following parameters:



Parameter

Description



Sender



The instance of TCustomListView to which the clicked item belongs.




ItemIndex



The index of the clicked item.




LocalClickPos



The coordinates of the click.




ItemObject



The instance of TListItemObject that you click on.

</summary></devnotes>
      </event>
      <event name="OnItemChange" visibility="public" read="FOnItemChange" write="FOnItemChange" type="TListViewBase.TListItemEvent" file="FMX.ListView.pas" line="605">
        <devnotes><summary>
Occurs immediately after changing the selected item from the list view.
Write an OnItemChange event handler to respond when changing the selected item in the list view component.
OnItemChange is an event of type TItemEvent.
</summary></devnotes>
      </event>
      <event name="OnChange" visibility="public" read="FOnChange" write="FOnChange" type="TNotifyEvent" file="FMX.ListView.pas" line="607">
        <devnotes><summary>
Occurs when the ItemIndex property changes as a result of a user selecting a different item.
Write an OnChange event handler to respond to changes of the ItemIndex property.  OnChange allows a response once the list has been successfully changed. 
OnChange is an event of type TNotifyEvent. If you want to wait for the list to be repainted to reflect the change, see OnChangeRepainted.

Note: The OnChange event does not occur when you change the ItemIndex property from code. That is the intended functionality. If you want to replicate the behaviour of a user selecting a different item, call OnChange explicitly.</summary></devnotes>
      </event>
      <event name="OnChangeRepainted" visibility="public" read="FOnChangeRepainted" write="FOnChangeRepainted" type="TNotifyEvent" file="FMX.ListView.pas" line="609">
        <devnotes><summary>
Occurs when the ItemIndex property changes as a result of a user selecting a different item.
Write an OnChangeRepainted event handler to respond to changes of the ItemIndex property.  OnChangeRepainted allows a response once the list has been successfully changed and repainted. 
OnChangeRepainted is an event of type TNotifyEvent. If you do not need to wait for the list to be repainted to reflect the change, see OnChange.

Note: The OnChangeRepainted event does not occur when you change the ItemIndex property from code. That is the intended functionality. If you want to replicate the behaviour of a user selecting a different item, call OnChangeRepainted explicitly.</summary></devnotes>
      </event>
      <event name="OnItemsChange" visibility="public" read="FOnItemsChange" write="FOnItemsChange" type="TNotifyEvent" file="FMX.ListView.pas" line="611">
        <devnotes><summary>
Event that occurs after a list of items has been changed.
</summary></devnotes>
      </event>
      <event name="OnScrollViewChange" visibility="public" read="FOnScrollViewChange" write="FOnScrollViewChange" type="TNotifyEvent" file="FMX.ListView.pas" line="613">
        <devnotes><summary>
This method is called when ScrollViewPos has changed as a result of scrolling a list or doing it manually in the code.
</summary></devnotes>
      </event>
      <event name="OnDeletingItem" visibility="public" read="FOnDeletingItem" write="FOnDeletingItem" type="TListViewBase.TDeletingItemEvent" file="FMX.ListView.pas" line="617">
        <devnotes><summary>
Occurs when a user requests the deletion of a list view item, before this deletion takes place. You can define an event handler for this event to prevent the deletion from actually happening based on your own criteria.
Event handlers for this event must expect the following parameters:

Sender, the list view.
AIndex, the index of the list view item to be deleted.
ACanDelete, variable that determines whether the list view item is to be deleted or not.
To prevent the deletion from happening, set ACanDelete to False in your event handler.
The code snippet below shows a dialog box asking for confirmation before deleting an item. If you click Cancel, ACanDelete is set to False, canceling the list view item deletion:


Delphi:

procedure TMainForm.ListViewDeletingItem(Sender: TObject; AIndex: Integer; var ACanDelete: Boolean);
var
  Input: Integer;
begin
  Input := TDialogServiceSync.MessageDialog(
    'Are you sure that you want to remove &quot;' +
        (Sender as TListView).Items[AIndex].Text + '&quot; from the list?',
    TMsgDlgType.mtConfirmation, mbOKCancel, TMsgDlgBtn.mbOK, 0);
  if Input = 2 then // Cancel
    ACanDelete := False;
end;



C++:

void __fastcall TMainForm::ListViewDeletingItem(TObject *Sender, int AIndex, bool &amp;ACanDelete)
{
  TListView* list = reinterpret_cast&lt;TListView*&gt;(Sender);
  int input = TDialogServiceSync::MessageDialog(
      &quot;Are you sure that you want to remove \&quot;&quot; +
          list-&gt;Items-&gt;Item[AIndex]-&gt;Text + &quot;\&quot; from the list?&quot;,
      TMsgDlgType::mtConfirmation, mbOKCancel, TMsgDlgBtn::mbOK, 0);
  if (input == 2) { // Cancel
        ACanDelete = false;
  }
}

</summary></devnotes>
      </event>
      <event name="OnDeleteItem" visibility="public" read="FOnDeleteItem" write="FOnDeleteItem" type="TListViewBase.TDeleteItemEvent" file="FMX.ListView.pas" line="619">
        <devnotes><summary>
Occurs when a user requests the deletion of a list view item, after this deletion takes place. To catch the deletion before it takes place and be able to prevent it from actually happening, write an event handler for OnDeletingItem instead.
Event handlers for this event must expect the following parameters:

Sender, the list view.
AIndex, the index of the list view item that has been deleted.
Note: You cannot access the data of the deleted item at this point, since a different item is now using that index in the list view. Write an event handler for OnDeletingItem instead if you need to access information about the deleted item.
The code snippet below updates the text in a status bar after an item is deleted to show the position of the deleted item, as well as the number of remaining items in the list:


Delphi:

procedure TMainForm.ListViewDeleteItem(Sender: TObject; AIndex: Integer);
begin
  StatusBar.Text := 'Item ' + IntToStr(AIndex+1) + ' has been removed from the list. ' +
                    IntToStr((Sender as TListView).Items.Count) + ' items remaining.';
end;



C++:

void __fastcall TMainForm::ListViewDeleteItem(TObject *Sender, int AIndex)
{
  TListView* list = reinterpret_cast&lt;TListView*&gt;(Sender);
  MainForm-&gt;StatusBar-&gt;Text = &quot;Item &quot; + UnicodeString(AIndex+1) + &quot; has been removed from the list. &quot; +
                              UnicodeString(list-&gt;Items-&gt;Count) + &quot; items remaining.&quot;;
}

</summary></devnotes>
      </event>
      <event name="OnDeleteChangeVisible" visibility="public" read="FOnDeleteChange" write="FOnDeleteChange" type="TListViewBase.TDeleteChangeVisibilityEvent" file="FMX.ListView.pas" line="621">
        <devnotes><summary>
Occurs when the visibility of the Delete button of a list item changes.
This event only works when you hide or show the Delete button displayed after a swipe gesture. It does not work when you hide or show the Delete button of a list item when your list view is in edit mode and your list uses an edit mode item appearance of type &quot;Delete&quot;.
Sender is the list view and AValue determines whether the Delete button was hidden (False) and now is visible, or it was visible (True) and now is hidden.
For example, the following event handler fills a status bar with a tip when a Delete button is shown on a list item, and removes that tip from the status bar as soon as the Delete button is hidden again:


Delphi:

procedure TMainForm.ListViewDeleteChangeVisible(Sender: TObject; AValue: Boolean);
begin
  if (AValue = False) then
    StatusBar.Text := 'Click &quot;Delete&quot; to remove the target item from the list.'
  else
    StatusBar.Text := '';
end;



C++:

void __fastcall TMainForm::ListViewDeleteChangeVisible(TObject *Sender, bool AValue)
{
  if (AValue) {
    MainForm-&gt;StatusBar-&gt;Text = &quot;Click \&quot;Delete\&quot; to remove the target item from the list.&quot;;
  } else {
    MainForm-&gt;StatusBar-&gt;Text = &quot;&quot;;
  }
}

</summary></devnotes>
      </event>
      <event name="OnSearchChange" visibility="public" read="FOnSearchChange" write="FOnSearchChange" type="TNotifyEvent" file="FMX.ListView.pas" line="623">
        <devnotes><summary>
Occurs when the search box in a list view loses the focus and its content has changed since it gained the focus. This event exposes the OnChange event of the TSearchBox that implements the search box of a list view.
For example, the code snippet below updates the text in a status bar on this event to show the number of items left in the list after the specified filter is applied:


Delphi:

procedure TMainForm.ListViewSearchChange(Sender: TObject);
var
  I: Integer;
  SearchBox: TSearchBox;
  List: TListView;
begin
  List := Sender as TListView;
  for I := 0 to List.Controls.Count-1 do
    if List.Controls[I].ClassType = TSearchBox then
    begin
      SearchBox := TSearchBox(List.Controls[I]);
      Break;
    end;
  StatusBar.Text := IntToStr(List.Items.Count) + ' list items match ' + QuotedStr(SearchBox.Text) + '.';
end;



C++:

void __fastcall TMainForm::ListViewSearchChange(TObject *Sender)
{
  TSearchBox* searchBox;
  TListView* list = reinterpret_cast&lt;TListView*&gt;(Sender);
  for (int i = 0; i &lt; list-&gt;Controls-&gt;Count; i++) {
        searchBox = dynamic_cast&lt;TSearchBox*&gt;(list-&gt;Controls-&gt;Items[i]);
        if (searchBox) break;
  }
  MainForm-&gt;StatusBar-&gt;Text = UnicodeString(list-&gt;Items-&gt;Count) + &quot; list items match &quot; + QuotedStr(searchBox-&gt;Text) + &quot;.&quot;;
}

</summary></devnotes>
      </event>
      <event name="OnFilter" visibility="public" read="FOnFilter" write="SetOnFilter" type="TFilterEvent" file="FMX.ListView.pas" line="625">
        <devnotes><summary>
Occurs when a search box filters. 
Write an event handler for OnFilter to set a custom search filter for TSearchBox.
The OnFilter event with the TFilterEvent type has the following parameters:



Parameter

Description


Sender

The object whose event handler is called.


AFilter

The string being filtered among the different items (AValue parameter).


AValue

The string of the item where the search of AFilter is being performed.


Accept

Boolean parameter to use when there is a filter condition.
Use Accept to add a filter condition; if a value is filtered by the filter condition, Accept must be True.



For example, the below code snippet adds a custom filter to force the item (AValue) to start with the string being filtered (AFilter):


Delphi: 

procedure TForm2.ListView1Filter(Sender: TObject; const AFilter, AValue: string;
  var Accept: Boolean);
begin
  Accept :=  AValue.StartsWith(AFilter, True);
end;



C++: 

void __fastcall TForm1::ListView1Filter(TObject *Sender, const UnicodeString AFilter,
		  const UnicodeString AValue, bool &amp;Accept)
{
	Accept = StartsStr(AFilter.LowerCase(), AValue.LowerCase());
}


Note:  Enable the SearchVisible property to show the search box on top of your list view.
</summary></devnotes>
      </event>
      <event name="OnPullRefresh" visibility="public" read="FOnPullRefresh" write="FOnPullRefresh" type="TNotifyEvent" file="FMX.ListView.pas" line="627">
        <devnotes><summary>
Occurs when a user pulls down the item list.
Write an event handler for OnPullRefresh to specify what happens when you pull down the list of items.

Note: For this event to occur, you should set the PullToRefresh property to true.</summary></devnotes>
      </event>
      <property name="DeleteButtonText" visibility="public" read="GetDeleteButtonText" write="SetDeleteButtonText" stored="DeleteButtonTextStored" type="string" file="FMX.ListView.pas" line="629">
        <devnotes><summary>
Specifies the name of the Delete button designed to delete the TListView items. 
This button can be displayed if the CanSwipeDelete property is set True.
</summary></devnotes>
      </property>
      <property name="EditMode" visibility="public" read="FEditMode" write="SetEditMode" type="Boolean" default="0" file="FMX.ListView.pas" line="632">
        <devnotes><summary>
Specifies whether this list view component is in the edit mode (True) or in the regular mode (False).
On some platforms, the list view shows an animation when the value of the EditMode property changes at run time.
</summary></devnotes>
      </property>
      <property name="SearchVisible" visibility="public" read="FSearchVisible" write="SetSearchVisible" type="Boolean" default="0" file="FMX.ListView.pas" line="634">
        <devnotes><summary>
 Set SearchVisible to True to show a search box on top of your list view
Shows a search box on top of your list view that can filter the content of the list.
To access the search box control from code, simply loop trough the controls of your list view until you find an instance of TSearchBox. For an example, see the code snippet at FMX.ListView.TListViewBase.OnSearchChange.
</summary></devnotes>
      </property>
      <property name="SearchAlwaysOnTop" visibility="public" read="FSearchAlwaysOnTop" write="SetSearchAlwaysOnTop" type="Boolean" default="1" file="FMX.ListView.pas" line="636">
        <devnotes><summary>
 Search box partially hidden in a list view where SearchAlwaysOnTop is False
Your list view component keeps the search box on top as you scroll. If SearchAlwaysOnTop is False, the search box behaves as a list item: scrolling down the list hides the search box, and you must scroll up to show the search box again.
SearchAlwaysOnTop has no effect if SearchVisible is False.
SearchAlwaysOnTop is supported only on the iOS platform.
</summary></devnotes>
      </property>
      <property name="SelectionCrossfade" visibility="public" read="FSelectionCrossfade" write="SetSelectionCrossfade" type="Boolean" default="0" file="FMX.ListView.pas" line="638">
        <devnotes><summary>
Enables the selection of Crossfade animation .


</summary></devnotes>
      </property>
      <property name="PullToRefresh" visibility="public" read="FPullToRefresh" write="SetPullToRefresh" type="Boolean" default="0" file="FMX.ListView.pas" line="640">
        <devnotes><summary>
Determines whether the &quot;pull list to refresh&quot; feature is enabled.
When this property is set to true, the Pull-to-Refresh feature is enabled and the end user can pull down a list view to refresh the contents.
To enable the Pull-to-Refresh feature, select the TListView component in the Form Designer, and do the following:

On the Properties page of the Object Inspector, set the PullToRefresh property to true.
Open the Events page, and double-click the right-hand column for OnPullRefresh.
When the Code Editor opens, you can implement the OnPullRefresh event handler. In this event handler, you can specify how to refresh the list view. For example, you might update existing list items, add new items, or delete specified items.
Note: In the case of native iOS controls, you can use the PullRefreshWait property to set whether the animated spinning indicator disappears automatically, or if it disappears when you call StopPullRefresh.</summary></devnotes>
      </property>
      <property name="PullRefreshWait" visibility="public" read="FPullRefreshWait" write="FPullRefreshWait" type="Boolean" default="0" file="FMX.ListView.pas" line="645">
        <devnotes><summary>
Determines if the spinning wheel disappears automatically or not.
When set to True, the spinning wheel does not disappear automatically and you have to call the StopPullRefresh method after doing a refresh operation. If PullRefreshWait is set to False (default), then the spinning wheel disappears automatically shortly after triggering the effect. This option only works in native iOS controls and does not have effect otherwise.

Note: You must set the PullToRefresh property to True to use PullRefreshWait.</summary></devnotes>
      </property>
      <property name="ControlType" visibility="public" read="FControlType" write="SetControlType" type="TControlType" default="0" file="FMX.ListView.pas" line="647">
        <devnotes><summary>
Describes if the Control type is Styled or Native.


</summary></devnotes>
      </property>
      <property name="NativeOptions" visibility="public" read="FNativeOptions" write="SetNativeOptions" type="TListViewNativeOptions" default="0" file="FMX.ListView.pas" line="649">
        <devnotes><summary>
Set of properties to customize the appearance and behavior of the list view when ControlType is Platform.
This group of properties provides the subproperties described in the following table. All subproperties are disabled by default.



Subproperty

Description



Grouped



Make cells use a grouped style. The grouped style is the style that the list of iOS settings uses.



False

True









Indexed



Shows an index on the right-hand side of the list with the first letter of each header. You may tap a letter to navigate to the header that the letter represents.
If you want to display something other than the first letter of each header, use the IndexTitle of each header item to define a custom text to show for that header. Long index titles may hide important information behind them, use no more than few characters.



False

True









Styled



Make the native presentation use the style settings defined in your list view control for the following aspects of your list view:

Font
Text color and selected text color
Text alignment, both vertical and horizontal
Word wrapping and trimming
You cannot customize any other aspects of the native presentation of a list view. If you need to customize your list view further, change ControlType to Styled to use the regular FireMonkey presentation instead.



False

True

ControlType: Styled








</summary></devnotes>
      </property>
    </members>
  </class>
  <class name="TPresentedListView" file="FMX.ListView.pas" line="653">
    
    <ancestor name="TListViewBase" namespace="FMX.ListView">
      <interfaces>
        <implements name="IControlTypeSupportable"/>
        <implements name="IMessageSendingCompatible"/>
        <implements name="IGlyph"/>
        <implements name="IListViewController"/>
        <implements name="IListItemStyleResources"/>
        <implements name="ISearchResponder"/>
      </interfaces>
      <methodref name="IsRunningOnDesktop" visibility="private"/>
      <methodref name="HasTouchTracking" visibility="private"/>
      <methodref name="HasSearchFeatures" visibility="private"/>
      <methodref name="HasSearchAsItem" visibility="private"/>
      <methodref name="IsDeleteModeAllowed" visibility="private"/>
      <methodref name="HasStretchyScrolling" visibility="private"/>
      <methodref name="HasPhysicsStretchyScrolling" visibility="private"/>
      <methodref name="HasScrollingStretchGlow" visibility="private"/>
      <methodref name="HasPullRefreshStroke" visibility="private"/>
      <methodref name="CanDisplaySelectionForItem" visibility="private"/>
      <methodref name="GetDefaultSelectionAlpha" visibility="private"/>
      <methodref name="GetItemSelectionAlpha" visibility="private"/>
      <methodref name="DestroyRecurrentTimer" visibility="private"/>
      <methodref name="UpdateRecurrentTimer" visibility="private"/>
      <methodref name="HasRecurrentTimerEvents" visibility="private"/>
      <methodref name="RecurrentTimerEvent" visibility="private"/>
      <methodref name="StartIncident" visibility="private"/>
      <methodref name="ProcessIncident" visibility="private"/>
      <methodref name="TriggerIncidents" visibility="private"/>
      <methodref name="ProcessDelayedIncidents" visibility="private"/>
      <methodref name="ProcessTransitionAnimation" visibility="private"/>
      <methodref name="ProcessTapSelectItem" visibility="private"/>
      <methodref name="ProcessSelectionAlphas" visibility="private"/>
      <methodref name="InsertItemCrossFade" visibility="private"/>
      <methodref name="RemoveItemCrossFade" visibility="private"/>
      <methodref name="StartPullRefreshAnimation" visibility="private"/>
      <methodref name="ProcessPullRefreshAnimation" visibility="private"/>
      <methodref name="GetPullRefreshStrength" visibility="private"/>
      <methodref name="GetPullRefreshIndicatorSteps" visibility="private"/>
      <methodref name="GetPullRefreshIndicatorAlpha" visibility="private"/>
      <methodref name="GetPullRefreshStrokeWidth" visibility="private"/>
      <methodref name="PaintPullRefreshIndicator" visibility="private"/>
      <methodref name="PaintPullRefreshStroke" visibility="private"/>
      <methodref name="PaintScrollingStretchGlow" visibility="private"/>
      <methodref name="UpdatePullRefreshState" visibility="private"/>
      <methodref name="UpdateScrollStretchStrength" visibility="private"/>
      <methodref name="DeleteButtonClicked" visibility="private"/>
      <methodref name="ScrollBarChange" visibility="private"/>
      <methodref name="ItemSpacesChange" visibility="private"/>
      <methodref name="AniCalcChange" visibility="private"/>
      <methodref name="AniCalcStart" visibility="private"/>
      <methodref name="AniCalcStop" visibility="private"/>
      <methodref name="GetItemIndex" visibility="private"/>
      <methodref name="SetItemIndex" visibility="private"/>
      <methodref name="SetItemIndexInternal" visibility="private"/>
      <methodref name="GetMaxScrollViewPos" visibility="private"/>
      <methodref name="UpdateScrollViewPos" visibility="private"/>
      <methodref name="UpdateSearchEditPos" visibility="private"/>
      <methodref name="SetScrollViewPos" visibility="private"/>
      <methodref name="UpdateScrollingLimits" visibility="private"/>
      <methodref name="UpdateScrollBar" visibility="private"/>
      <methodref name="GetNumberOfRenderingPasses" visibility="private"/>
      <methodref name="GetItemHeight" visibility="private" procflags="overload virtual"/>
      <methodref name="GetItemRelRect" visibility="private" procflags="inline"/>
      <methodref name="GetItemGroupSeparators" visibility="private" procflags="inline"/>
      <methodref name="FindLocalItemObjectAtPosition" visibility="private"/>
      <methodref name="GetSeparatorLineHeight" visibility="private"/>
      <methodref name="AlignValueToPixel" visibility="private"/>
      <methodref name="DrawItemsFill" visibility="private"/>
      <methodref name="DrawIndexFill" visibility="private"/>
      <methodref name="DrawTouchAnimation" visibility="private"/>
      <methodref name="GetHeaderRelRect" visibility="private"/>
      <methodref name="DrawHeaderItem" visibility="private"/>
      <methodref name="DrawListItems" visibility="private"/>
      <methodref name="UpdateItemLookups" visibility="private"/>
      <methodref name="FindItemAbsoluteAt" visibility="private"/>
      <methodref name="FindItemAbsoluteAtWithCheck" visibility="private"/>
      <methodref name="SetSideSpace" visibility="private"/>
      <methodref name="SetTransparent" visibility="private"/>
      <methodref name="SetAlternatingColors" visibility="private"/>
      <methodref name="SetShowSelection" visibility="private"/>
      <methodref name="RecreateNativePresentation" visibility="private" procflags="virtual"/>
      <methodref name="SetEditMode" visibility="private"/>
      <methodref name="SetCanSwipeDelete" visibility="private"/>
      <methodref name="SelectItem" visibility="private" procflags="virtual"/>
      <methodref name="UnselectItem" visibility="private" procflags="virtual"/>
      <methodref name="GetSelected" visibility="private"/>
      <methodref name="SetSelected" visibility="private"/>
      <methodref name="SetNewItemIndex" visibility="private"/>
      <methodref name="SetSearchVisible" visibility="private"/>
      <methodref name="SetSearchAlwaysOnTop" visibility="private"/>
      <methodref name="SetOnFilter" visibility="private"/>
      <methodref name="OnSearchEditResize" visibility="private"/>
      <methodref name="OnSearchEditChange" visibility="private"/>
      <methodref name="DeleteButtonTextStored" visibility="private"/>
      <methodref name="SetFilterPredicate" visibility="private"/>
      <methodref name="GetMessageSender" visibility="private"/>
      <methodref name="ReadCanSwipeDelete" visibility="private"/>
      <methodref name="ReadIsSearchVisible" visibility="private"/>
      <methodref name="ReadIsSearchAlwaysOnTop" visibility="private"/>
      <methodref name="ReadEditModeOptions" visibility="private"/>
      <methodref name="GetItemCount" visibility="private"/>
      <methodref name="RequestReindexing" visibility="private"/>
      <methodref name="ItemResized" visibility="private"/>
      <methodref name="ItemInvalidated" visibility="private"/>
      <methodref name="ControlClicked" visibility="private"/>
      <methodref name="CheckStateChanged" visibility="private"/>
      <methodref name="GetScene" visibility="private"/>
      <methodref name="DefineProperties" visibility="protected" procflags="override"/>
      <methodref name="IsEditMode" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoSetItemIndexInternal" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoUpdateScrollViewPos" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoSetScrollViewPos" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="WillEnterEditMode" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="HasButtonsInCells" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="HasDeletionEditMode" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="HasCheckboxMode" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="ResetEditModeAnimation" visibility="protected">
      </methodref>
      <methodref name="InitEditModeAnimation" visibility="protected">
      </methodref>
      <methodref name="ResetDeleteModeAnimation" visibility="protected">
      </methodref>
      <methodref name="InitDeleteModeAnimation" visibility="protected">
      </methodref>
      <methodref name="UpdateDeleteButtonLayout" visibility="protected">
      </methodref>
      <methodref name="ProceedDeleteItem" visibility="protected">
      </methodref>
      <methodref name="ScrollStretchChanged" visibility="protected" procflags="virtual">
      </methodref>
      <propertyref name="ScrollStretchStrength" visibility="protected">
      </propertyref>
      <methodref name="SetSelectionCrossfade" visibility="protected"/>
      <methodref name="GetDeleteButtonText" visibility="protected"/>
      <methodref name="SetDeleteButtonText" visibility="protected"/>
      <methodref name="SetPullToRefresh" visibility="protected"/>
      <methodref name="SetControlType" visibility="protected"/>
      <methodref name="GetControlType" visibility="protected"/>
      <methodref name="SetNativeOptions" visibility="protected"/>
      <methodref name="GetEditModeTransitionAlpha" visibility="protected"/>
      <methodref name="GetDeleteModeTransitionAlpha" visibility="protected"/>
      <methodref name="SetDeleteButtonIndex" visibility="protected"/>
      <methodref name="GetItemEditOffset" visibility="protected"/>
      <methodref name="GetItemDeleteCutoff" visibility="protected"/>
      <methodref name="GetClientMargins" visibility="protected"/>
      <methodref name="GetItemCurrentSelectionAlpha" visibility="protected"/>
      <methodref name="GetImages" visibility="protected"/>
      <methodref name="SetImages" visibility="protected"/>
      <methodref name="DoRequestReindexing" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoItemResized" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoItemInvalidated" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoCheckStateChanged" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoControlClicked" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetImageIndex" visibility="protected"/>
      <methodref name="SetImageIndex" visibility="protected"/>
      <methodref name="GetImageList" visibility="protected" procflags="inline"/>
      <methodref name="SetImageList" visibility="protected"/>
      <methodref name="GetStyleResources" visibility="protected"/>
      <methodref name="StyleResourcesNeedUpdate" visibility="protected"/>
      <methodref name="SetItemSpaces" visibility="protected"/>
      <methodref name="GetItemClientRect" visibility="protected"/>
      <methodref name="GetEstimatedItemHeight" visibility="protected"/>
      <methodref name="GetEstimatedHeaderHeight" visibility="protected"/>
      <methodref name="GetEstimatedFooterHeight" visibility="protected"/>
      <methodref name="ImagesChanged" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="Paint" visibility="protected" procflags="override"/>
      <methodref name="AfterPaint" visibility="protected" procflags="override"/>
      <methodref name="Loaded" visibility="protected" procflags="override"/>
      <methodref name="MouseDown" visibility="protected" procflags="override"/>
      <methodref name="MouseMove" visibility="protected" procflags="override"/>
      <methodref name="MouseUp" visibility="protected" procflags="override"/>
      <methodref name="MouseWheel" visibility="protected" procflags="override"/>
      <methodref name="KeyDown" visibility="protected" procflags="override"/>
      <methodref name="ObjectAtPoint" visibility="protected" procflags="override"/>
      <methodref name="DoMouseLeave" visibility="protected" procflags="override"/>
      <methodref name="Resize" visibility="protected" procflags="override"/>
      <methodref name="GetDefaultStyleLookupName" visibility="protected" procflags="override"/>
      <methodref name="ApplyStyle" visibility="protected" procflags="override"/>
      <methodref name="FreeStyle" visibility="protected" procflags="override"/>
      <methodref name="Invalidate" visibility="protected"/>
      <methodref name="DoRealign" visibility="protected" procflags="override"/>
      <methodref name="DoExit" visibility="protected" procflags="override"/>
      <methodref name="DoChange" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoChangeRepainted" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoListItemChange" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoListItemClick" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoEditModeChange" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoEditModeChanging" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoResetEditModeAnimation" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoUpdateScrollingLimits" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoItemsMayChange" visibility="protected" procflags="override"/>
      <methodref name="DoItemsCouldHaveChanged" visibility="protected" procflags="override"/>
      <methodref name="DoItemsInvalidate" visibility="protected" procflags="override"/>
      <methodref name="DoItemsChange" visibility="protected" procflags="override">
      </methodref>
      <methodref name="DoAdapterSet" visibility="protected" procflags="override"/>
      <methodref name="DeleteItem" visibility="protected">
      </methodref>
      <methodref name="DoDeleteItem" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetFinalItemSpaces" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetFinalItemSize" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="CanObserve" visibility="protected" procflags="override"/>
      <methodref name="ObserversBeforeSelection" visibility="protected">
      </methodref>
      <methodref name="ShouldHandleEvents" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoUpdatingItemView" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoUpdateItemView" visibility="protected" procflags="virtual"/>
      <methodref name="GetGlyphButton" visibility="protected">
      </methodref>
      <eventref name="OnUpdatingItemView" visibility="protected">
      </eventref>
      <eventref name="OnUpdateItemView" visibility="protected">
      </eventref>
      <eventref name="OnEditModeChange" visibility="protected">
      </eventref>
      <eventref name="OnEditModeChanging" visibility="protected">
      </eventref>
      <methodref name="Create" visibility="public" procflags="constructor overload override"/>
      <methodref name="Destroy" visibility="public" procflags="destructor override"/>
      <methodref name="GetDefaultMargins" visibility="public" procflags="class"/>
      <methodref name="EndUpdate" visibility="public" procflags="override"/>
      <methodref name="RebuildList" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ScrollTo" visibility="public">
      </methodref>
      <propertyref name="ItemIndex" visibility="public">
      </propertyref>
      <propertyref name="Selected" visibility="public">
      </propertyref>
      <propertyref name="ScrollViewPos" visibility="public">
      </propertyref>
      <methodref name="GetItemRect" visibility="public">
      </methodref>
      <methodref name="StopPullRefresh" visibility="public" procflags="virtual">
      </methodref>
      <propertyref name="ItemSpaces" visibility="public">
      </propertyref>
      <propertyref name="Images" visibility="public">
      </propertyref>
      <propertyref name="SideSpace" visibility="public">
      </propertyref>
      <propertyref name="Transparent" visibility="public">
      </propertyref>
      <propertyref name="AllowSelection" visibility="public">
      </propertyref>
      <propertyref name="AlternatingColors" visibility="public"/>
      <propertyref name="ShowSelection" visibility="public">
      </propertyref>
      <propertyref name="CanSwipeDelete" visibility="public">
      </propertyref>
      <propertyref name="AutoTapScroll" visibility="public">
      </propertyref>
      <propertyref name="AutoTapTreshold" visibility="public">
      </propertyref>
      <propertyref name="DisableMouseWheel" visibility="public">
      </propertyref>
      <propertyref name="ItemCount" visibility="public">
      </propertyref>
      <eventref name="OnListItemClick" visibility="public">
      </eventref>
      <eventref name="OnItemClickEx" visibility="public">
      </eventref>
      <eventref name="OnItemChange" visibility="public">
      </eventref>
      <eventref name="OnChange" visibility="public">
      </eventref>
      <eventref name="OnChangeRepainted" visibility="public">
      </eventref>
      <eventref name="OnItemsChange" visibility="public">
      </eventref>
      <eventref name="OnScrollViewChange" visibility="public">
      </eventref>
      <eventref name="OnDeletingItem" visibility="public">
      </eventref>
      <eventref name="OnDeleteItem" visibility="public">
      </eventref>
      <eventref name="OnDeleteChangeVisible" visibility="public">
      </eventref>
      <eventref name="OnSearchChange" visibility="public">
      </eventref>
      <eventref name="OnFilter" visibility="public">
      </eventref>
      <eventref name="OnPullRefresh" visibility="public">
      </eventref>
      <propertyref name="DeleteButtonText" visibility="public">
      </propertyref>
      <propertyref name="EditMode" visibility="public">
      </propertyref>
      <propertyref name="SearchVisible" visibility="public">
      </propertyref>
      <propertyref name="SearchAlwaysOnTop" visibility="public">
      </propertyref>
      <propertyref name="SelectionCrossfade" visibility="public">
      </propertyref>
      <propertyref name="PullToRefresh" visibility="public">
      </propertyref>
      <propertyref name="PullRefreshWait" visibility="public">
      </propertyref>
      <propertyref name="ControlType" visibility="public">
      </propertyref>
      <propertyref name="NativeOptions" visibility="public">
      </propertyref>
      <ancestor name="TAdapterListView" namespace="FMX.ListView">
        <methodref name="ItemsMayChange" visibility="class private"/>
        <methodref name="ItemsCouldHaveChanged" visibility="class private"/>
        <methodref name="ItemsChange" visibility="class private"/>
        <methodref name="ItemsResize" visibility="class private"/>
        <methodref name="ItemsInvalidate" visibility="class private"/>
        <methodref name="ResetView" visibility="class private"/>
        <methodref name="DoAdapterSet" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetAdapter" visibility="protected">
        </methodref>
        <methodref name="InvalidateHeights" visibility="protected">
        </methodref>
        <methodref name="DoItemsChange" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoItemsMayChange" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoItemsCouldHaveChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoItemsResize" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoItemsInvalidate" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoResetView" visibility="protected" procflags="virtual">
        </methodref>
        <propertyref name="HeightSumsNeedUpdate" visibility="protected">
        </propertyref>
        <propertyref name="Adapter" visibility="public">
        </propertyref>
        <ancestor name="TStyledControl" namespace="FMX.Controls">
          <methodref name="GetStyleData" visibility="class private">
          </methodref>
          <methodref name="SetStyleData" visibility="class private">
          </methodref>
          <methodref name="SetStyleLookup" visibility="class private">
          </methodref>
          <methodref name="ScaleChangedHandler" visibility="class private">
          </methodref>
          <methodref name="StyleChangedHandler" visibility="class private">
          </methodref>
          <methodref name="InternalFreeStyle" visibility="private">
          </methodref>
          <methodref name="SearchInto" visibility="protected" procflags="override">
          </methodref>
          <methodref name="GetBackIndex" visibility="protected" procflags="override">
          </methodref>
          <methodref name="IsHelpContextStored" visibility="protected">
          </methodref>
          <methodref name="SetHelpContext" visibility="protected">
          </methodref>
          <methodref name="SetHelpKeyword" visibility="protected">
          </methodref>
          <methodref name="Notification" visibility="protected" procflags="override">
          </methodref>
          <methodref name="DoSetSize" visibility="protected" procflags="override">
          </methodref>
          <methodref name="DoApplyStyleLookup" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="StyleDataChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="RequestStyleData" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="Painting" visibility="protected" procflags="override">
          </methodref>
          <methodref name="ApplyStyle" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="FreeStyle" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetStyleContext" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetDefaultStyleLookupName" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetParentClassStyleLookupName" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoEnter" visibility="protected" procflags="override">
          </methodref>
          <methodref name="Disappear" visibility="protected" procflags="override">
          </methodref>
          <methodref name="AdjustSize" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="AdjustFixedSize" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="ChooseAdjustType" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoStyleChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="StyleLookupChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="RecycleResourceLink" visibility="protected">
          </methodref>
          <methodref name="KillResourceLink" visibility="protected">
          </methodref>
          <methodref name="DoDeleteChildren" visibility="protected" procflags="override">
          </methodref>
          <methodref name="GenerateStyleName" visibility="protected">
          </methodref>
          <methodref name="GetStyleObject" visibility="protected" procflags="overload virtual">
          </methodref>
          <methodref name="GetStyleObject" visibility="protected" procflags="overload virtual">
          </methodref>
          <methodref name="SetAdjustSizeValue" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetAdjustType" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetResourceLink" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetResourceControl" visibility="protected">
          </methodref>
          <propertyref name="IsNeedStyleLookup" visibility="protected">
          </propertyref>
          <propertyref name="ResourceLink" visibility="protected">
          </propertyref>
          <propertyref name="ResourceControl" visibility="protected">
          </propertyref>
          <methodref name="GetAdjustSizeValue" visibility="protected" procflags="override">
          </methodref>
          <methodref name="GetAdjustType" visibility="protected" procflags="override">
          </methodref>
          <methodref name="Create" visibility="public" procflags="constructor overload override">
          </methodref>
          <methodref name="BeforeDestruction" visibility="public" procflags="override">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <propertyref name="AdjustType" visibility="public">
          </propertyref>
          <propertyref name="AdjustSizeValue" visibility="public">
          </propertyref>
          <propertyref name="StyleState" visibility="public">
          </propertyref>
          <methodref name="RecalcSize" visibility="public" procflags="override">
          </methodref>
          <methodref name="FindStyleResource" visibility="public" procflags="overload override">
          </methodref>
          <methodref name="FindStyleResource" visibility="public" procflags="overload">
          </methodref>
          <methodref name="FindAndCloneStyleResource" visibility="public">
          </methodref>
          <methodref name="SetNewScene" visibility="public" procflags="override">
          </methodref>
          <methodref name="ApplyStyleLookup" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="NeedStyleLookup" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="Inflate" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="PrepareForPaint" visibility="public" procflags="override">
          </methodref>
          <methodref name="StartTriggerAnimation" visibility="public" procflags="override">
          </methodref>
          <methodref name="StartTriggerAnimationWait" visibility="public" procflags="override">
          </methodref>
          <propertyref name="AutoTranslate" visibility="public">
          </propertyref>
          <propertyref name="DefaultStyleLookupName" visibility="public">
          </propertyref>
          <propertyref name="ParentClassStyleLookupName" visibility="public">
          </propertyref>
          <propertyref name="HelpType" visibility="public">
          </propertyref>
          <propertyref name="HelpKeyword" visibility="public">
          </propertyref>
          <propertyref name="HelpContext" visibility="public">
          </propertyref>
          <propertyref name="StylesData" visibility="public">
          </propertyref>
          <propertyref name="StyleLookup" visibility="public">
          </propertyref>
          <propertyref name="LoadableStyle" visibility="public">
          </propertyref>
          <methodref name="LookupStyleObject" visibility="public" procflags="class">
          </methodref>
          <ancestor name="TControl" namespace="FMX.Controls">
            <interfaces>
              <implements name="ITriggerEffect"/>
              <implements name="ITriggerAnimation"/>
              <implements name="ITabStopController"/>
              <implements name="IGestureControl"/>
              <implements name="IEffectContainer"/>
              <implements name="IAlignableObject"/>
              <implements name="IRotatedControl"/>
              <implements name="IAlignRoot"/>
              <implements name="IContainerObject"/>
              <implements name="IControl"/>
            </interfaces>
            <methodref name="AddToEffectsList" visibility="class private">
            </methodref>
            <methodref name="RemoveFromEffectsList" visibility="class private">
            </methodref>
            <methodref name="GetInvertAbsoluteMatrix" visibility="class private">
            </methodref>
            <methodref name="SetPosition" visibility="class private">
            </methodref>
            <methodref name="SetHitTest" visibility="class private">
            </methodref>
            <methodref name="SetClipChildren" visibility="class private">
            </methodref>
            <methodref name="GetCanvas" visibility="class private" procflags="inline">
            </methodref>
            <methodref name="SetLocked" visibility="class private">
            </methodref>
            <methodref name="SetTempCanvas" visibility="class private">
            </methodref>
            <methodref name="SetOpacity" visibility="class private">
            </methodref>
            <methodref name="IsOpacityStored" visibility="class private">
            </methodref>
            <methodref name="SetCursor" visibility="class private">
            </methodref>
            <methodref name="RefreshInheritedCursor" visibility="class private">
            </methodref>
            <methodref name="RefreshInheritedCursorForChildren" visibility="class private">
            </methodref>
            <methodref name="GetAbsoluteWidth" visibility="class private">
            </methodref>
            <methodref name="GetAbsoluteHeight" visibility="class private">
            </methodref>
            <methodref name="IsAnchorsStored" visibility="class private">
            </methodref>
            <methodref name="GetEnabled" visibility="class private">
            </methodref>
            <methodref name="GetCursor" visibility="class private">
            </methodref>
            <methodref name="GetInheritedCursor" visibility="class private">
            </methodref>
            <methodref name="GetAbsoluteHasEffect" visibility="class private">
            </methodref>
            <methodref name="GetAbsoluteHasDisablePaintEffect" visibility="class private">
            </methodref>
            <methodref name="GetAbsoluteHasAfterPaintEffect" visibility="class private">
            </methodref>
            <methodref name="PaddingChangedHandler" visibility="class private" procflags="overload">
            </methodref>
            <methodref name="MarginsChanged" visibility="class private">
            </methodref>
            <methodref name="MatrixChanged" visibility="class private">
            </methodref>
            <methodref name="SizeChanged" visibility="class private">
            </methodref>
            <methodref name="GetControlsCount" visibility="class private">
            </methodref>
            <methodref name="OnClickStored" visibility="class private">
            </methodref>
            <methodref name="IsPopupMenuStored" visibility="class private">
            </methodref>
            <methodref name="RequestAlign" visibility="class private">
            </methodref>
            <methodref name="SetMinClipHeight" visibility="class private">
            </methodref>
            <methodref name="SetMinClipWidth" visibility="class private">
            </methodref>
            <methodref name="UpdateSmallSizeControl" visibility="class private">
            </methodref>
            <methodref name="Create@" visibility="class private" procflags="class constructor noself">
            </methodref>
            <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
            </methodref>
            <methodref name="SetOnClick" visibility="class private">
            </methodref>
            <methodref name="GetIsFocused" visibility="class private">
            </methodref>
            <methodref name="SetPadding" visibility="class private">
            </methodref>
            <methodref name="SetMargins" visibility="class private">
            </methodref>
            <methodref name="SetTouchTargetExpansion" visibility="class private">
            </methodref>
            <methodref name="InternalSizeChanged" visibility="class private">
            </methodref>
            <methodref name="ReadFixedWidth" visibility="class private">
            </methodref>
            <methodref name="WriteFixedWidth" visibility="class private">
            </methodref>
            <methodref name="ReadFixedHeight" visibility="class private">
            </methodref>
            <methodref name="WriteFixedHeight" visibility="class private">
            </methodref>
            <methodref name="ReadDesignVisible" visibility="class private">
            </methodref>
            <methodref name="ReadHint" visibility="class private">
            </methodref>
            <methodref name="ReadShowHint" visibility="class private">
            </methodref>
            <methodref name="DisabledOpacityStored" visibility="class private">
            </methodref>
            <methodref name="SetDisabledOpacity" visibility="class private">
            </methodref>
            <methodref name="GetAxisAlignedRect" visibility="class private">
            </methodref>
            <methodref name="GetRotationAngle" visibility="class private">
            </methodref>
            <methodref name="GetRotationCenter" visibility="class private">
            </methodref>
            <methodref name="GetScale" visibility="class private">
            </methodref>
            <methodref name="SetRotationAngle" visibility="class private">
            </methodref>
            <methodref name="SetRotationCenter" visibility="class private">
            </methodref>
            <methodref name="SetScale" visibility="class private">
            </methodref>
            <methodref name="GetTabOrder" visibility="class private">
            </methodref>
            <methodref name="SetTabOrder" visibility="class private">
            </methodref>
            <methodref name="GetTabStop" visibility="class private">
            </methodref>
            <methodref name="SetTabStop" visibility="class private">
            </methodref>
            <methodref name="SetDisableDisappear" visibility="class private">
            </methodref>
            <methodref name="GetDisableDisappear" visibility="class private">
            </methodref>
            <methodref name="UpdateParentProperties" visibility="class private">
            </methodref>
            <methodref name="CreateTouchManagerIfRequired" visibility="private">
            </methodref>
            <methodref name="GetTouchManager" visibility="private">
            </methodref>
            <methodref name="SetTouchManager" visibility="private">
            </methodref>
            <methodref name="IsShowHintStored" visibility="private">
            </methodref>
            <methodref name="SetParentShowHint" visibility="private">
            </methodref>
            <methodref name="SetShowHint" visibility="private">
            </methodref>
            <methodref name="GetAbsoluteClipRect" visibility="private">
            </methodref>
            <methodref name="HintStored" visibility="private">
            </methodref>
            <methodref name="RepaintJointArea" visibility="class protected">
            </methodref>
            <methodref name="DoAbsoluteChanged" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="CheckHitTest" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetInPaintTo" visibility="protected">
            </methodref>
            <methodref name="EndUpdateNoChanges" visibility="protected">
            </methodref>
            <methodref name="SetHint" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetEnabled" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Loaded" visibility="protected" procflags="override">
            </methodref>
            <methodref name="Updated" visibility="protected" procflags="override">
            </methodref>
            <methodref name="DefineProperties" visibility="protected" procflags="override">
            </methodref>
            <methodref name="Notification" visibility="protected" procflags="override">
            </methodref>
            <methodref name="ParentChanged" visibility="protected" procflags="override">
            </methodref>
            <methodref name="ChangeOrder" visibility="protected" procflags="override">
            </methodref>
            <methodref name="ChangeChildren" visibility="protected" procflags="override">
            </methodref>
            <methodref name="SetVisible" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoSetWidth" visibility="protected" procflags="virtual" symflags="deprecated">
            </methodref>
            <methodref name="DoSetHeight" visibility="protected" procflags="virtual" symflags="deprecated">
            </methodref>
            <methodref name="DoSetSize" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="HandleSizeChanged" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoMatrixChanged" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetHeight" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetWidth" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetSize" visibility="protected" procflags="overload virtual">
            </methodref>
            <methodref name="SetSize" visibility="protected" procflags="overload virtual">
            </methodref>
            <methodref name="GetAbsoluteRect" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetChildrenMatrix" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetAbsoluteScale" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetParentedRect" visibility="protected" procflags="virtual" symflags="deprecated">
            </methodref>
            <methodref name="GetClipRect" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetEffectsRect" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetAbsoluteEnabled" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetChildrenRect" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetLocalRect" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetBoundsRect" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetBoundsRect" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="IsHeightStored" visibility="protected" procflags="virtual" symflags="deprecated">
            </methodref>
            <methodref name="IsWidthStored" visibility="protected" procflags="virtual" symflags="deprecated">
            </methodref>
            <methodref name="IsPositionStored" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="IsSizeStored" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetPopupMenu" visibility="protected">
            </methodref>
            <methodref name="GetAbsoluteMatrix" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetHasClipParent" visibility="protected">
            </methodref>
            <methodref name="GetUpdateRect" visibility="protected">
            </methodref>
            <methodref name="DoGetUpdateRect" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetAbsoluteOpacity" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="BeginAutoDrag" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Capture" visibility="protected">
            </methodref>
            <methodref name="ReleaseCapture" visibility="protected">
            </methodref>
            <propertyref name="EnableExecuteAction" visibility="protected">
            </propertyref>
            <methodref name="Click" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DblClick" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="MouseDown" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="MouseMove" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="MouseUp" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="MouseWheel" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="MouseClick" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="KeyDown" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="KeyUp" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DialogKey" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="AfterDialogKey" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ShowContextMenu" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DragEnter" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DragOver" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DragDrop" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DragLeave" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DragEnd" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetDefaultTouchTargetExpansion" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetCanFocus" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetCanParentFocus" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="EnterChildren" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ExitChildren" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetParentedVisible" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="NeedUpdateEffects" visibility="protected">
            </methodref>
            <methodref name="BeforeEffectEnabledChanged" visibility="protected">
            </methodref>
            <methodref name="EffectEnabledChanged" visibility="protected">
            </methodref>
            <methodref name="Realign" visibility="protected">
            </methodref>
            <methodref name="ChildrenAlignChanged" visibility="protected">
            </methodref>
            <methodref name="GetAlign" visibility="protected">
            </methodref>
            <methodref name="SetAlign" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetAnchors" visibility="protected">
            </methodref>
            <methodref name="SetAnchors" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetMargins" visibility="protected">
            </methodref>
            <methodref name="GetPadding" visibility="protected">
            </methodref>
            <methodref name="GetWidth" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetHeight" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetLeft" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetTop" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetAllowAlign" visibility="protected">
            </methodref>
            <methodref name="GetAnchorRules" visibility="protected">
            </methodref>
            <methodref name="GetAnchorOrigin" visibility="protected">
            </methodref>
            <methodref name="GetOriginalParentSize" visibility="protected">
            </methodref>
            <methodref name="GetAnchorMove" visibility="protected">
            </methodref>
            <methodref name="SetAnchorMove" visibility="protected">
            </methodref>
            <methodref name="GetAdjustSizeValue" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetAdjustType" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetContainerWidth" visibility="protected">
            </methodref>
            <methodref name="GetContainerHeight" visibility="protected">
            </methodref>
            <methodref name="GetObject" visibility="protected">
            </methodref>
            <methodref name="GetParent" visibility="protected">
            </methodref>
            <methodref name="GetVisible" visibility="protected">
            </methodref>
            <methodref name="GetDesignInteractive" visibility="protected">
            </methodref>
            <methodref name="GetPopupMenu" visibility="protected">
            </methodref>
            <methodref name="DoEnter" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoExit" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoActivate" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoDeactivate" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoMouseEnter" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoMouseLeave" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="CheckForAllowFocus" visibility="protected">
            </methodref>
            <methodref name="GetDragMode" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetDragMode" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetLocked" visibility="protected">
            </methodref>
            <methodref name="GetHitTest" visibility="protected">
            </methodref>
            <methodref name="GetAcceptsControls" visibility="protected">
            </methodref>
            <methodref name="SetAcceptsControls" visibility="protected">
            </methodref>
            <methodref name="FindTarget" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ObjectAtPoint" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="HasHint" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetHintString" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetHintObject" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="CanShowHint" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="BroadcastGesture" visibility="protected">
            </methodref>
            <methodref name="CMGesture" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="TouchManager" visibility="protected">
            </methodref>
            <methodref name="GetFirstControlWithGesture" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetFirstControlWithGestureEngine" visibility="protected">
            </methodref>
            <methodref name="GetListOfInteractiveGestures" visibility="protected">
            </methodref>
            <methodref name="Tap" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetFirstVisibleObjectIndex" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetLastVisibleObjectIndex" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetDefaultSize" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="FillTextFlags" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ApplyEffect" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="PaintInternal" visibility="protected">
            </methodref>
            <methodref name="SupportsPaintStage" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="CanRepaint" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="RepaintRect" visibility="protected">
            </methodref>
            <methodref name="PaintChildren" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Painting" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Paint" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoPaint" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="AfterPaint" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DrawDesignBorder" visibility="protected">
            </methodref>
            <methodref name="DoRealign" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoBeginUpdate" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoEndUpdate" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Move" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Resize" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoResized" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Disappear" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Show" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Hide" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="AncestorVisibleChanged" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="AncestorParentChanged" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ClipChildrenChanged" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="HitTestChanged" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="PaddingChanged" visibility="protected" procflags="overload virtual">
            </methodref>
            <propertyref name="MinClipWidth" visibility="protected">
            </propertyref>
            <propertyref name="MinClipHeight" visibility="protected">
            </propertyref>
            <propertyref name="SmallSizeControl" visibility="protected">
            </propertyref>
            <methodref name="DoAddObject" visibility="protected" procflags="override">
            </methodref>
            <methodref name="DoInsertObject" visibility="protected" procflags="override">
            </methodref>
            <methodref name="DoRemoveObject" visibility="protected" procflags="override">
            </methodref>
            <methodref name="DoDeleteChildren" visibility="protected" procflags="override">
            </methodref>
            <propertyref name="PaintStage" visibility="protected">
            </propertyref>
            <propertyref name="TempCanvas" visibility="protected">
            </propertyref>
            <methodref name="SetLeft" visibility="protected">
            </methodref>
            <methodref name="SetTop" visibility="protected">
            </methodref>
            <methodref name="UpdateExplicitBounds" visibility="protected">
            </methodref>
            <methodref name="UpdateAnchorRules" visibility="protected">
            </methodref>
            <propertyref name="Left" visibility="protected">
            </propertyref>
            <propertyref name="Top" visibility="protected">
            </propertyref>
            <propertyref name="ExplicitLeft" visibility="protected">
            </propertyref>
            <propertyref name="ExplicitTop" visibility="protected">
            </propertyref>
            <propertyref name="ExplicitWidth" visibility="protected">
            </propertyref>
            <propertyref name="ExplicitHeight" visibility="protected">
            </propertyref>
            <methodref name="GetActionLinkClass" visibility="protected" procflags="override">
            </methodref>
            <methodref name="ActionChange" visibility="protected" procflags="override">
            </methodref>
            <methodref name="EnabledStored" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="VisibleStored" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="EnabledChanged" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="VisibleChanged" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="IsControlRectEmpty" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetControls" visibility="protected">
            </methodref>
            <methodref name="DoGesture" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetTabStopController" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetTabListClass" visibility="protected" procflags="virtual">
            </methodref>
            <propertyref name="DoubleClick" visibility="protected">
            </propertyref>
            <propertyref name="RotationAngle" visibility="protected">
            </propertyref>
            <propertyref name="RotationCenter" visibility="protected">
            </propertyref>
            <propertyref name="Scale" visibility="protected">
            </propertyref>
            <propertyref name="DisabledOpacity" visibility="protected">
            </propertyref>
            <propertyref name="ParentContent" visibility="protected">
            </propertyref>
            <propertyref name="ParentShowHint" visibility="protected">
            </propertyref>
            <methodref name="Create" visibility="public" procflags="constructor override">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor override">
            </methodref>
            <methodref name="SetNewScene" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="SetBounds" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="AbsoluteToLocal" visibility="public" procflags="overload virtual">
            </methodref>
            <methodref name="AbsoluteToLocal" visibility="public" procflags="overload">
            </methodref>
            <methodref name="LocalToAbsolute" visibility="public" procflags="overload virtual">
            </methodref>
            <methodref name="LocalToAbsolute" visibility="public" procflags="overload">
            </methodref>
            <methodref name="ScreenToLocal" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="LocalToScreen" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="ConvertLocalPointFrom" visibility="public">
            </methodref>
            <methodref name="ConvertLocalPointTo" visibility="public">
            </methodref>
            <methodref name="AbsoluteToLocalVector" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="LocalToAbsoluteVector" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="PointInObject" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="PointInObjectLocal" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="MakeScreenshot" visibility="public">
            </methodref>
            <methodref name="BeginUpdate" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="IsUpdating" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="EndUpdate" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="RecalcAbsoluteNow" visibility="public">
            </methodref>
            <methodref name="RecalcUpdateRect" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="RecalcOpacity" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="RecalcAbsolute" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="RecalcEnabled" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="RecalcHasEffect" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="RecalcHasClipParent" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="PrepareForPaint" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="RecalcSize" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="UpdateEffects" visibility="public">
            </methodref>
            <methodref name="ApplyTriggerEffect" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="StartTriggerAnimation" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="StartTriggerAnimationWait" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="SetFocus" visibility="public">
            </methodref>
            <methodref name="ResetFocus" visibility="public">
            </methodref>
            <methodref name="PaintTo" visibility="public">
            </methodref>
            <methodref name="Repaint" visibility="public">
            </methodref>
            <methodref name="InvalidateRect" visibility="public">
            </methodref>
            <methodref name="Lock" visibility="public">
            </methodref>
            <propertyref name="AbsoluteMatrix" visibility="public">
            </propertyref>
            <propertyref name="AbsoluteOpacity" visibility="public">
            </propertyref>
            <propertyref name="AbsoluteWidth" visibility="public">
            </propertyref>
            <propertyref name="AbsoluteHeight" visibility="public">
            </propertyref>
            <propertyref name="AbsoluteScale" visibility="public">
            </propertyref>
            <propertyref name="AbsoluteEnabled" visibility="public">
            </propertyref>
            <propertyref name="AbsoluteRect" visibility="public">
            </propertyref>
            <propertyref name="AbsoluteClipRect" visibility="public">
            </propertyref>
            <propertyref name="AxisAlignedRect" visibility="public">
            </propertyref>
            <propertyref name="ApplyingEffect" visibility="public">
            </propertyref>
            <propertyref name="HasEffect" visibility="public">
            </propertyref>
            <propertyref name="HasDisablePaintEffect" visibility="public">
            </propertyref>
            <propertyref name="HasAfterPaintEffect" visibility="public">
            </propertyref>
            <propertyref name="HasClipParent" visibility="public">
            </propertyref>
            <propertyref name="ChildrenRect" visibility="public">
            </propertyref>
            <propertyref name="DefaultSize" visibility="public">
            </propertyref>
            <propertyref name="FixedSize" visibility="public">
            </propertyref>
            <propertyref name="InvertAbsoluteMatrix" visibility="public">
            </propertyref>
            <propertyref name="InPaintTo" visibility="public">
            </propertyref>
            <propertyref name="LocalRect" visibility="public">
            </propertyref>
            <propertyref name="Pressed" visibility="public">
            </propertyref>
            <propertyref name="PressedPosition" visibility="public">
            </propertyref>
            <propertyref name="UpdateRect" visibility="public">
            </propertyref>
            <propertyref name="BoundsRect" visibility="public">
            </propertyref>
            <propertyref name="ParentedRect" visibility="public">
            </propertyref>
            <propertyref name="ParentedVisible" visibility="public">
            </propertyref>
            <propertyref name="ClipRect" visibility="public">
            </propertyref>
            <propertyref name="Canvas" visibility="public">
            </propertyref>
            <propertyref name="Controls" visibility="public">
            </propertyref>
            <propertyref name="ControlsCount" visibility="public">
            </propertyref>
            <propertyref name="ParentControl" visibility="public">
            </propertyref>
            <propertyref name="Scene" visibility="public">
            </propertyref>
            <propertyref name="AutoCapture" visibility="public">
            </propertyref>
            <propertyref name="CanFocus" visibility="public">
            </propertyref>
            <propertyref name="CanParentFocus" visibility="public">
            </propertyref>
            <propertyref name="DisableFocusEffect" visibility="public">
            </propertyref>
            <propertyref name="IsInflated" visibility="public">
            </propertyref>
            <methodref name="EnumControls" visibility="public" procflags="overload">
            </methodref>
            <methodref name="EnumControls" visibility="public" procflags="overload" symflags="deprecated">
            </methodref>
            <methodref name="GetTabList" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="ShowInDesigner" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="ShouldTestMouseHits" visibility="public" procflags="virtual">
            </methodref>
            <propertyref name="IsMouseOver" visibility="public">
            </propertyref>
            <propertyref name="IsDragOver" visibility="public">
            </propertyref>
            <propertyref name="IsFocused" visibility="public">
            </propertyref>
            <propertyref name="IsVisible" visibility="public">
            </propertyref>
            <propertyref name="Align" visibility="public">
            </propertyref>
            <propertyref name="Anchors" visibility="public">
            </propertyref>
            <propertyref name="Cursor" visibility="public">
            </propertyref>
            <propertyref name="InheritedCursor" visibility="public">
            </propertyref>
            <propertyref name="DragMode" visibility="public">
            </propertyref>
            <propertyref name="EnableDragHighlight" visibility="public">
            </propertyref>
            <propertyref name="Enabled" visibility="public">
            </propertyref>
            <propertyref name="Position" visibility="public">
            </propertyref>
            <propertyref name="Locked" visibility="public">
            </propertyref>
            <propertyref name="Width" visibility="public">
            </propertyref>
            <propertyref name="Height" visibility="public">
            </propertyref>
            <propertyref name="Size" visibility="public">
            </propertyref>
            <propertyref name="Padding" visibility="public">
            </propertyref>
            <propertyref name="Margins" visibility="public">
            </propertyref>
            <propertyref name="Opacity" visibility="public">
            </propertyref>
            <propertyref name="ClipChildren" visibility="public">
            </propertyref>
            <propertyref name="ClipParent" visibility="public">
            </propertyref>
            <propertyref name="HitTest" visibility="public">
            </propertyref>
            <propertyref name="PopupMenu" visibility="public">
            </propertyref>
            <propertyref name="TabOrder" visibility="public">
            </propertyref>
            <propertyref name="Visible" visibility="public">
            </propertyref>
            <eventref name="CustomSceneAddRect" visibility="public">
            </eventref>
            <eventref name="OnDragEnter" visibility="public">
            </eventref>
            <eventref name="OnDragLeave" visibility="public">
            </eventref>
            <eventref name="OnDragOver" visibility="public">
            </eventref>
            <eventref name="OnDragDrop" visibility="public">
            </eventref>
            <eventref name="OnDragEnd" visibility="public">
            </eventref>
            <eventref name="OnKeyDown" visibility="public">
            </eventref>
            <eventref name="OnKeyUp" visibility="public">
            </eventref>
            <eventref name="OnClick" visibility="public">
            </eventref>
            <eventref name="OnDblClick" visibility="public">
            </eventref>
            <eventref name="OnCanFocus" visibility="public">
            </eventref>
            <eventref name="OnEnter" visibility="public">
            </eventref>
            <eventref name="OnExit" visibility="public">
            </eventref>
            <eventref name="OnMouseDown" visibility="public">
            </eventref>
            <eventref name="OnMouseMove" visibility="public">
            </eventref>
            <eventref name="OnMouseUp" visibility="public">
            </eventref>
            <eventref name="OnMouseWheel" visibility="public">
            </eventref>
            <eventref name="OnMouseEnter" visibility="public">
            </eventref>
            <eventref name="OnMouseLeave" visibility="public">
            </eventref>
            <eventref name="OnPainting" visibility="public">
            </eventref>
            <eventref name="OnPaint" visibility="public">
            </eventref>
            <eventref name="OnResize" visibility="public">
            </eventref>
            <eventref name="OnResized" visibility="public">
            </eventref>
            <eventref name="OnActivate" visibility="public">
            </eventref>
            <eventref name="OnDeactivate" visibility="public">
            </eventref>
            <eventref name="OnApplyStyleLookup" visibility="public">
            </eventref>
            <propertyref name="TouchTargetExpansion" visibility="public">
            </propertyref>
            <propertyref name="TabStop" visibility="public">
            </propertyref>
            <propertyref name="DisableDisappear" visibility="public">
            </propertyref>
            <propertyref name="ShowHint" visibility="public">
            </propertyref>
            <propertyref name="Hint" visibility="public">
            </propertyref>
            <propertyref name="Touch" visibility="published">
            </propertyref>
            <eventref name="OnGesture" visibility="published">
            </eventref>
            <eventref name="OnTap" visibility="published">
            </eventref>
            <ancestor name="TFmxObject" namespace="FMX.Types">
              <interfaces>
                <implements name="IActionClient"/>
                <implements name="IFreeNotification"/>
              </interfaces>
              <methodref name="SetStyleName" visibility="private">
              </methodref>
              <methodref name="SetStored" visibility="private">
              </methodref>
              <methodref name="GetChildrenCount" visibility="private" procflags="inline">
              </methodref>
              <methodref name="GetIndexOfChild" visibility="private">
              </methodref>
              <methodref name="SetIndexOfChild" visibility="private">
              </methodref>
              <methodref name="SetIndex" visibility="private">
              </methodref>
              <methodref name="GetActionRoot" visibility="private">
              </methodref>
              <methodref name="GetActionClient" visibility="private" procflags="inline">
              </methodref>
              <methodref name="SetActionClient" visibility="private">
              </methodref>
              <methodref name="GetAction" visibility="private">
              </methodref>
              <methodref name="SetAction" visibility="private">
              </methodref>
              <methodref name="GetIndex" visibility="private">
              </methodref>
              <methodref name="Create@" visibility="class private" procflags="class constructor noself">
              </methodref>
              <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
              </methodref>
              <methodref name="CreateChildrenList" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ResetChildrenIndicesSpan" visibility="protected">
              </methodref>
              <methodref name="ResetChildrenIndices" visibility="protected">
              </methodref>
              <methodref name="GetBackIndex" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DefineProperties" visibility="protected" procflags="override">
              </methodref>
              <methodref name="IgnoreBindingName" visibility="protected">
              </methodref>
              <methodref name="GetChildren" visibility="protected" procflags="override">
              </methodref>
              <methodref name="SetParentComponent" visibility="protected" procflags="override">
              </methodref>
              <methodref name="Notification" visibility="protected" procflags="override">
              </methodref>
              <methodref name="GetActionLinkClass" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="InitiateAction" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoActionChange" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ActionChange" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoActionClientChanged" visibility="protected" procflags="virtual">
              </methodref>
              <propertyref name="ActionLink" visibility="protected">
              </propertyref>
              <propertyref name="Action" visibility="protected">
              </propertyref>
              <propertyref name="StyleIndexer" visibility="protected">
              </propertyref>
              <methodref name="GetParentComponent" visibility="public" procflags="override">
              </methodref>
              <methodref name="HasParent" visibility="public" procflags="override">
              </methodref>
              <methodref name="AddToResourcePool" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="RemoveFromResourcePool" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetParent" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoRootChanging" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoRootChanged" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ParentChanged" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ChangeOrder" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ChangeChildren" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoAddObject" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoInsertObject" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoRemoveObject" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoDeleteChildren" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SearchInto" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="FreeNotification" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SupportsPlatformService" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetData" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetData" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="IgnoreIntegerValue" visibility="protected">
              </methodref>
              <methodref name="IgnoreFloatValue" visibility="protected">
              </methodref>
              <methodref name="IgnoreBooleanValue" visibility="protected">
              </methodref>
              <methodref name="IgnoreIdentValue" visibility="protected">
              </methodref>
              <methodref name="Create" visibility="public" procflags="constructor override">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor override">
              </methodref>
              <methodref name="BeforeDestruction" visibility="public" procflags="override">
              </methodref>
              <methodref name="Release" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="Released" visibility="public" symflags="deprecated">
              </methodref>
              <methodref name="ObjectState" visibility="public" symflags="deprecated">
              </methodref>
              <methodref name="SetRoot" visibility="public">
              </methodref>
              <methodref name="SetDesign" visibility="public">
              </methodref>
              <methodref name="Clone" visibility="public">
              </methodref>
              <methodref name="AddObject" visibility="public">
              </methodref>
              <methodref name="InsertObject" visibility="public">
              </methodref>
              <methodref name="RemoveObject" visibility="public" procflags="overload">
              </methodref>
              <methodref name="RemoveObject" visibility="public" procflags="overload">
              </methodref>
              <methodref name="ContainsObject" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="Exchange" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="DeleteChildren" visibility="public">
              </methodref>
              <methodref name="IsChild" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="BringChildToFront" visibility="public">
              </methodref>
              <methodref name="SendChildToBack" visibility="public">
              </methodref>
              <methodref name="BringToFront" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="SendToBack" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="AddObjectsToList" visibility="public">
              </methodref>
              <methodref name="Sort" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="EnumObjects" visibility="public">
              </methodref>
              <methodref name="AnimateFloat" visibility="public" symflags="deprecated">
              </methodref>
              <methodref name="AnimateFloatDelay" visibility="public" symflags="deprecated">
              </methodref>
              <methodref name="AnimateFloatWait" visibility="public" symflags="deprecated">
              </methodref>
              <methodref name="AnimateInt" visibility="public" symflags="deprecated">
              </methodref>
              <methodref name="AnimateIntWait" visibility="public" symflags="deprecated">
              </methodref>
              <methodref name="AnimateColor" visibility="public" symflags="deprecated">
              </methodref>
              <methodref name="StopPropertyAnimation" visibility="public">
              </methodref>
              <methodref name="AddFreeNotify" visibility="public">
              </methodref>
              <methodref name="RemoveFreeNotify" visibility="public">
              </methodref>
              <methodref name="FindStyleResource" visibility="public" procflags="overload virtual">
              </methodref>
              <propertyref name="Root" visibility="public">
              </propertyref>
              <propertyref name="Stored" visibility="public">
              </propertyref>
              <propertyref name="TagObject" visibility="public">
              </propertyref>
              <propertyref name="TagFloat" visibility="public">
              </propertyref>
              <propertyref name="TagString" visibility="public">
              </propertyref>
              <propertyref name="ChildrenCount" visibility="public">
              </propertyref>
              <propertyref name="Children" visibility="public">
              </propertyref>
              <propertyref name="Data" visibility="public">
              </propertyref>
              <propertyref name="Parent" visibility="public">
              </propertyref>
              <propertyref name="Index" visibility="public">
              </propertyref>
              <propertyref name="ActionClient" visibility="public">
              </propertyref>
              <propertyref name="StyleName" visibility="published">
              </propertyref>
              <ancestor name="TComponent" namespace="System.Classes">
                <interfaces>
                  <implements name="IInterfaceComponentReference"/>
                  <implements name="IInterface"/>
                </interfaces>
                <methodref name="GetComObject" visibility="private">
                </methodref>
                <methodref name="GetComponent" visibility="private">
                </methodref>
                <methodref name="GetComponentCount" visibility="private">
                </methodref>
                <methodref name="GetComponentIndex" visibility="private">
                </methodref>
                <methodref name="Insert" visibility="private">
                </methodref>
                <methodref name="ReadLeft" visibility="private">
                </methodref>
                <methodref name="ReadTop" visibility="private">
                </methodref>
                <methodref name="Remove" visibility="private">
                </methodref>
                <methodref name="RemoveNotification" visibility="private">
                </methodref>
                <methodref name="SetComponentIndex" visibility="private">
                </methodref>
                <methodref name="SetReference" visibility="private">
                </methodref>
                <methodref name="WriteLeft" visibility="private">
                </methodref>
                <methodref name="WriteTop" visibility="private">
                </methodref>
                <methodref name="IntfGetComponent" visibility="private">
                </methodref>
                <methodref name="DoGetDeltaStreams" visibility="private">
                </methodref>
                <methodref name="ReadDeltaStream" visibility="private">
                </methodref>
                <methodref name="ReadDeltaState" visibility="private">
                </methodref>
                <methodref name="FindSortedComponent" visibility="private">
                </methodref>
                <methodref name="AddSortedComponent" visibility="private">
                </methodref>
                <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
                </methodref>
                <methodref name="Create@" visibility="class private" procflags="class constructor noself">
                </methodref>
                <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="ChangeName" visibility="protected">
                </methodref>
                <methodref name="DefineProperties" visibility="protected" procflags="override">
                </methodref>
                <methodref name="GetChildren" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="GetOwner" visibility="protected" procflags="override">
                </methodref>
                <methodref name="Loaded" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="Notification" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="ReadState" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="CanObserve" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="GetObservers" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="SetAncestor" visibility="protected">
                </methodref>
                <methodref name="SetDesigning" visibility="protected">
                </methodref>
                <methodref name="SetInline" visibility="protected">
                </methodref>
                <methodref name="SetDesignInstance" visibility="protected">
                </methodref>
                <methodref name="SetName" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="Updating" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="Updated" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
                </methodref>
                <methodref name="ValidateRename" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="WriteState" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="RemoveFreeNotifications" visibility="protected">
                </methodref>
                <methodref name="QueryInterface" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="_AddRef" visibility="protected">
                </methodref>
                <methodref name="_Release" visibility="protected">
                </methodref>
                <methodref name="GetTypeInfoCount" visibility="protected">
                </methodref>
                <methodref name="GetTypeInfo" visibility="protected">
                </methodref>
                <methodref name="GetIDsOfNames" visibility="protected">
                </methodref>
                <methodref name="Invoke" visibility="protected">
                </methodref>
                <eventref name="OnGetDeltaStreams" visibility="protected">
                </eventref>
                <methodref name="Create" visibility="public" procflags="constructor virtual">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor override">
                </methodref>
                <methodref name="BeforeDestruction" visibility="public" procflags="override">
                </methodref>
                <methodref name="BeginInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="BeginInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="BeginInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="BeginInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="BeginInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="BeginInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="BeginInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="BeginInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="EndInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="EndInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="EndFunctionInvoke" visibility="public">
                </methodref>
                <methodref name="DestroyComponents" visibility="public">
                </methodref>
                <methodref name="Destroying" visibility="public">
                </methodref>
                <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
                </methodref>
                <methodref name="FindComponent" visibility="public">
                </methodref>
                <methodref name="FreeNotification" visibility="public">
                </methodref>
                <methodref name="RemoveFreeNotification" visibility="public">
                </methodref>
                <methodref name="FreeOnRelease" visibility="public">
                </methodref>
                <methodref name="GetEnumerator" visibility="public" procflags="inline">
                </methodref>
                <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
                </methodref>
                <methodref name="GetNamePath" visibility="public" procflags="override">
                </methodref>
                <methodref name="HasParent" visibility="public" procflags="dynamic">
                </methodref>
                <methodref name="InsertComponent" visibility="public">
                </methodref>
                <methodref name="RemoveComponent" visibility="public">
                </methodref>
                <methodref name="SetSubComponent" visibility="public">
                </methodref>
                <methodref name="SafeCallException" visibility="public" procflags="override">
                </methodref>
                <methodref name="UpdateAction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="IsImplementorOf" visibility="public">
                </methodref>
                <methodref name="ReferenceInterface" visibility="public">
                </methodref>
                <propertyref name="ComObject" visibility="public">
                </propertyref>
                <propertyref name="Components" visibility="public">
                </propertyref>
                <propertyref name="ComponentCount" visibility="public">
                </propertyref>
                <propertyref name="ComponentIndex" visibility="public">
                </propertyref>
                <propertyref name="ComponentState" visibility="public">
                </propertyref>
                <propertyref name="ComponentStyle" visibility="public">
                </propertyref>
                <propertyref name="DesignInfo" visibility="public">
                </propertyref>
                <propertyref name="Owner" visibility="public">
                </propertyref>
                <propertyref name="VCLComObject" visibility="public">
                </propertyref>
                <propertyref name="Observers" visibility="public">
                </propertyref>
                <propertyref name="Name" visibility="published">
                </propertyref>
                <propertyref name="Tag" visibility="published">
                </propertyref>
                <ancestor name="TPersistent" namespace="System.Classes">
                  <methodref name="AssignError" visibility="private">
                  </methodref>
                  <methodref name="AssignTo" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="DefineProperties" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="GetOwner" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="Destroy" visibility="public" procflags="destructor override">
                  </methodref>
                  <methodref name="Assign" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="GetNamePath" visibility="public" procflags="dynamic">
                  </methodref>
                  <ancestor name="TObject" namespace="System">
                    <methodref name="Create" visibility="public" procflags="constructor">
                    </methodref>
                    <methodref name="Free" visibility="public">
                    </methodref>
                    <methodref name="DisposeOf" visibility="public" procflags="inline">
                    </methodref>
                    <methodref name="InitInstance" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="CleanupInstance" visibility="public">
                    </methodref>
                    <methodref name="ClassType" visibility="public" procflags="inline">
                    </methodref>
                    <methodref name="ClassName" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="ClassNameIs" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="ClassParent" visibility="public" procflags="class inline">
                    </methodref>
                    <methodref name="ClassInfo" visibility="public" procflags="class inline">
                    </methodref>
                    <methodref name="InstanceSize" visibility="public" procflags="class inline">
                    </methodref>
                    <methodref name="InheritsFrom" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="MethodAddress" visibility="public" procflags="class overload">
                    </methodref>
                    <methodref name="MethodAddress" visibility="public" procflags="class overload">
                    </methodref>
                    <methodref name="MethodName" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="QualifiedClassName" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="FieldAddress" visibility="public" procflags="overload">
                    </methodref>
                    <methodref name="FieldAddress" visibility="public" procflags="overload">
                    </methodref>
                    <methodref name="GetInterface" visibility="public">
                    </methodref>
                    <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                    </methodref>
                    <methodref name="UnitName" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="UnitScope" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="Equals" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="GetHashCode" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="ToString" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="SafeCallException" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="Dispatch" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="NewInstance" visibility="public" procflags="class virtual">
                    </methodref>
                    <methodref name="FreeInstance" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                    </methodref>
                    <methodref name="GetDisposed" visibility="protected" procflags="inline">
                    </methodref>
                    <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                    </methodref>
                    <propertyref name="Disposed" visibility="protected">
                    </propertyref>
                  </ancestor>
                </ancestor>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <interfaces>
      <implements name="IListViewDesignPresentationParent"/>
      <implements name="IListViewPresentationParent"/>
    </interfaces>
    <members>
      <field name="FPresentation" type="IListViewPresentation" visibility="class private" size="4" offset="1440" file="FMX.ListView.pas" line="655"/>
      <field name="FPresentationLocked" type="Integer" visibility="class private" size="4" offset="1444" file="FMX.ListView.pas" line="656"/>
      <field name="FCreatingNativeView" type="Boolean" visibility="class private" size="1" offset="1448" file="FMX.ListView.pas" line="657"/>
      <procedure name="ExecuteInterlocked" visibility="protected" file="FMX.ListView.pas" line="660">
        <devnotes><summary>
Executes the specified procedure as long as there is no other call to ExecuteInterlocked in progress called from a separate thread. If there is a call to ExecuteInterlocked in progress, the specified procedure is never executed.


</summary></devnotes>
        <parameters>
          <parameter name="P" type="TProc" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="CanSelectItem" visibility="protected" file="FMX.ListView.pas" line="662">
        <devnotes><summary>
Returns True if the underlying data model allows the presentation layer to select the specified item; it returns False otherwise.
</summary></devnotes>
        <parameters>
          <parameter name="AItemIndex" type="Integer" paramflags="const"/>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="CanUnselectItem" visibility="protected" file="FMX.ListView.pas" line="664">
        <devnotes><summary>
Returns True if the underlying data model allows the presentation layer to unselect the specified item; it returns False otherwise.
</summary></devnotes>
        <parameters>
          <parameter name="AItemIndex" type="Integer" paramflags="const"/>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <procedure name="DidSelectItem" visibility="protected" file="FMX.ListView.pas" line="666">
        <devnotes><summary>
The presentation layer executes this method to indicate that it has selected the specified item.
</summary></devnotes>
        <parameters>
          <parameter name="AItemIndex" type="Integer" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DidUnselectItem" visibility="protected" file="FMX.ListView.pas" line="668">
        <devnotes><summary>
The presentation layer executes this method to indicate that it has unselected the specified item.
</summary></devnotes>
        <parameters>
          <parameter name="AItemIndex" type="Integer" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="ChangeOrder" visibility="protected" procflags="override" file="FMX.ListView.pas" line="669">
      <devnotes><summary>


Notification method called after the creation order is changed.
FMX.ListView.TPresentedListView.ChangeOrder inherits from FMX.Types.TFmxObject.ChangeOrder. All content below this line refers to FMX.Types.TFmxObject.ChangeOrder.
Notification method called after the creation order is changed. ChangeOrder is a virtual method to be implemented in subclasses to allow for changing the creation order of this FMX object.
</summary></devnotes></procedure>
      <procedure name="ParentChanged" visibility="protected" procflags="override" file="FMX.ListView.pas" line="670">
      <devnotes><summary>
Executed right after the value of the Parent property changes.
FMX.ListView.TPresentedListView.ParentChanged inherits from FMX.Controls.TControl.ParentChanged. All content below this line refers to FMX.Controls.TControl.ParentChanged.
Executed right after the value of the Parent property changes.
The control does not execute ParentChanged if you assign Parent the same value that it already has.

 See Also
FMX.Controls.TControl.AncestorParentChanged
FMX.Controls.TControl.ClipChildrenChanged
FMX.Controls.TControl.EffectEnabledChanged
FMX.Controls.TControl.EnabledChanged
FMX.Controls.TControl.HandleSizeChanged
FMX.Controls.TControl.HitTestChanged
FMX.Controls.TControl.PaddingChanged
FMX.Controls.TControl.VisibleChanged
FMX.Controls.TControl.AncestorVisibleChanged
FMX.Controls.TControl.ChildrenAlignChanged

</summary></devnotes></procedure>
      <procedure name="PaintChildren" visibility="protected" procflags="override" file="FMX.ListView.pas" line="671">
      <devnotes><summary>
Renders the child controls.
FMX.ListView.TPresentedListView.PaintChildren inherits from FMX.Controls.TControl.PaintChildren. All content below this line refers to FMX.Controls.TControl.PaintChildren.
Renders the child controls.
The PaintChildren method is called automatically in the process of painting of the current control. It renders child controls, if any, on the surface specified by the Canvas property. 
The effects that are applied to the control are also applied to its children.
TControl descendants can override PaintChildren to provide specific rendering of the respective controls.
</summary></devnotes></procedure>
      <procedure name="AncestorVisibleChanged" visibility="protected" procflags="override" file="FMX.ListView.pas" line="672">
        <parameters>
          <parameter name="Visible" type="Boolean" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Notifies its child controls that the visibility of an ancestor of your control has changed to Visible.
FMX.ListView.TPresentedListView.AncestorVisibleChanged inherits from FMX.Controls.TControl.AncestorVisibleChanged. All content below this line refers to FMX.Controls.TControl.AncestorVisibleChanged.
Notifies its child controls that the visibility of an ancestor of your control has changed to Visible.

 See Also
FMX.Controls.TControl.AncestorParentChanged
FMX.Controls.TControl.ChildrenAlignChanged
FMX.Controls.TControl.ClipChildrenChanged
FMX.Controls.TControl.EffectEnabledChanged
FMX.Controls.TControl.EnabledChanged
FMX.Controls.TControl.HandleSizeChanged
FMX.Controls.TControl.HitTestChanged
FMX.Controls.TControl.PaddingChanged
FMX.Controls.TControl.ParentChanged

</summary></devnotes></procedure>
      <procedure name="DoSetItemIndexInternal" visibility="protected" procflags="override" file="FMX.ListView.pas" line="673">
        <parameters>
          <parameter name="Value" type="Integer" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Used internally by presentation hook.

Used internally by presentation hook.


</summary></devnotes></procedure>
      <procedure name="DoEditModeChange" visibility="protected" procflags="override" file="FMX.ListView.pas" line="674">
      <devnotes><summary>
Responds to entering of the list view into edit mode.
The DoEditModeChange method also fires an OnEditModeChange event.
</summary></devnotes></procedure>
      <procedure name="DoItemsChange" visibility="protected" procflags="override" file="FMX.ListView.pas" line="675">
      <devnotes><summary>
This virtual method is called inmediately after a list of items has been changed.
</summary></devnotes></procedure>
      <procedure name="DoItemsInvalidate" visibility="protected" procflags="override" file="FMX.ListView.pas" line="676">
      <devnotes><summary>


Called when the items of the adapter need to be painted again.
FMX.ListView.TPresentedListView.DoItemsInvalidate inherits from FMX.ListView.TAdapterListView.DoItemsInvalidate. All content below this line refers to FMX.ListView.TAdapterListView.DoItemsInvalidate.
Called when the items of the adapter need to be painted again.

 See Also
FMX.ListView.TAdapterListView.DoItemsChange
FMX.ListView.TAdapterListView.DoItemsCouldHaveChanged
FMX.ListView.TAdapterListView.DoItemsMayChange
FMX.ListView.TAdapterListView.DoItemsResize
FMX.Controls.TControl.Repaint

</summary></devnotes></procedure>
      <procedure name="DoItemInvalidated" visibility="protected" procflags="override" file="FMX.ListView.pas" line="677">
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Notifies the TListView that the item requires repainting.
FMX.ListView.TPresentedListView.DoItemInvalidated inherits from FMX.ListView.TListViewBase.DoItemInvalidated. All content below this line refers to FMX.ListView.TListViewBase.DoItemInvalidated.
Notifies the TListView that the item requires repainting.


</summary></devnotes></procedure>
      <procedure name="DoCheckStateChanged" visibility="protected" procflags="override" file="FMX.ListView.pas" line="678">
        <parameters>
          <parameter name="AItem" type="TListItem" paramflags="const"/>
          <parameter name="Control" type="TListItemDrawable" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Notifies the TListView that a control inside of an item is clicked.
FMX.ListView.TPresentedListView.DoCheckStateChanged inherits from FMX.ListView.TListViewBase.DoCheckStateChanged. All content below this line refers to FMX.ListView.TListViewBase.DoCheckStateChanged.
Notifies the TListView that a control inside of an item is clicked.


</summary></devnotes></procedure>
      <procedure name="DoUpdateScrollViewPos" visibility="protected" procflags="override" file="FMX.ListView.pas" line="679">
        <parameters>
          <parameter name="Value" type="Single" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Used internally by presentation hook.

Used internally by presentation hook.


</summary></devnotes></procedure>
      <procedure name="DoSetScrollViewPos" visibility="protected" procflags="override" file="FMX.ListView.pas" line="680">
        <parameters>
          <parameter name="Value" type="Single" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Used internally by presentation hook.

Used internally by presentation hook.


</summary></devnotes></procedure>
      <procedure name="DoDeleteItem" visibility="protected" procflags="override" file="FMX.ListView.pas" line="681">
        <parameters>
          <parameter name="ItemIndex" type="Integer" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Delets a specific item.
FMX.ListView.TPresentedListView.DoDeleteItem inherits from FMX.ListView.TListViewBase.DoDeleteItem. All content below this line refers to FMX.ListView.TListViewBase.DoDeleteItem.
Delets a specific item.
It is called from DeleteItem
</summary></devnotes></procedure>
      <procedure name="DoResetEditModeAnimation" visibility="protected" procflags="override" file="FMX.ListView.pas" line="682">
      <devnotes><summary>
Called at the end of the animation that plays when the edit mode is toggled.
FMX.ListView.TPresentedListView.DoResetEditModeAnimation inherits from FMX.ListView.TListViewBase.DoResetEditModeAnimation. All content below this line refers to FMX.ListView.TListViewBase.DoResetEditModeAnimation.
Called at the end of the animation that plays when the edit mode is toggled.


</summary></devnotes></procedure>
      <procedure name="DoUpdateScrollingLimits" visibility="protected" procflags="override" file="FMX.ListView.pas" line="683">
      <devnotes><summary>
Updates the scrolling limits and animation boundaries.
FMX.ListView.TPresentedListView.DoUpdateScrollingLimits inherits from FMX.ListView.TListViewBase.DoUpdateScrollingLimits. All content below this line refers to FMX.ListView.TListViewBase.DoUpdateScrollingLimits.
Updates the scrolling limits and animation boundaries.


</summary></devnotes></procedure>
      <procedure name="DoAbsoluteChanged" visibility="protected" procflags="override" file="FMX.ListView.pas" line="684">
      <devnotes><summary>


Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <procedure name="PMAncesstorPresentationLoaded" visibility="protected" procflags="message" file="FMX.ListView.pas" line="687">
        <devnotes><summary>
Notification that indicates that the ancestor of the TPresentedControl class loaded the presentation. 


</summary></devnotes>
        <parameters>
          <parameter name="AMessage" type="TDispatchMessageWithValue&lt;System.Boolean&gt;" paramflags="var"/>
        </parameters>
      </procedure>
      <procedure name="RecreateNativePresentation" visibility="protected" procflags="override" file="FMX.ListView.pas" line="688">
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <function name="ShouldHandleEvents" visibility="protected" procflags="override" file="FMX.ListView.pas" line="689">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
Returns True if this ListView should handle input events.

FMX.ListView.TPresentedListView.ShouldHandleEvents inherits from FMX.ListView.TListViewBase.ShouldHandleEvents. All content below this line refers to FMX.ListView.TListViewBase.ShouldHandleEvents.
Returns True if this ListView should handle input events.


</summary></devnotes></function>
      <function name="GetRootObject" visibility="protected" file="FMX.ListView.pas" line="691">
        <parameters>
          <retval type="TObject"/>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></function>
      <function name="GetContentFrame" visibility="protected" file="FMX.ListView.pas" line="692">
        <parameters>
          <retval type="TRect"/>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></function>
      <function name="GetControlOpacity" visibility="protected" file="FMX.ListView.pas" line="693">
        <parameters>
          <retval type="Single"/>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></function>
      <function name="GetAdapter" visibility="protected" file="FMX.ListView.pas" line="695">
        <parameters>
          <retval type="IListViewAdapter">
            <devnotes>
               <summary>IListViewAdapter provides interface between the data and their representation.
               The essential part of this interface is implemented in FMX.ListView.Adapters.Base.TAbstractListViewAdapter
               </summary>
            </devnotes>
          </retval>
        </parameters>
      <devnotes><summary>
Implements the IListViewPresentationParent.GetAdapter method. 
The GetAdapter method of TPresentedListView implements the GetAdapter method of IListViewPresentationParent.
</summary></devnotes></function>
      <function name="GetItemText" visibility="protected" file="FMX.ListView.pas" line="696">
        <parameters>
          <parameter name="ItemIndex" type="Integer" paramflags="const"/>
          <retval type="string"/>
        </parameters>
      <devnotes><summary>
Implements the IListViewPresentationParent.GetItemText method. 
The GetItemText method of TPresentedListView implements the GetItemText method of IListViewPresentationParent.
</summary></devnotes></function>
      <function name="GetItemIndexTitle" visibility="protected" file="FMX.ListView.pas" line="697">
        <parameters>
          <parameter name="ItemIndex" type="Integer" paramflags="const"/>
          <retval type="string"/>
        </parameters>
      <devnotes><summary>
Implements the IListViewPresentationParent.GetItemIndexTitle method. 
The GetItemIndexTitle method of TPresentedListView implements the GetItemIndexTitle method of IListViewPresentationParent.
</summary></devnotes></function>
      <procedure name="ItemButtonClicked" visibility="protected" file="FMX.ListView.pas" line="698">
        <parameters>
          <parameter name="ItemIndex" type="Integer" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Implements the IListViewPresentationParent.ItemButtonClicked method. 
The ItemButtonClicked method of TPresentedListView implements the ItemButtonClicked method of IListViewPresentationParent.
</summary></devnotes></procedure>
      <procedure name="InvokePullRefresh" visibility="protected" file="FMX.ListView.pas" line="699">
      <devnotes><summary>
Implements the IListViewPresentationParent.InvokePullRefresh method.
The InvokePullRefresh method of TPresentedListView implements the InvokePullRefresh method of IListViewPresentationParent
</summary></devnotes></procedure>
      <procedure name="SetSearchFilter" visibility="protected" file="FMX.ListView.pas" line="700">
        <parameters>
          <parameter name="Filter" type="string" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Implements the IListViewPresentationParent.SetSearchFilter method. 
The SetSearchFilter method of TPresentedListView implements the SetSearchFilter method of IListViewPresentationParent.
</summary></devnotes></procedure>
      <function name="GetTableViewFlags" visibility="protected" file="FMX.ListView.pas" line="701">
        <parameters>
          <retval type="TListViewModeFlags">
            <devnotes>
               <summary>Set of boolean flags used internally</summary>
            </devnotes>
          </retval>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></function>
      <function name="GetTableViewOptions" visibility="protected" file="FMX.ListView.pas" line="702">
        <parameters>
          <retval type="TListViewNativeOptions">
            <devnotes>
               <summary>View options specific to native iOS presentation.
               <see cref="T:FMX.ListView.Types.IListViewPresentationParent">IListViewPresentationParent</see></summary>
            </devnotes>
          </retval>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></function>
      <procedure name="SetCreatingNativeView" visibility="protected" file="FMX.ListView.pas" line="705">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Sets a Boolean flag that indicates a native view is being created. It is used as a guard condition to prevent TListView logic from interfering with the presentation while a view is being initialized.


</summary></devnotes></procedure>
      <function name="GetIsTransparent" visibility="protected" file="FMX.ListView.pas" line="706">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
It is True if the TListView is transparent.


</summary></devnotes></function>
      <function name="GetOpacity" visibility="protected" file="FMX.ListView.pas" line="707">
        <parameters>
          <retval type="Single"/>
        </parameters>
      <devnotes><summary>
Gets to control opacity.


</summary></devnotes></function>
      <function name="GetBackgroundStyleColor" visibility="protected" file="FMX.ListView.pas" line="708">
        <parameters>
          <retval type="TAlphaColor"/>
        </parameters>
      <devnotes><summary>
Gets the background color defined by the TListView style.


</summary></devnotes></function>
      <procedure name="DoItemsResize" visibility="protected" procflags="override" file="FMX.ListView.pas" line="709">
      <devnotes><summary>
Called when the size of the items of the adapter has changed.
FMX.ListView.TPresentedListView.DoItemsResize inherits from FMX.ListView.TAdapterListView.DoItemsResize. All content below this line refers to FMX.ListView.TAdapterListView.DoItemsResize.
Called when the size of the items of the adapter has changed.

 See Also
FMX.ListView.TAdapterListView.DoItemsMayChange
FMX.ListView.TAdapterListView.DoItemsChange
FMX.ListView.TAdapterListView.DoItemsCouldHaveChanged
FMX.ListView.TAdapterListView.DoItemsInvalidate

</summary></devnotes></procedure>
      <function name="HasDesignPresentationAttached" visibility="protected" file="FMX.ListView.pas" line="711">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
It is True if a design presentation is attached.


</summary></devnotes></function>
      <destructor name="Destroy" visibility="public" file="FMX.ListView.pas" line="713">
        <parameters>
        </parameters>
      <devnotes><summary>


Disposes of the component and its owned components.
Disposes of the component and its owned components.
FMX.ListView.TPresentedListView.Destroy inherits from System.Classes.TComponent.Destroy. All content below this line refers to System.Classes.TComponent.Destroy.
Disposes of the component and its owned components.
Do not call Destroy directly. Call Free instead. Free verifies that the component is not nil, and only then calls Destroy.
Never explicitly free a component in one of its own event handlers, nor free a component from the event handler of a component that it owns or contains.
To destroy a form, call its Release method. Release waits for all the form's event handlers and the event handlers of the form's components to finish executing before destroying the form.

Note: A form owns all the controls and nonvisual components that are placed on it in design mode. When it is freed, all of these components are automatically freed as well. By default, all forms are owned by the global Application object. When an application terminates, it frees the global Application object, which frees all forms. For objects that are not components, and for components created with a nil owner, be sure to call Free after finishing with the object; otherwise the memory allocated for the object will be lost until the application terminates.</summary></devnotes></destructor>
      <procedure name="BeforeDestruction" visibility="public" procflags="override" file="FMX.ListView.pas" line="714">
      <devnotes><summary>
Performs any necessary actions before the first destructor is called.
Performs any necessary actions before the first destructor is called.
FMX.ListView.TPresentedListView.BeforeDestruction inherits from System.Classes.TComponent.BeforeDestruction. All content below this line refers to System.Classes.TComponent.BeforeDestruction.
Performs any necessary actions before the first destructor is called.
BeforeDestruction is called automatically immediately before the component's first destructor executes. Do not call it explicitly in your applications.
As implemented in TComponent, BeforeDestruction checks whether the Destroying method has been called, and if not, calls it. Descendants that override this method to perform other actions before a component is destroyed should call the inherited method first to ensure that this check takes place.
</summary></devnotes></procedure>
      <procedure name="RecalcEnabled" visibility="public" procflags="override" file="FMX.ListView.pas" line="715">
      <devnotes><summary>
Forces the current control to recalculate its enabled state. 
FMX.ListView.TPresentedListView.RecalcEnabled inherits from FMX.Controls.TControl.RecalcEnabled. All content below this line refers to FMX.Controls.TControl.RecalcEnabled.
Forces the current control to recalculate its enabled state.  RecalcEnabled also forces the control's children to recalculate their enabled state. 
</summary></devnotes></procedure>
      <procedure name="Show" visibility="public" procflags="override" file="FMX.ListView.pas" line="716">
      <devnotes><summary>


Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <procedure name="Hide" visibility="public" procflags="override" file="FMX.ListView.pas" line="717">
      <devnotes><summary>


Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <procedure name="Resize" visibility="public" procflags="override" file="FMX.ListView.pas" line="718">
      <devnotes><summary>


OnResize event dispatcher. 
FMX.ListView.TPresentedListView.Resize inherits from FMX.Controls.TControl.Resize. All content below this line refers to FMX.Controls.TControl.Resize.
OnResize event dispatcher. 
A control calls Resize when the dimensions of the control change.
Derived classes can override the protected Resize method to implement specific responses to control resizing.
</summary></devnotes></procedure>
      <procedure name="Paint" visibility="public" procflags="override" file="FMX.ListView.pas" line="719">
      <devnotes><summary>
Renders the list view.
</summary></devnotes></procedure>
      <procedure name="RebuildList" visibility="public" procflags="override" file="FMX.ListView.pas" line="720">
      <devnotes><summary>
Recreates the list and updates the visible items content in native presentation. 
When using native presentation, RebuildList recreates the list and updates the visible items content.
To use the native presentation, you must set the ControlType property to Platform.
</summary></devnotes></procedure>
      <procedure name="StopPullRefresh" visibility="public" procflags="override" file="FMX.ListView.pas" line="721">
      <devnotes><summary>
This method should be called when 'pull to refresh' mode has been triggered to stop the spinning wheel.
StopPullRefresh has only effect in native iOS control and only when the PullRefreshWait property is set to True.
</summary></devnotes></procedure>
      <procedure name="RecalcOpacity" visibility="public" procflags="override" file="FMX.ListView.pas" line="722">
      <devnotes><summary>
Forces the current control to recalculate its Opacity property. 
FMX.ListView.TPresentedListView.RecalcOpacity inherits from FMX.Controls.TControl.RecalcOpacity. All content below this line refers to FMX.Controls.TControl.RecalcOpacity.
Forces the current control to recalculate its Opacity property.  RecalcOpacity also forces the control's children to recalculate their Opacity property. 
</summary></devnotes></procedure>
    </members>
  </class>
  <class name="TAppearanceListView" file="FMX.ListView.pas" line="728">
    
    <ancestor name="TPresentedListView" namespace="FMX.ListView">
      <interfaces>
        <implements name="IListViewDesignPresentationParent"/>
        <implements name="IListViewPresentationParent"/>
      </interfaces>
      <methodref name="ExecuteInterlocked" visibility="protected">
      </methodref>
      <methodref name="CanSelectItem" visibility="protected">
      </methodref>
      <methodref name="CanUnselectItem" visibility="protected">
      </methodref>
      <methodref name="DidSelectItem" visibility="protected">
      </methodref>
      <methodref name="DidUnselectItem" visibility="protected">
      </methodref>
      <methodref name="ChangeOrder" visibility="protected" procflags="override"/>
      <methodref name="ParentChanged" visibility="protected" procflags="override"/>
      <methodref name="PaintChildren" visibility="protected" procflags="override"/>
      <methodref name="AncestorVisibleChanged" visibility="protected" procflags="override"/>
      <methodref name="DoSetItemIndexInternal" visibility="protected" procflags="override"/>
      <methodref name="DoEditModeChange" visibility="protected" procflags="override"/>
      <methodref name="DoItemsChange" visibility="protected" procflags="override"/>
      <methodref name="DoItemsInvalidate" visibility="protected" procflags="override"/>
      <methodref name="DoItemInvalidated" visibility="protected" procflags="override"/>
      <methodref name="DoCheckStateChanged" visibility="protected" procflags="override"/>
      <methodref name="DoUpdateScrollViewPos" visibility="protected" procflags="override"/>
      <methodref name="DoSetScrollViewPos" visibility="protected" procflags="override"/>
      <methodref name="DoDeleteItem" visibility="protected" procflags="override"/>
      <methodref name="DoResetEditModeAnimation" visibility="protected" procflags="override"/>
      <methodref name="DoUpdateScrollingLimits" visibility="protected" procflags="override"/>
      <methodref name="DoAbsoluteChanged" visibility="protected" procflags="override"/>
      <methodref name="PMAncesstorPresentationLoaded" visibility="protected" procflags="message">
      </methodref>
      <methodref name="RecreateNativePresentation" visibility="protected" procflags="override"/>
      <methodref name="ShouldHandleEvents" visibility="protected" procflags="override"/>
      <methodref name="GetRootObject" visibility="protected"/>
      <methodref name="GetContentFrame" visibility="protected"/>
      <methodref name="GetControlOpacity" visibility="protected"/>
      <methodref name="GetAdapter" visibility="protected"/>
      <methodref name="GetItemText" visibility="protected"/>
      <methodref name="GetItemIndexTitle" visibility="protected"/>
      <methodref name="ItemButtonClicked" visibility="protected"/>
      <methodref name="InvokePullRefresh" visibility="protected"/>
      <methodref name="SetSearchFilter" visibility="protected"/>
      <methodref name="GetTableViewFlags" visibility="protected"/>
      <methodref name="GetTableViewOptions" visibility="protected"/>
      <methodref name="SetCreatingNativeView" visibility="protected"/>
      <methodref name="GetIsTransparent" visibility="protected"/>
      <methodref name="GetOpacity" visibility="protected"/>
      <methodref name="GetBackgroundStyleColor" visibility="protected"/>
      <methodref name="DoItemsResize" visibility="protected" procflags="override"/>
      <methodref name="HasDesignPresentationAttached" visibility="protected"/>
      <methodref name="Destroy" visibility="public" procflags="destructor override"/>
      <methodref name="BeforeDestruction" visibility="public" procflags="override"/>
      <methodref name="RecalcEnabled" visibility="public" procflags="override"/>
      <methodref name="Show" visibility="public" procflags="override"/>
      <methodref name="Hide" visibility="public" procflags="override"/>
      <methodref name="Resize" visibility="public" procflags="override"/>
      <methodref name="Paint" visibility="public" procflags="override"/>
      <methodref name="RebuildList" visibility="public" procflags="override"/>
      <methodref name="StopPullRefresh" visibility="public" procflags="override"/>
      <methodref name="RecalcOpacity" visibility="public" procflags="override"/>
      <ancestor name="TListViewBase" namespace="FMX.ListView">
        <interfaces>
          <implements name="IControlTypeSupportable"/>
          <implements name="IMessageSendingCompatible"/>
          <implements name="IGlyph"/>
          <implements name="IListViewController"/>
          <implements name="IListItemStyleResources"/>
          <implements name="ISearchResponder"/>
        </interfaces>
        <methodref name="IsRunningOnDesktop" visibility="private"/>
        <methodref name="HasTouchTracking" visibility="private"/>
        <methodref name="HasSearchFeatures" visibility="private"/>
        <methodref name="HasSearchAsItem" visibility="private"/>
        <methodref name="IsDeleteModeAllowed" visibility="private"/>
        <methodref name="HasStretchyScrolling" visibility="private"/>
        <methodref name="HasPhysicsStretchyScrolling" visibility="private"/>
        <methodref name="HasScrollingStretchGlow" visibility="private"/>
        <methodref name="HasPullRefreshStroke" visibility="private"/>
        <methodref name="CanDisplaySelectionForItem" visibility="private"/>
        <methodref name="GetDefaultSelectionAlpha" visibility="private"/>
        <methodref name="GetItemSelectionAlpha" visibility="private"/>
        <methodref name="DestroyRecurrentTimer" visibility="private"/>
        <methodref name="UpdateRecurrentTimer" visibility="private"/>
        <methodref name="HasRecurrentTimerEvents" visibility="private"/>
        <methodref name="RecurrentTimerEvent" visibility="private"/>
        <methodref name="StartIncident" visibility="private"/>
        <methodref name="ProcessIncident" visibility="private"/>
        <methodref name="TriggerIncidents" visibility="private"/>
        <methodref name="ProcessDelayedIncidents" visibility="private"/>
        <methodref name="ProcessTransitionAnimation" visibility="private"/>
        <methodref name="ProcessTapSelectItem" visibility="private"/>
        <methodref name="ProcessSelectionAlphas" visibility="private"/>
        <methodref name="InsertItemCrossFade" visibility="private"/>
        <methodref name="RemoveItemCrossFade" visibility="private"/>
        <methodref name="StartPullRefreshAnimation" visibility="private"/>
        <methodref name="ProcessPullRefreshAnimation" visibility="private"/>
        <methodref name="GetPullRefreshStrength" visibility="private"/>
        <methodref name="GetPullRefreshIndicatorSteps" visibility="private"/>
        <methodref name="GetPullRefreshIndicatorAlpha" visibility="private"/>
        <methodref name="GetPullRefreshStrokeWidth" visibility="private"/>
        <methodref name="PaintPullRefreshIndicator" visibility="private"/>
        <methodref name="PaintPullRefreshStroke" visibility="private"/>
        <methodref name="PaintScrollingStretchGlow" visibility="private"/>
        <methodref name="UpdatePullRefreshState" visibility="private"/>
        <methodref name="UpdateScrollStretchStrength" visibility="private"/>
        <methodref name="DeleteButtonClicked" visibility="private"/>
        <methodref name="ScrollBarChange" visibility="private"/>
        <methodref name="ItemSpacesChange" visibility="private"/>
        <methodref name="AniCalcChange" visibility="private"/>
        <methodref name="AniCalcStart" visibility="private"/>
        <methodref name="AniCalcStop" visibility="private"/>
        <methodref name="GetItemIndex" visibility="private"/>
        <methodref name="SetItemIndex" visibility="private"/>
        <methodref name="SetItemIndexInternal" visibility="private"/>
        <methodref name="GetMaxScrollViewPos" visibility="private"/>
        <methodref name="UpdateScrollViewPos" visibility="private"/>
        <methodref name="UpdateSearchEditPos" visibility="private"/>
        <methodref name="SetScrollViewPos" visibility="private"/>
        <methodref name="UpdateScrollingLimits" visibility="private"/>
        <methodref name="UpdateScrollBar" visibility="private"/>
        <methodref name="GetNumberOfRenderingPasses" visibility="private"/>
        <methodref name="GetItemHeight" visibility="private" procflags="overload virtual"/>
        <methodref name="GetItemRelRect" visibility="private" procflags="inline"/>
        <methodref name="GetItemGroupSeparators" visibility="private" procflags="inline"/>
        <methodref name="FindLocalItemObjectAtPosition" visibility="private"/>
        <methodref name="GetSeparatorLineHeight" visibility="private"/>
        <methodref name="AlignValueToPixel" visibility="private"/>
        <methodref name="DrawItemsFill" visibility="private"/>
        <methodref name="DrawIndexFill" visibility="private"/>
        <methodref name="DrawTouchAnimation" visibility="private"/>
        <methodref name="GetHeaderRelRect" visibility="private"/>
        <methodref name="DrawHeaderItem" visibility="private"/>
        <methodref name="DrawListItems" visibility="private"/>
        <methodref name="UpdateItemLookups" visibility="private"/>
        <methodref name="FindItemAbsoluteAt" visibility="private"/>
        <methodref name="FindItemAbsoluteAtWithCheck" visibility="private"/>
        <methodref name="SetSideSpace" visibility="private"/>
        <methodref name="SetTransparent" visibility="private"/>
        <methodref name="SetAlternatingColors" visibility="private"/>
        <methodref name="SetShowSelection" visibility="private"/>
        <methodref name="RecreateNativePresentation" visibility="private" procflags="virtual"/>
        <methodref name="SetEditMode" visibility="private"/>
        <methodref name="SetCanSwipeDelete" visibility="private"/>
        <methodref name="SelectItem" visibility="private" procflags="virtual"/>
        <methodref name="UnselectItem" visibility="private" procflags="virtual"/>
        <methodref name="GetSelected" visibility="private"/>
        <methodref name="SetSelected" visibility="private"/>
        <methodref name="SetNewItemIndex" visibility="private"/>
        <methodref name="SetSearchVisible" visibility="private"/>
        <methodref name="SetSearchAlwaysOnTop" visibility="private"/>
        <methodref name="SetOnFilter" visibility="private"/>
        <methodref name="OnSearchEditResize" visibility="private"/>
        <methodref name="OnSearchEditChange" visibility="private"/>
        <methodref name="DeleteButtonTextStored" visibility="private"/>
        <methodref name="SetFilterPredicate" visibility="private"/>
        <methodref name="GetMessageSender" visibility="private"/>
        <methodref name="ReadCanSwipeDelete" visibility="private"/>
        <methodref name="ReadIsSearchVisible" visibility="private"/>
        <methodref name="ReadIsSearchAlwaysOnTop" visibility="private"/>
        <methodref name="ReadEditModeOptions" visibility="private"/>
        <methodref name="GetItemCount" visibility="private"/>
        <methodref name="RequestReindexing" visibility="private"/>
        <methodref name="ItemResized" visibility="private"/>
        <methodref name="ItemInvalidated" visibility="private"/>
        <methodref name="ControlClicked" visibility="private"/>
        <methodref name="CheckStateChanged" visibility="private"/>
        <methodref name="GetScene" visibility="private"/>
        <methodref name="DefineProperties" visibility="protected" procflags="override"/>
        <methodref name="IsEditMode" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoSetItemIndexInternal" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoUpdateScrollViewPos" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoSetScrollViewPos" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="WillEnterEditMode" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="HasButtonsInCells" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="HasDeletionEditMode" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="HasCheckboxMode" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ResetEditModeAnimation" visibility="protected">
        </methodref>
        <methodref name="InitEditModeAnimation" visibility="protected">
        </methodref>
        <methodref name="ResetDeleteModeAnimation" visibility="protected">
        </methodref>
        <methodref name="InitDeleteModeAnimation" visibility="protected">
        </methodref>
        <methodref name="UpdateDeleteButtonLayout" visibility="protected">
        </methodref>
        <methodref name="ProceedDeleteItem" visibility="protected">
        </methodref>
        <methodref name="ScrollStretchChanged" visibility="protected" procflags="virtual">
        </methodref>
        <propertyref name="ScrollStretchStrength" visibility="protected">
        </propertyref>
        <methodref name="SetSelectionCrossfade" visibility="protected"/>
        <methodref name="GetDeleteButtonText" visibility="protected"/>
        <methodref name="SetDeleteButtonText" visibility="protected"/>
        <methodref name="SetPullToRefresh" visibility="protected"/>
        <methodref name="SetControlType" visibility="protected"/>
        <methodref name="GetControlType" visibility="protected"/>
        <methodref name="SetNativeOptions" visibility="protected"/>
        <methodref name="GetEditModeTransitionAlpha" visibility="protected"/>
        <methodref name="GetDeleteModeTransitionAlpha" visibility="protected"/>
        <methodref name="SetDeleteButtonIndex" visibility="protected"/>
        <methodref name="GetItemEditOffset" visibility="protected"/>
        <methodref name="GetItemDeleteCutoff" visibility="protected"/>
        <methodref name="GetClientMargins" visibility="protected"/>
        <methodref name="GetItemCurrentSelectionAlpha" visibility="protected"/>
        <methodref name="GetImages" visibility="protected"/>
        <methodref name="SetImages" visibility="protected"/>
        <methodref name="DoRequestReindexing" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoItemResized" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoItemInvalidated" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoCheckStateChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoControlClicked" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetImageIndex" visibility="protected"/>
        <methodref name="SetImageIndex" visibility="protected"/>
        <methodref name="GetImageList" visibility="protected" procflags="inline"/>
        <methodref name="SetImageList" visibility="protected"/>
        <methodref name="GetStyleResources" visibility="protected"/>
        <methodref name="StyleResourcesNeedUpdate" visibility="protected"/>
        <methodref name="SetItemSpaces" visibility="protected"/>
        <methodref name="GetItemClientRect" visibility="protected"/>
        <methodref name="GetEstimatedItemHeight" visibility="protected"/>
        <methodref name="GetEstimatedHeaderHeight" visibility="protected"/>
        <methodref name="GetEstimatedFooterHeight" visibility="protected"/>
        <methodref name="ImagesChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Paint" visibility="protected" procflags="override"/>
        <methodref name="AfterPaint" visibility="protected" procflags="override"/>
        <methodref name="Loaded" visibility="protected" procflags="override"/>
        <methodref name="MouseDown" visibility="protected" procflags="override"/>
        <methodref name="MouseMove" visibility="protected" procflags="override"/>
        <methodref name="MouseUp" visibility="protected" procflags="override"/>
        <methodref name="MouseWheel" visibility="protected" procflags="override"/>
        <methodref name="KeyDown" visibility="protected" procflags="override"/>
        <methodref name="ObjectAtPoint" visibility="protected" procflags="override"/>
        <methodref name="DoMouseLeave" visibility="protected" procflags="override"/>
        <methodref name="Resize" visibility="protected" procflags="override"/>
        <methodref name="GetDefaultStyleLookupName" visibility="protected" procflags="override"/>
        <methodref name="ApplyStyle" visibility="protected" procflags="override"/>
        <methodref name="FreeStyle" visibility="protected" procflags="override"/>
        <methodref name="Invalidate" visibility="protected"/>
        <methodref name="DoRealign" visibility="protected" procflags="override"/>
        <methodref name="DoExit" visibility="protected" procflags="override"/>
        <methodref name="DoChange" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoChangeRepainted" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoListItemChange" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoListItemClick" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoEditModeChange" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoEditModeChanging" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoResetEditModeAnimation" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoUpdateScrollingLimits" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoItemsMayChange" visibility="protected" procflags="override"/>
        <methodref name="DoItemsCouldHaveChanged" visibility="protected" procflags="override"/>
        <methodref name="DoItemsInvalidate" visibility="protected" procflags="override"/>
        <methodref name="DoItemsChange" visibility="protected" procflags="override">
        </methodref>
        <methodref name="DoAdapterSet" visibility="protected" procflags="override"/>
        <methodref name="DeleteItem" visibility="protected">
        </methodref>
        <methodref name="DoDeleteItem" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetFinalItemSpaces" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetFinalItemSize" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CanObserve" visibility="protected" procflags="override"/>
        <methodref name="ObserversBeforeSelection" visibility="protected">
        </methodref>
        <methodref name="ShouldHandleEvents" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoUpdatingItemView" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoUpdateItemView" visibility="protected" procflags="virtual"/>
        <methodref name="GetGlyphButton" visibility="protected">
        </methodref>
        <eventref name="OnUpdatingItemView" visibility="protected">
        </eventref>
        <eventref name="OnUpdateItemView" visibility="protected">
        </eventref>
        <eventref name="OnEditModeChange" visibility="protected">
        </eventref>
        <eventref name="OnEditModeChanging" visibility="protected">
        </eventref>
        <methodref name="Create" visibility="public" procflags="constructor overload override"/>
        <methodref name="Destroy" visibility="public" procflags="destructor override"/>
        <methodref name="GetDefaultMargins" visibility="public" procflags="class"/>
        <methodref name="EndUpdate" visibility="public" procflags="override"/>
        <methodref name="RebuildList" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="ScrollTo" visibility="public">
        </methodref>
        <propertyref name="ItemIndex" visibility="public">
        </propertyref>
        <propertyref name="Selected" visibility="public">
        </propertyref>
        <propertyref name="ScrollViewPos" visibility="public">
        </propertyref>
        <methodref name="GetItemRect" visibility="public">
        </methodref>
        <methodref name="StopPullRefresh" visibility="public" procflags="virtual">
        </methodref>
        <propertyref name="ItemSpaces" visibility="public">
        </propertyref>
        <propertyref name="Images" visibility="public">
        </propertyref>
        <propertyref name="SideSpace" visibility="public">
        </propertyref>
        <propertyref name="Transparent" visibility="public">
        </propertyref>
        <propertyref name="AllowSelection" visibility="public">
        </propertyref>
        <propertyref name="AlternatingColors" visibility="public"/>
        <propertyref name="ShowSelection" visibility="public">
        </propertyref>
        <propertyref name="CanSwipeDelete" visibility="public">
        </propertyref>
        <propertyref name="AutoTapScroll" visibility="public">
        </propertyref>
        <propertyref name="AutoTapTreshold" visibility="public">
        </propertyref>
        <propertyref name="DisableMouseWheel" visibility="public">
        </propertyref>
        <propertyref name="ItemCount" visibility="public">
        </propertyref>
        <eventref name="OnListItemClick" visibility="public">
        </eventref>
        <eventref name="OnItemClickEx" visibility="public">
        </eventref>
        <eventref name="OnItemChange" visibility="public">
        </eventref>
        <eventref name="OnChange" visibility="public">
        </eventref>
        <eventref name="OnChangeRepainted" visibility="public">
        </eventref>
        <eventref name="OnItemsChange" visibility="public">
        </eventref>
        <eventref name="OnScrollViewChange" visibility="public">
        </eventref>
        <eventref name="OnDeletingItem" visibility="public">
        </eventref>
        <eventref name="OnDeleteItem" visibility="public">
        </eventref>
        <eventref name="OnDeleteChangeVisible" visibility="public">
        </eventref>
        <eventref name="OnSearchChange" visibility="public">
        </eventref>
        <eventref name="OnFilter" visibility="public">
        </eventref>
        <eventref name="OnPullRefresh" visibility="public">
        </eventref>
        <propertyref name="DeleteButtonText" visibility="public">
        </propertyref>
        <propertyref name="EditMode" visibility="public">
        </propertyref>
        <propertyref name="SearchVisible" visibility="public">
        </propertyref>
        <propertyref name="SearchAlwaysOnTop" visibility="public">
        </propertyref>
        <propertyref name="SelectionCrossfade" visibility="public">
        </propertyref>
        <propertyref name="PullToRefresh" visibility="public">
        </propertyref>
        <propertyref name="PullRefreshWait" visibility="public">
        </propertyref>
        <propertyref name="ControlType" visibility="public">
        </propertyref>
        <propertyref name="NativeOptions" visibility="public">
        </propertyref>
        <ancestor name="TAdapterListView" namespace="FMX.ListView">
          <methodref name="ItemsMayChange" visibility="class private"/>
          <methodref name="ItemsCouldHaveChanged" visibility="class private"/>
          <methodref name="ItemsChange" visibility="class private"/>
          <methodref name="ItemsResize" visibility="class private"/>
          <methodref name="ItemsInvalidate" visibility="class private"/>
          <methodref name="ResetView" visibility="class private"/>
          <methodref name="DoAdapterSet" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetAdapter" visibility="protected">
          </methodref>
          <methodref name="InvalidateHeights" visibility="protected">
          </methodref>
          <methodref name="DoItemsChange" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoItemsMayChange" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoItemsCouldHaveChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoItemsResize" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoItemsInvalidate" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoResetView" visibility="protected" procflags="virtual">
          </methodref>
          <propertyref name="HeightSumsNeedUpdate" visibility="protected">
          </propertyref>
          <propertyref name="Adapter" visibility="public">
          </propertyref>
          <ancestor name="TStyledControl" namespace="FMX.Controls">
            <methodref name="GetStyleData" visibility="class private">
            </methodref>
            <methodref name="SetStyleData" visibility="class private">
            </methodref>
            <methodref name="SetStyleLookup" visibility="class private">
            </methodref>
            <methodref name="ScaleChangedHandler" visibility="class private">
            </methodref>
            <methodref name="StyleChangedHandler" visibility="class private">
            </methodref>
            <methodref name="InternalFreeStyle" visibility="private">
            </methodref>
            <methodref name="SearchInto" visibility="protected" procflags="override">
            </methodref>
            <methodref name="GetBackIndex" visibility="protected" procflags="override">
            </methodref>
            <methodref name="IsHelpContextStored" visibility="protected">
            </methodref>
            <methodref name="SetHelpContext" visibility="protected">
            </methodref>
            <methodref name="SetHelpKeyword" visibility="protected">
            </methodref>
            <methodref name="Notification" visibility="protected" procflags="override">
            </methodref>
            <methodref name="DoSetSize" visibility="protected" procflags="override">
            </methodref>
            <methodref name="DoApplyStyleLookup" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="StyleDataChanged" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="RequestStyleData" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Painting" visibility="protected" procflags="override">
            </methodref>
            <methodref name="ApplyStyle" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="FreeStyle" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetStyleContext" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetDefaultStyleLookupName" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetParentClassStyleLookupName" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoEnter" visibility="protected" procflags="override">
            </methodref>
            <methodref name="Disappear" visibility="protected" procflags="override">
            </methodref>
            <methodref name="AdjustSize" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="AdjustFixedSize" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ChooseAdjustType" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoStyleChanged" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="StyleLookupChanged" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="RecycleResourceLink" visibility="protected">
            </methodref>
            <methodref name="KillResourceLink" visibility="protected">
            </methodref>
            <methodref name="DoDeleteChildren" visibility="protected" procflags="override">
            </methodref>
            <methodref name="GenerateStyleName" visibility="protected">
            </methodref>
            <methodref name="GetStyleObject" visibility="protected" procflags="overload virtual">
            </methodref>
            <methodref name="GetStyleObject" visibility="protected" procflags="overload virtual">
            </methodref>
            <methodref name="SetAdjustSizeValue" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetAdjustType" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetResourceLink" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetResourceControl" visibility="protected">
            </methodref>
            <propertyref name="IsNeedStyleLookup" visibility="protected">
            </propertyref>
            <propertyref name="ResourceLink" visibility="protected">
            </propertyref>
            <propertyref name="ResourceControl" visibility="protected">
            </propertyref>
            <methodref name="GetAdjustSizeValue" visibility="protected" procflags="override">
            </methodref>
            <methodref name="GetAdjustType" visibility="protected" procflags="override">
            </methodref>
            <methodref name="Create" visibility="public" procflags="constructor overload override">
            </methodref>
            <methodref name="BeforeDestruction" visibility="public" procflags="override">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor override">
            </methodref>
            <propertyref name="AdjustType" visibility="public">
            </propertyref>
            <propertyref name="AdjustSizeValue" visibility="public">
            </propertyref>
            <propertyref name="StyleState" visibility="public">
            </propertyref>
            <methodref name="RecalcSize" visibility="public" procflags="override">
            </methodref>
            <methodref name="FindStyleResource" visibility="public" procflags="overload override">
            </methodref>
            <methodref name="FindStyleResource" visibility="public" procflags="overload">
            </methodref>
            <methodref name="FindAndCloneStyleResource" visibility="public">
            </methodref>
            <methodref name="SetNewScene" visibility="public" procflags="override">
            </methodref>
            <methodref name="ApplyStyleLookup" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="NeedStyleLookup" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Inflate" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="PrepareForPaint" visibility="public" procflags="override">
            </methodref>
            <methodref name="StartTriggerAnimation" visibility="public" procflags="override">
            </methodref>
            <methodref name="StartTriggerAnimationWait" visibility="public" procflags="override">
            </methodref>
            <propertyref name="AutoTranslate" visibility="public">
            </propertyref>
            <propertyref name="DefaultStyleLookupName" visibility="public">
            </propertyref>
            <propertyref name="ParentClassStyleLookupName" visibility="public">
            </propertyref>
            <propertyref name="HelpType" visibility="public">
            </propertyref>
            <propertyref name="HelpKeyword" visibility="public">
            </propertyref>
            <propertyref name="HelpContext" visibility="public">
            </propertyref>
            <propertyref name="StylesData" visibility="public">
            </propertyref>
            <propertyref name="StyleLookup" visibility="public">
            </propertyref>
            <propertyref name="LoadableStyle" visibility="public">
            </propertyref>
            <methodref name="LookupStyleObject" visibility="public" procflags="class">
            </methodref>
            <ancestor name="TControl" namespace="FMX.Controls">
              <interfaces>
                <implements name="ITriggerEffect"/>
                <implements name="ITriggerAnimation"/>
                <implements name="ITabStopController"/>
                <implements name="IGestureControl"/>
                <implements name="IEffectContainer"/>
                <implements name="IAlignableObject"/>
                <implements name="IRotatedControl"/>
                <implements name="IAlignRoot"/>
                <implements name="IContainerObject"/>
                <implements name="IControl"/>
              </interfaces>
              <methodref name="AddToEffectsList" visibility="class private">
              </methodref>
              <methodref name="RemoveFromEffectsList" visibility="class private">
              </methodref>
              <methodref name="GetInvertAbsoluteMatrix" visibility="class private">
              </methodref>
              <methodref name="SetPosition" visibility="class private">
              </methodref>
              <methodref name="SetHitTest" visibility="class private">
              </methodref>
              <methodref name="SetClipChildren" visibility="class private">
              </methodref>
              <methodref name="GetCanvas" visibility="class private" procflags="inline">
              </methodref>
              <methodref name="SetLocked" visibility="class private">
              </methodref>
              <methodref name="SetTempCanvas" visibility="class private">
              </methodref>
              <methodref name="SetOpacity" visibility="class private">
              </methodref>
              <methodref name="IsOpacityStored" visibility="class private">
              </methodref>
              <methodref name="SetCursor" visibility="class private">
              </methodref>
              <methodref name="RefreshInheritedCursor" visibility="class private">
              </methodref>
              <methodref name="RefreshInheritedCursorForChildren" visibility="class private">
              </methodref>
              <methodref name="GetAbsoluteWidth" visibility="class private">
              </methodref>
              <methodref name="GetAbsoluteHeight" visibility="class private">
              </methodref>
              <methodref name="IsAnchorsStored" visibility="class private">
              </methodref>
              <methodref name="GetEnabled" visibility="class private">
              </methodref>
              <methodref name="GetCursor" visibility="class private">
              </methodref>
              <methodref name="GetInheritedCursor" visibility="class private">
              </methodref>
              <methodref name="GetAbsoluteHasEffect" visibility="class private">
              </methodref>
              <methodref name="GetAbsoluteHasDisablePaintEffect" visibility="class private">
              </methodref>
              <methodref name="GetAbsoluteHasAfterPaintEffect" visibility="class private">
              </methodref>
              <methodref name="PaddingChangedHandler" visibility="class private" procflags="overload">
              </methodref>
              <methodref name="MarginsChanged" visibility="class private">
              </methodref>
              <methodref name="MatrixChanged" visibility="class private">
              </methodref>
              <methodref name="SizeChanged" visibility="class private">
              </methodref>
              <methodref name="GetControlsCount" visibility="class private">
              </methodref>
              <methodref name="OnClickStored" visibility="class private">
              </methodref>
              <methodref name="IsPopupMenuStored" visibility="class private">
              </methodref>
              <methodref name="RequestAlign" visibility="class private">
              </methodref>
              <methodref name="SetMinClipHeight" visibility="class private">
              </methodref>
              <methodref name="SetMinClipWidth" visibility="class private">
              </methodref>
              <methodref name="UpdateSmallSizeControl" visibility="class private">
              </methodref>
              <methodref name="Create@" visibility="class private" procflags="class constructor noself">
              </methodref>
              <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
              </methodref>
              <methodref name="SetOnClick" visibility="class private">
              </methodref>
              <methodref name="GetIsFocused" visibility="class private">
              </methodref>
              <methodref name="SetPadding" visibility="class private">
              </methodref>
              <methodref name="SetMargins" visibility="class private">
              </methodref>
              <methodref name="SetTouchTargetExpansion" visibility="class private">
              </methodref>
              <methodref name="InternalSizeChanged" visibility="class private">
              </methodref>
              <methodref name="ReadFixedWidth" visibility="class private">
              </methodref>
              <methodref name="WriteFixedWidth" visibility="class private">
              </methodref>
              <methodref name="ReadFixedHeight" visibility="class private">
              </methodref>
              <methodref name="WriteFixedHeight" visibility="class private">
              </methodref>
              <methodref name="ReadDesignVisible" visibility="class private">
              </methodref>
              <methodref name="ReadHint" visibility="class private">
              </methodref>
              <methodref name="ReadShowHint" visibility="class private">
              </methodref>
              <methodref name="DisabledOpacityStored" visibility="class private">
              </methodref>
              <methodref name="SetDisabledOpacity" visibility="class private">
              </methodref>
              <methodref name="GetAxisAlignedRect" visibility="class private">
              </methodref>
              <methodref name="GetRotationAngle" visibility="class private">
              </methodref>
              <methodref name="GetRotationCenter" visibility="class private">
              </methodref>
              <methodref name="GetScale" visibility="class private">
              </methodref>
              <methodref name="SetRotationAngle" visibility="class private">
              </methodref>
              <methodref name="SetRotationCenter" visibility="class private">
              </methodref>
              <methodref name="SetScale" visibility="class private">
              </methodref>
              <methodref name="GetTabOrder" visibility="class private">
              </methodref>
              <methodref name="SetTabOrder" visibility="class private">
              </methodref>
              <methodref name="GetTabStop" visibility="class private">
              </methodref>
              <methodref name="SetTabStop" visibility="class private">
              </methodref>
              <methodref name="SetDisableDisappear" visibility="class private">
              </methodref>
              <methodref name="GetDisableDisappear" visibility="class private">
              </methodref>
              <methodref name="UpdateParentProperties" visibility="class private">
              </methodref>
              <methodref name="CreateTouchManagerIfRequired" visibility="private">
              </methodref>
              <methodref name="GetTouchManager" visibility="private">
              </methodref>
              <methodref name="SetTouchManager" visibility="private">
              </methodref>
              <methodref name="IsShowHintStored" visibility="private">
              </methodref>
              <methodref name="SetParentShowHint" visibility="private">
              </methodref>
              <methodref name="SetShowHint" visibility="private">
              </methodref>
              <methodref name="GetAbsoluteClipRect" visibility="private">
              </methodref>
              <methodref name="HintStored" visibility="private">
              </methodref>
              <methodref name="RepaintJointArea" visibility="class protected">
              </methodref>
              <methodref name="DoAbsoluteChanged" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="CheckHitTest" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetInPaintTo" visibility="protected">
              </methodref>
              <methodref name="EndUpdateNoChanges" visibility="protected">
              </methodref>
              <methodref name="SetHint" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetEnabled" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Loaded" visibility="protected" procflags="override">
              </methodref>
              <methodref name="Updated" visibility="protected" procflags="override">
              </methodref>
              <methodref name="DefineProperties" visibility="protected" procflags="override">
              </methodref>
              <methodref name="Notification" visibility="protected" procflags="override">
              </methodref>
              <methodref name="ParentChanged" visibility="protected" procflags="override">
              </methodref>
              <methodref name="ChangeOrder" visibility="protected" procflags="override">
              </methodref>
              <methodref name="ChangeChildren" visibility="protected" procflags="override">
              </methodref>
              <methodref name="SetVisible" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoSetWidth" visibility="protected" procflags="virtual" symflags="deprecated">
              </methodref>
              <methodref name="DoSetHeight" visibility="protected" procflags="virtual" symflags="deprecated">
              </methodref>
              <methodref name="DoSetSize" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="HandleSizeChanged" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoMatrixChanged" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetHeight" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetWidth" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetSize" visibility="protected" procflags="overload virtual">
              </methodref>
              <methodref name="SetSize" visibility="protected" procflags="overload virtual">
              </methodref>
              <methodref name="GetAbsoluteRect" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetChildrenMatrix" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetAbsoluteScale" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetParentedRect" visibility="protected" procflags="virtual" symflags="deprecated">
              </methodref>
              <methodref name="GetClipRect" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetEffectsRect" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetAbsoluteEnabled" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetChildrenRect" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetLocalRect" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetBoundsRect" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetBoundsRect" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="IsHeightStored" visibility="protected" procflags="virtual" symflags="deprecated">
              </methodref>
              <methodref name="IsWidthStored" visibility="protected" procflags="virtual" symflags="deprecated">
              </methodref>
              <methodref name="IsPositionStored" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="IsSizeStored" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetPopupMenu" visibility="protected">
              </methodref>
              <methodref name="GetAbsoluteMatrix" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetHasClipParent" visibility="protected">
              </methodref>
              <methodref name="GetUpdateRect" visibility="protected">
              </methodref>
              <methodref name="DoGetUpdateRect" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetAbsoluteOpacity" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="BeginAutoDrag" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Capture" visibility="protected">
              </methodref>
              <methodref name="ReleaseCapture" visibility="protected">
              </methodref>
              <propertyref name="EnableExecuteAction" visibility="protected">
              </propertyref>
              <methodref name="Click" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DblClick" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="MouseDown" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="MouseMove" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="MouseUp" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="MouseWheel" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="MouseClick" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="KeyDown" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="KeyUp" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DialogKey" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="AfterDialogKey" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ShowContextMenu" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DragEnter" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DragOver" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DragDrop" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DragLeave" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DragEnd" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetDefaultTouchTargetExpansion" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetCanFocus" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetCanParentFocus" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="EnterChildren" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ExitChildren" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetParentedVisible" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="NeedUpdateEffects" visibility="protected">
              </methodref>
              <methodref name="BeforeEffectEnabledChanged" visibility="protected">
              </methodref>
              <methodref name="EffectEnabledChanged" visibility="protected">
              </methodref>
              <methodref name="Realign" visibility="protected">
              </methodref>
              <methodref name="ChildrenAlignChanged" visibility="protected">
              </methodref>
              <methodref name="GetAlign" visibility="protected">
              </methodref>
              <methodref name="SetAlign" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetAnchors" visibility="protected">
              </methodref>
              <methodref name="SetAnchors" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetMargins" visibility="protected">
              </methodref>
              <methodref name="GetPadding" visibility="protected">
              </methodref>
              <methodref name="GetWidth" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetHeight" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetLeft" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetTop" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetAllowAlign" visibility="protected">
              </methodref>
              <methodref name="GetAnchorRules" visibility="protected">
              </methodref>
              <methodref name="GetAnchorOrigin" visibility="protected">
              </methodref>
              <methodref name="GetOriginalParentSize" visibility="protected">
              </methodref>
              <methodref name="GetAnchorMove" visibility="protected">
              </methodref>
              <methodref name="SetAnchorMove" visibility="protected">
              </methodref>
              <methodref name="GetAdjustSizeValue" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetAdjustType" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetContainerWidth" visibility="protected">
              </methodref>
              <methodref name="GetContainerHeight" visibility="protected">
              </methodref>
              <methodref name="GetObject" visibility="protected">
              </methodref>
              <methodref name="GetParent" visibility="protected">
              </methodref>
              <methodref name="GetVisible" visibility="protected">
              </methodref>
              <methodref name="GetDesignInteractive" visibility="protected">
              </methodref>
              <methodref name="GetPopupMenu" visibility="protected">
              </methodref>
              <methodref name="DoEnter" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoExit" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoActivate" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoDeactivate" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoMouseEnter" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoMouseLeave" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="CheckForAllowFocus" visibility="protected">
              </methodref>
              <methodref name="GetDragMode" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetDragMode" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetLocked" visibility="protected">
              </methodref>
              <methodref name="GetHitTest" visibility="protected">
              </methodref>
              <methodref name="GetAcceptsControls" visibility="protected">
              </methodref>
              <methodref name="SetAcceptsControls" visibility="protected">
              </methodref>
              <methodref name="FindTarget" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ObjectAtPoint" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="HasHint" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetHintString" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetHintObject" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="CanShowHint" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="BroadcastGesture" visibility="protected">
              </methodref>
              <methodref name="CMGesture" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="TouchManager" visibility="protected">
              </methodref>
              <methodref name="GetFirstControlWithGesture" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetFirstControlWithGestureEngine" visibility="protected">
              </methodref>
              <methodref name="GetListOfInteractiveGestures" visibility="protected">
              </methodref>
              <methodref name="Tap" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetFirstVisibleObjectIndex" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetLastVisibleObjectIndex" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetDefaultSize" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="FillTextFlags" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ApplyEffect" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="PaintInternal" visibility="protected">
              </methodref>
              <methodref name="SupportsPaintStage" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="CanRepaint" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="RepaintRect" visibility="protected">
              </methodref>
              <methodref name="PaintChildren" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Painting" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Paint" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoPaint" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="AfterPaint" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DrawDesignBorder" visibility="protected">
              </methodref>
              <methodref name="DoRealign" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoBeginUpdate" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoEndUpdate" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Move" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Resize" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoResized" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Disappear" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Show" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Hide" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="AncestorVisibleChanged" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="AncestorParentChanged" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ClipChildrenChanged" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="HitTestChanged" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="PaddingChanged" visibility="protected" procflags="overload virtual">
              </methodref>
              <propertyref name="MinClipWidth" visibility="protected">
              </propertyref>
              <propertyref name="MinClipHeight" visibility="protected">
              </propertyref>
              <propertyref name="SmallSizeControl" visibility="protected">
              </propertyref>
              <methodref name="DoAddObject" visibility="protected" procflags="override">
              </methodref>
              <methodref name="DoInsertObject" visibility="protected" procflags="override">
              </methodref>
              <methodref name="DoRemoveObject" visibility="protected" procflags="override">
              </methodref>
              <methodref name="DoDeleteChildren" visibility="protected" procflags="override">
              </methodref>
              <propertyref name="PaintStage" visibility="protected">
              </propertyref>
              <propertyref name="TempCanvas" visibility="protected">
              </propertyref>
              <methodref name="SetLeft" visibility="protected">
              </methodref>
              <methodref name="SetTop" visibility="protected">
              </methodref>
              <methodref name="UpdateExplicitBounds" visibility="protected">
              </methodref>
              <methodref name="UpdateAnchorRules" visibility="protected">
              </methodref>
              <propertyref name="Left" visibility="protected">
              </propertyref>
              <propertyref name="Top" visibility="protected">
              </propertyref>
              <propertyref name="ExplicitLeft" visibility="protected">
              </propertyref>
              <propertyref name="ExplicitTop" visibility="protected">
              </propertyref>
              <propertyref name="ExplicitWidth" visibility="protected">
              </propertyref>
              <propertyref name="ExplicitHeight" visibility="protected">
              </propertyref>
              <methodref name="GetActionLinkClass" visibility="protected" procflags="override">
              </methodref>
              <methodref name="ActionChange" visibility="protected" procflags="override">
              </methodref>
              <methodref name="EnabledStored" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="VisibleStored" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="EnabledChanged" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="VisibleChanged" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="IsControlRectEmpty" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetControls" visibility="protected">
              </methodref>
              <methodref name="DoGesture" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetTabStopController" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetTabListClass" visibility="protected" procflags="virtual">
              </methodref>
              <propertyref name="DoubleClick" visibility="protected">
              </propertyref>
              <propertyref name="RotationAngle" visibility="protected">
              </propertyref>
              <propertyref name="RotationCenter" visibility="protected">
              </propertyref>
              <propertyref name="Scale" visibility="protected">
              </propertyref>
              <propertyref name="DisabledOpacity" visibility="protected">
              </propertyref>
              <propertyref name="ParentContent" visibility="protected">
              </propertyref>
              <propertyref name="ParentShowHint" visibility="protected">
              </propertyref>
              <methodref name="Create" visibility="public" procflags="constructor override">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor override">
              </methodref>
              <methodref name="SetNewScene" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="SetBounds" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="AbsoluteToLocal" visibility="public" procflags="overload virtual">
              </methodref>
              <methodref name="AbsoluteToLocal" visibility="public" procflags="overload">
              </methodref>
              <methodref name="LocalToAbsolute" visibility="public" procflags="overload virtual">
              </methodref>
              <methodref name="LocalToAbsolute" visibility="public" procflags="overload">
              </methodref>
              <methodref name="ScreenToLocal" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="LocalToScreen" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="ConvertLocalPointFrom" visibility="public">
              </methodref>
              <methodref name="ConvertLocalPointTo" visibility="public">
              </methodref>
              <methodref name="AbsoluteToLocalVector" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="LocalToAbsoluteVector" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="PointInObject" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="PointInObjectLocal" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="MakeScreenshot" visibility="public">
              </methodref>
              <methodref name="BeginUpdate" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="IsUpdating" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="EndUpdate" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="RecalcAbsoluteNow" visibility="public">
              </methodref>
              <methodref name="RecalcUpdateRect" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="RecalcOpacity" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="RecalcAbsolute" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="RecalcEnabled" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="RecalcHasEffect" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="RecalcHasClipParent" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="PrepareForPaint" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="RecalcSize" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="UpdateEffects" visibility="public">
              </methodref>
              <methodref name="ApplyTriggerEffect" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="StartTriggerAnimation" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="StartTriggerAnimationWait" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="SetFocus" visibility="public">
              </methodref>
              <methodref name="ResetFocus" visibility="public">
              </methodref>
              <methodref name="PaintTo" visibility="public">
              </methodref>
              <methodref name="Repaint" visibility="public">
              </methodref>
              <methodref name="InvalidateRect" visibility="public">
              </methodref>
              <methodref name="Lock" visibility="public">
              </methodref>
              <propertyref name="AbsoluteMatrix" visibility="public">
              </propertyref>
              <propertyref name="AbsoluteOpacity" visibility="public">
              </propertyref>
              <propertyref name="AbsoluteWidth" visibility="public">
              </propertyref>
              <propertyref name="AbsoluteHeight" visibility="public">
              </propertyref>
              <propertyref name="AbsoluteScale" visibility="public">
              </propertyref>
              <propertyref name="AbsoluteEnabled" visibility="public">
              </propertyref>
              <propertyref name="AbsoluteRect" visibility="public">
              </propertyref>
              <propertyref name="AbsoluteClipRect" visibility="public">
              </propertyref>
              <propertyref name="AxisAlignedRect" visibility="public">
              </propertyref>
              <propertyref name="ApplyingEffect" visibility="public">
              </propertyref>
              <propertyref name="HasEffect" visibility="public">
              </propertyref>
              <propertyref name="HasDisablePaintEffect" visibility="public">
              </propertyref>
              <propertyref name="HasAfterPaintEffect" visibility="public">
              </propertyref>
              <propertyref name="HasClipParent" visibility="public">
              </propertyref>
              <propertyref name="ChildrenRect" visibility="public">
              </propertyref>
              <propertyref name="DefaultSize" visibility="public">
              </propertyref>
              <propertyref name="FixedSize" visibility="public">
              </propertyref>
              <propertyref name="InvertAbsoluteMatrix" visibility="public">
              </propertyref>
              <propertyref name="InPaintTo" visibility="public">
              </propertyref>
              <propertyref name="LocalRect" visibility="public">
              </propertyref>
              <propertyref name="Pressed" visibility="public">
              </propertyref>
              <propertyref name="PressedPosition" visibility="public">
              </propertyref>
              <propertyref name="UpdateRect" visibility="public">
              </propertyref>
              <propertyref name="BoundsRect" visibility="public">
              </propertyref>
              <propertyref name="ParentedRect" visibility="public">
              </propertyref>
              <propertyref name="ParentedVisible" visibility="public">
              </propertyref>
              <propertyref name="ClipRect" visibility="public">
              </propertyref>
              <propertyref name="Canvas" visibility="public">
              </propertyref>
              <propertyref name="Controls" visibility="public">
              </propertyref>
              <propertyref name="ControlsCount" visibility="public">
              </propertyref>
              <propertyref name="ParentControl" visibility="public">
              </propertyref>
              <propertyref name="Scene" visibility="public">
              </propertyref>
              <propertyref name="AutoCapture" visibility="public">
              </propertyref>
              <propertyref name="CanFocus" visibility="public">
              </propertyref>
              <propertyref name="CanParentFocus" visibility="public">
              </propertyref>
              <propertyref name="DisableFocusEffect" visibility="public">
              </propertyref>
              <propertyref name="IsInflated" visibility="public">
              </propertyref>
              <methodref name="EnumControls" visibility="public" procflags="overload">
              </methodref>
              <methodref name="EnumControls" visibility="public" procflags="overload" symflags="deprecated">
              </methodref>
              <methodref name="GetTabList" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="ShowInDesigner" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="ShouldTestMouseHits" visibility="public" procflags="virtual">
              </methodref>
              <propertyref name="IsMouseOver" visibility="public">
              </propertyref>
              <propertyref name="IsDragOver" visibility="public">
              </propertyref>
              <propertyref name="IsFocused" visibility="public">
              </propertyref>
              <propertyref name="IsVisible" visibility="public">
              </propertyref>
              <propertyref name="Align" visibility="public">
              </propertyref>
              <propertyref name="Anchors" visibility="public">
              </propertyref>
              <propertyref name="Cursor" visibility="public">
              </propertyref>
              <propertyref name="InheritedCursor" visibility="public">
              </propertyref>
              <propertyref name="DragMode" visibility="public">
              </propertyref>
              <propertyref name="EnableDragHighlight" visibility="public">
              </propertyref>
              <propertyref name="Enabled" visibility="public">
              </propertyref>
              <propertyref name="Position" visibility="public">
              </propertyref>
              <propertyref name="Locked" visibility="public">
              </propertyref>
              <propertyref name="Width" visibility="public">
              </propertyref>
              <propertyref name="Height" visibility="public">
              </propertyref>
              <propertyref name="Size" visibility="public">
              </propertyref>
              <propertyref name="Padding" visibility="public">
              </propertyref>
              <propertyref name="Margins" visibility="public">
              </propertyref>
              <propertyref name="Opacity" visibility="public">
              </propertyref>
              <propertyref name="ClipChildren" visibility="public">
              </propertyref>
              <propertyref name="ClipParent" visibility="public">
              </propertyref>
              <propertyref name="HitTest" visibility="public">
              </propertyref>
              <propertyref name="PopupMenu" visibility="public">
              </propertyref>
              <propertyref name="TabOrder" visibility="public">
              </propertyref>
              <propertyref name="Visible" visibility="public">
              </propertyref>
              <eventref name="CustomSceneAddRect" visibility="public">
              </eventref>
              <eventref name="OnDragEnter" visibility="public">
              </eventref>
              <eventref name="OnDragLeave" visibility="public">
              </eventref>
              <eventref name="OnDragOver" visibility="public">
              </eventref>
              <eventref name="OnDragDrop" visibility="public">
              </eventref>
              <eventref name="OnDragEnd" visibility="public">
              </eventref>
              <eventref name="OnKeyDown" visibility="public">
              </eventref>
              <eventref name="OnKeyUp" visibility="public">
              </eventref>
              <eventref name="OnClick" visibility="public">
              </eventref>
              <eventref name="OnDblClick" visibility="public">
              </eventref>
              <eventref name="OnCanFocus" visibility="public">
              </eventref>
              <eventref name="OnEnter" visibility="public">
              </eventref>
              <eventref name="OnExit" visibility="public">
              </eventref>
              <eventref name="OnMouseDown" visibility="public">
              </eventref>
              <eventref name="OnMouseMove" visibility="public">
              </eventref>
              <eventref name="OnMouseUp" visibility="public">
              </eventref>
              <eventref name="OnMouseWheel" visibility="public">
              </eventref>
              <eventref name="OnMouseEnter" visibility="public">
              </eventref>
              <eventref name="OnMouseLeave" visibility="public">
              </eventref>
              <eventref name="OnPainting" visibility="public">
              </eventref>
              <eventref name="OnPaint" visibility="public">
              </eventref>
              <eventref name="OnResize" visibility="public">
              </eventref>
              <eventref name="OnResized" visibility="public">
              </eventref>
              <eventref name="OnActivate" visibility="public">
              </eventref>
              <eventref name="OnDeactivate" visibility="public">
              </eventref>
              <eventref name="OnApplyStyleLookup" visibility="public">
              </eventref>
              <propertyref name="TouchTargetExpansion" visibility="public">
              </propertyref>
              <propertyref name="TabStop" visibility="public">
              </propertyref>
              <propertyref name="DisableDisappear" visibility="public">
              </propertyref>
              <propertyref name="ShowHint" visibility="public">
              </propertyref>
              <propertyref name="Hint" visibility="public">
              </propertyref>
              <propertyref name="Touch" visibility="published">
              </propertyref>
              <eventref name="OnGesture" visibility="published">
              </eventref>
              <eventref name="OnTap" visibility="published">
              </eventref>
              <ancestor name="TFmxObject" namespace="FMX.Types">
                <interfaces>
                  <implements name="IActionClient"/>
                  <implements name="IFreeNotification"/>
                </interfaces>
                <methodref name="SetStyleName" visibility="private">
                </methodref>
                <methodref name="SetStored" visibility="private">
                </methodref>
                <methodref name="GetChildrenCount" visibility="private" procflags="inline">
                </methodref>
                <methodref name="GetIndexOfChild" visibility="private">
                </methodref>
                <methodref name="SetIndexOfChild" visibility="private">
                </methodref>
                <methodref name="SetIndex" visibility="private">
                </methodref>
                <methodref name="GetActionRoot" visibility="private">
                </methodref>
                <methodref name="GetActionClient" visibility="private" procflags="inline">
                </methodref>
                <methodref name="SetActionClient" visibility="private">
                </methodref>
                <methodref name="GetAction" visibility="private">
                </methodref>
                <methodref name="SetAction" visibility="private">
                </methodref>
                <methodref name="GetIndex" visibility="private">
                </methodref>
                <methodref name="Create@" visibility="class private" procflags="class constructor noself">
                </methodref>
                <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
                </methodref>
                <methodref name="CreateChildrenList" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="ResetChildrenIndicesSpan" visibility="protected">
                </methodref>
                <methodref name="ResetChildrenIndices" visibility="protected">
                </methodref>
                <methodref name="GetBackIndex" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="DefineProperties" visibility="protected" procflags="override">
                </methodref>
                <methodref name="IgnoreBindingName" visibility="protected">
                </methodref>
                <methodref name="GetChildren" visibility="protected" procflags="override">
                </methodref>
                <methodref name="SetParentComponent" visibility="protected" procflags="override">
                </methodref>
                <methodref name="Notification" visibility="protected" procflags="override">
                </methodref>
                <methodref name="GetActionLinkClass" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="InitiateAction" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="DoActionChange" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="ActionChange" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="DoActionClientChanged" visibility="protected" procflags="virtual">
                </methodref>
                <propertyref name="ActionLink" visibility="protected">
                </propertyref>
                <propertyref name="Action" visibility="protected">
                </propertyref>
                <propertyref name="StyleIndexer" visibility="protected">
                </propertyref>
                <methodref name="GetParentComponent" visibility="public" procflags="override">
                </methodref>
                <methodref name="HasParent" visibility="public" procflags="override">
                </methodref>
                <methodref name="AddToResourcePool" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="RemoveFromResourcePool" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="SetParent" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="DoRootChanging" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="DoRootChanged" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="ParentChanged" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="ChangeOrder" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="ChangeChildren" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="DoAddObject" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="DoInsertObject" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="DoRemoveObject" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="DoDeleteChildren" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="SearchInto" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="FreeNotification" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="SupportsPlatformService" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="GetData" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="SetData" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="IgnoreIntegerValue" visibility="protected">
                </methodref>
                <methodref name="IgnoreFloatValue" visibility="protected">
                </methodref>
                <methodref name="IgnoreBooleanValue" visibility="protected">
                </methodref>
                <methodref name="IgnoreIdentValue" visibility="protected">
                </methodref>
                <methodref name="Create" visibility="public" procflags="constructor override">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor override">
                </methodref>
                <methodref name="BeforeDestruction" visibility="public" procflags="override">
                </methodref>
                <methodref name="Release" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Released" visibility="public" symflags="deprecated">
                </methodref>
                <methodref name="ObjectState" visibility="public" symflags="deprecated">
                </methodref>
                <methodref name="SetRoot" visibility="public">
                </methodref>
                <methodref name="SetDesign" visibility="public">
                </methodref>
                <methodref name="Clone" visibility="public">
                </methodref>
                <methodref name="AddObject" visibility="public">
                </methodref>
                <methodref name="InsertObject" visibility="public">
                </methodref>
                <methodref name="RemoveObject" visibility="public" procflags="overload">
                </methodref>
                <methodref name="RemoveObject" visibility="public" procflags="overload">
                </methodref>
                <methodref name="ContainsObject" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Exchange" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="DeleteChildren" visibility="public">
                </methodref>
                <methodref name="IsChild" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="BringChildToFront" visibility="public">
                </methodref>
                <methodref name="SendChildToBack" visibility="public">
                </methodref>
                <methodref name="BringToFront" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="SendToBack" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="AddObjectsToList" visibility="public">
                </methodref>
                <methodref name="Sort" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="EnumObjects" visibility="public">
                </methodref>
                <methodref name="AnimateFloat" visibility="public" symflags="deprecated">
                </methodref>
                <methodref name="AnimateFloatDelay" visibility="public" symflags="deprecated">
                </methodref>
                <methodref name="AnimateFloatWait" visibility="public" symflags="deprecated">
                </methodref>
                <methodref name="AnimateInt" visibility="public" symflags="deprecated">
                </methodref>
                <methodref name="AnimateIntWait" visibility="public" symflags="deprecated">
                </methodref>
                <methodref name="AnimateColor" visibility="public" symflags="deprecated">
                </methodref>
                <methodref name="StopPropertyAnimation" visibility="public">
                </methodref>
                <methodref name="AddFreeNotify" visibility="public">
                </methodref>
                <methodref name="RemoveFreeNotify" visibility="public">
                </methodref>
                <methodref name="FindStyleResource" visibility="public" procflags="overload virtual">
                </methodref>
                <propertyref name="Root" visibility="public">
                </propertyref>
                <propertyref name="Stored" visibility="public">
                </propertyref>
                <propertyref name="TagObject" visibility="public">
                </propertyref>
                <propertyref name="TagFloat" visibility="public">
                </propertyref>
                <propertyref name="TagString" visibility="public">
                </propertyref>
                <propertyref name="ChildrenCount" visibility="public">
                </propertyref>
                <propertyref name="Children" visibility="public">
                </propertyref>
                <propertyref name="Data" visibility="public">
                </propertyref>
                <propertyref name="Parent" visibility="public">
                </propertyref>
                <propertyref name="Index" visibility="public">
                </propertyref>
                <propertyref name="ActionClient" visibility="public">
                </propertyref>
                <propertyref name="StyleName" visibility="published">
                </propertyref>
                <ancestor name="TComponent" namespace="System.Classes">
                  <interfaces>
                    <implements name="IInterfaceComponentReference"/>
                    <implements name="IInterface"/>
                  </interfaces>
                  <methodref name="GetComObject" visibility="private">
                  </methodref>
                  <methodref name="GetComponent" visibility="private">
                  </methodref>
                  <methodref name="GetComponentCount" visibility="private">
                  </methodref>
                  <methodref name="GetComponentIndex" visibility="private">
                  </methodref>
                  <methodref name="Insert" visibility="private">
                  </methodref>
                  <methodref name="ReadLeft" visibility="private">
                  </methodref>
                  <methodref name="ReadTop" visibility="private">
                  </methodref>
                  <methodref name="Remove" visibility="private">
                  </methodref>
                  <methodref name="RemoveNotification" visibility="private">
                  </methodref>
                  <methodref name="SetComponentIndex" visibility="private">
                  </methodref>
                  <methodref name="SetReference" visibility="private">
                  </methodref>
                  <methodref name="WriteLeft" visibility="private">
                  </methodref>
                  <methodref name="WriteTop" visibility="private">
                  </methodref>
                  <methodref name="IntfGetComponent" visibility="private">
                  </methodref>
                  <methodref name="DoGetDeltaStreams" visibility="private">
                  </methodref>
                  <methodref name="ReadDeltaStream" visibility="private">
                  </methodref>
                  <methodref name="ReadDeltaState" visibility="private">
                  </methodref>
                  <methodref name="FindSortedComponent" visibility="private">
                  </methodref>
                  <methodref name="AddSortedComponent" visibility="private">
                  </methodref>
                  <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
                  </methodref>
                  <methodref name="Create@" visibility="class private" procflags="class constructor noself">
                  </methodref>
                  <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="ChangeName" visibility="protected">
                  </methodref>
                  <methodref name="DefineProperties" visibility="protected" procflags="override">
                  </methodref>
                  <methodref name="GetChildren" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="GetOwner" visibility="protected" procflags="override">
                  </methodref>
                  <methodref name="Loaded" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="Notification" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="ReadState" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="CanObserve" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="GetObservers" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="SetAncestor" visibility="protected">
                  </methodref>
                  <methodref name="SetDesigning" visibility="protected">
                  </methodref>
                  <methodref name="SetInline" visibility="protected">
                  </methodref>
                  <methodref name="SetDesignInstance" visibility="protected">
                  </methodref>
                  <methodref name="SetName" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="Updating" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="Updated" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
                  </methodref>
                  <methodref name="ValidateRename" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="WriteState" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="RemoveFreeNotifications" visibility="protected">
                  </methodref>
                  <methodref name="QueryInterface" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="_AddRef" visibility="protected">
                  </methodref>
                  <methodref name="_Release" visibility="protected">
                  </methodref>
                  <methodref name="GetTypeInfoCount" visibility="protected">
                  </methodref>
                  <methodref name="GetTypeInfo" visibility="protected">
                  </methodref>
                  <methodref name="GetIDsOfNames" visibility="protected">
                  </methodref>
                  <methodref name="Invoke" visibility="protected">
                  </methodref>
                  <eventref name="OnGetDeltaStreams" visibility="protected">
                  </eventref>
                  <methodref name="Create" visibility="public" procflags="constructor virtual">
                  </methodref>
                  <methodref name="Destroy" visibility="public" procflags="destructor override">
                  </methodref>
                  <methodref name="BeforeDestruction" visibility="public" procflags="override">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="EndInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="EndInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="EndFunctionInvoke" visibility="public">
                  </methodref>
                  <methodref name="DestroyComponents" visibility="public">
                  </methodref>
                  <methodref name="Destroying" visibility="public">
                  </methodref>
                  <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
                  </methodref>
                  <methodref name="FindComponent" visibility="public">
                  </methodref>
                  <methodref name="FreeNotification" visibility="public">
                  </methodref>
                  <methodref name="RemoveFreeNotification" visibility="public">
                  </methodref>
                  <methodref name="FreeOnRelease" visibility="public">
                  </methodref>
                  <methodref name="GetEnumerator" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
                  </methodref>
                  <methodref name="GetNamePath" visibility="public" procflags="override">
                  </methodref>
                  <methodref name="HasParent" visibility="public" procflags="dynamic">
                  </methodref>
                  <methodref name="InsertComponent" visibility="public">
                  </methodref>
                  <methodref name="RemoveComponent" visibility="public">
                  </methodref>
                  <methodref name="SetSubComponent" visibility="public">
                  </methodref>
                  <methodref name="SafeCallException" visibility="public" procflags="override">
                  </methodref>
                  <methodref name="UpdateAction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="IsImplementorOf" visibility="public">
                  </methodref>
                  <methodref name="ReferenceInterface" visibility="public">
                  </methodref>
                  <propertyref name="ComObject" visibility="public">
                  </propertyref>
                  <propertyref name="Components" visibility="public">
                  </propertyref>
                  <propertyref name="ComponentCount" visibility="public">
                  </propertyref>
                  <propertyref name="ComponentIndex" visibility="public">
                  </propertyref>
                  <propertyref name="ComponentState" visibility="public">
                  </propertyref>
                  <propertyref name="ComponentStyle" visibility="public">
                  </propertyref>
                  <propertyref name="DesignInfo" visibility="public">
                  </propertyref>
                  <propertyref name="Owner" visibility="public">
                  </propertyref>
                  <propertyref name="VCLComObject" visibility="public">
                  </propertyref>
                  <propertyref name="Observers" visibility="public">
                  </propertyref>
                  <propertyref name="Name" visibility="published">
                  </propertyref>
                  <propertyref name="Tag" visibility="published">
                  </propertyref>
                  <ancestor name="TPersistent" namespace="System.Classes">
                    <methodref name="AssignError" visibility="private">
                    </methodref>
                    <methodref name="AssignTo" visibility="protected" procflags="virtual">
                    </methodref>
                    <methodref name="DefineProperties" visibility="protected" procflags="virtual">
                    </methodref>
                    <methodref name="GetOwner" visibility="protected" procflags="dynamic">
                    </methodref>
                    <methodref name="Destroy" visibility="public" procflags="destructor override">
                    </methodref>
                    <methodref name="Assign" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="GetNamePath" visibility="public" procflags="dynamic">
                    </methodref>
                    <ancestor name="TObject" namespace="System">
                      <methodref name="Create" visibility="public" procflags="constructor">
                      </methodref>
                      <methodref name="Free" visibility="public">
                      </methodref>
                      <methodref name="DisposeOf" visibility="public" procflags="inline">
                      </methodref>
                      <methodref name="InitInstance" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="CleanupInstance" visibility="public">
                      </methodref>
                      <methodref name="ClassType" visibility="public" procflags="inline">
                      </methodref>
                      <methodref name="ClassName" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="ClassNameIs" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="ClassParent" visibility="public" procflags="class inline">
                      </methodref>
                      <methodref name="ClassInfo" visibility="public" procflags="class inline">
                      </methodref>
                      <methodref name="InstanceSize" visibility="public" procflags="class inline">
                      </methodref>
                      <methodref name="InheritsFrom" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="MethodAddress" visibility="public" procflags="class overload">
                      </methodref>
                      <methodref name="MethodAddress" visibility="public" procflags="class overload">
                      </methodref>
                      <methodref name="MethodName" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="QualifiedClassName" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="FieldAddress" visibility="public" procflags="overload">
                      </methodref>
                      <methodref name="FieldAddress" visibility="public" procflags="overload">
                      </methodref>
                      <methodref name="GetInterface" visibility="public">
                      </methodref>
                      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                      </methodref>
                      <methodref name="UnitName" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="UnitScope" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="Equals" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="GetHashCode" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="ToString" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="SafeCallException" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="Dispatch" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="NewInstance" visibility="public" procflags="class virtual">
                      </methodref>
                      <methodref name="FreeInstance" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                      </methodref>
                      <methodref name="GetDisposed" visibility="protected" procflags="inline">
                      </methodref>
                      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                      </methodref>
                      <propertyref name="Disposed" visibility="protected">
                      </propertyref>
                    </ancestor>
                  </ancestor>
                </ancestor>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <interfaces>
      <implements name="IPublishedAppearanceOwner"/>
      <implements name="IAppearanceItemOwner"/>
    </interfaces>
    <members>
      <type name="TItemEvent" file="FMX.ListView.pas" line="731" procflags="closure">
      </type>
      <type name="TItemEvent" file="FMX.ListView.pas" line="731" procflags="closure">
      </type>
      <type name="TUpdatingObjectsEvent" file="FMX.ListView.pas" line="735" procflags="closure">
      </type>
      <field name="FAppearanceViewItems" type="TAppearanceListViewItems" visibility="class private" size="4" offset="1464" file="FMX.ListView.pas" line="738"/>
      <field name="FAppearanceProperties" type="TPublishedAppearance" visibility="class private" size="4" offset="1468" file="FMX.ListView.pas" line="739"/>
      <field name="FItemAppearanceObjects" type="TPublishedObjects" visibility="class private" size="4" offset="1472" file="FMX.ListView.pas" line="740"/>
      <field name="FItemAppearanceProperties" type="TItemAppearanceProperties" visibility="class private" size="4" offset="1476" file="FMX.ListView.pas" line="741"/>
      <field name="FItemEditAppearanceProperties" type="TItemAppearanceProperties" visibility="class private" size="4" offset="1480" file="FMX.ListView.pas" line="742"/>
      <field name="FHeaderAppearanceProperties" type="TItemAppearanceProperties" visibility="class private" size="4" offset="1484" file="FMX.ListView.pas" line="743"/>
      <field name="FFooterAppearanceProperties" type="TItemAppearanceProperties" visibility="class private" size="4" offset="1488" file="FMX.ListView.pas" line="744"/>
      <field name="FUpdatingAppearance" type="Integer" visibility="class private" size="4" offset="1492" file="FMX.ListView.pas" line="745"/>
      <field name="FChangedAppearanceObjects" type="TListItemPurposes" visibility="class private" size="1" offset="1496" file="FMX.ListView.pas" line="746"/>
      <field name="FChangedAppearanceHeights" type="TListItemPurposes" visibility="class private" size="1" offset="1497" file="FMX.ListView.pas" line="747"/>
      <field name="FItemSelectedBeforeEdit" type="TListItem" visibility="class private" size="4" offset="1500" file="FMX.ListView.pas" line="749"/>
      <field name="FOnButtonClick" type="TItemControlEvent" visibility="class private" size="8" offset="1504" file="FMX.ListView.pas" line="750"/>
      <field name="FOnButtonChange" type="TItemControlEvent" visibility="class private" size="8" offset="1512" file="FMX.ListView.pas" line="751"/>
      <field name="FAppearanceAllowsCheckboxes" type="Boolean" visibility="class private" size="1" offset="1520" file="FMX.ListView.pas" line="752"/>
      <field name="FAppearanceAllowsDeleteMode" type="Boolean" visibility="class private" size="1" offset="1521" file="FMX.ListView.pas" line="753"/>
      <field name="FOnItemClick" type="TAppearanceListView.TItemEvent" visibility="class private" size="8" offset="1528" file="FMX.ListView.pas" line="754"/>
      <field name="FOnUpdatingObjects" type="TAppearanceListView.TUpdatingObjectsEvent" visibility="class private" size="8" offset="1536" file="FMX.ListView.pas" line="755"/>
      <field name="FOnUpdateObjects" type="TAppearanceListView.TItemEvent" visibility="class private" size="8" offset="1544" file="FMX.ListView.pas" line="756"/>
      <function name="GetFooterAppearanceName" visibility="class private" file="FMX.ListView.pas" line="758">
        <parameters>
          <retval type="string"/>
        </parameters>
      </function>
      <function name="GetFooterAppearanceClassName" visibility="class private" file="FMX.ListView.pas" line="759">
        <parameters>
          <retval type="string"/>
        </parameters>
      </function>
      <function name="GetHeaderAppearanceName" visibility="class private" file="FMX.ListView.pas" line="760">
        <parameters>
          <retval type="string"/>
        </parameters>
      </function>
      <function name="GetHeaderAppearanceClassName" visibility="class private" file="FMX.ListView.pas" line="761">
        <parameters>
          <retval type="string"/>
        </parameters>
      </function>
      <function name="GetItemAppearanceName" visibility="class private" file="FMX.ListView.pas" line="762">
        <parameters>
          <retval type="string"/>
        </parameters>
      </function>
      <function name="GetItemEditAppearanceName" visibility="class private" file="FMX.ListView.pas" line="763">
        <parameters>
          <retval type="string"/>
        </parameters>
      </function>
      <function name="GetItemObjectsClassName" visibility="class private" file="FMX.ListView.pas" line="764">
        <parameters>
          <retval type="string"/>
        </parameters>
      </function>
      <function name="GetItemEditObjectsClassName" visibility="class private" file="FMX.ListView.pas" line="765">
        <parameters>
          <retval type="string"/>
        </parameters>
      </function>
      <procedure name="SetFooterAppearanceClassName" visibility="class private" file="FMX.ListView.pas" line="766">
        <parameters>
          <parameter name="Value" type="string" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetHeaderAppearanceClassName" visibility="class private" file="FMX.ListView.pas" line="767">
        <parameters>
          <parameter name="Value" type="string" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetItemObjectsClassName" visibility="class private" file="FMX.ListView.pas" line="768">
        <parameters>
          <parameter name="Value" type="string" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetItemEditObjectsClassName" visibility="class private" file="FMX.ListView.pas" line="769">
        <parameters>
          <parameter name="Value" type="string" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetFooterAppearanceName" visibility="class private" file="FMX.ListView.pas" line="770">
        <parameters>
          <parameter name="Value" type="string" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetHeaderAppearanceName" visibility="class private" file="FMX.ListView.pas" line="771">
        <parameters>
          <parameter name="Value" type="string" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetItemAppearanceName" visibility="class private" file="FMX.ListView.pas" line="772">
        <parameters>
          <parameter name="Value" type="string" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetItemEditAppearanceName" visibility="class private" file="FMX.ListView.pas" line="773">
        <parameters>
          <parameter name="Value" type="string" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetAppearanceProperties" visibility="class private" file="FMX.ListView.pas" line="775">
        <parameters>
          <parameter name="Value" type="TPublishedAppearance" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetItemAppearanceObjects" visibility="class private" file="FMX.ListView.pas" line="776">
        <parameters>
          <parameter name="Value" type="TPublishedObjects" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetItemAppearanceObjects" visibility="class private" file="FMX.ListView.pas" line="777">
        <parameters>
          <retval type="TPublishedObjects">
            <devnotes>
               <summary>Represents appearance items (collections of objects comprising appearances)
               in the object inspector</summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <procedure name="AppearanceResetObjects" visibility="class private" file="FMX.ListView.pas" line="778">
        <parameters>
          <parameter name="APurposes" type="TListItemPurposes"/>
        </parameters>
      </procedure>
      <procedure name="AppearanceResetHeights" visibility="class private" file="FMX.ListView.pas" line="779">
        <parameters>
          <parameter name="APurposes" type="TListItemPurposes"/>
        </parameters>
      </procedure>
      <function name="GetFooterAppearanceProperties" visibility="class private" file="FMX.ListView.pas" line="783">
        <parameters>
          <retval type="TItemAppearanceProperties">
            <devnotes>
              <summary>Represents properties of Item Appearance that define geometric properties of the entire ListViewItem,
               specify AppearanceClass and AppearanceClassName that define Item Appearance Objects that comprise item's view.
               </summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <function name="GetHeaderAppearanceProperties" visibility="class private" file="FMX.ListView.pas" line="784">
        <parameters>
          <retval type="TItemAppearanceProperties">
            <devnotes>
              <summary>Represents properties of Item Appearance that define geometric properties of the entire ListViewItem,
               specify AppearanceClass and AppearanceClassName that define Item Appearance Objects that comprise item's view.
               </summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <function name="GetItemAppearanceProperties" visibility="class private" file="FMX.ListView.pas" line="785">
        <parameters>
          <retval type="TItemAppearanceProperties">
            <devnotes>
              <summary>Represents properties of Item Appearance that define geometric properties of the entire ListViewItem,
               specify AppearanceClass and AppearanceClassName that define Item Appearance Objects that comprise item's view.
               </summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <function name="GetItemEditAppearanceProperties" visibility="class private" file="FMX.ListView.pas" line="786">
        <parameters>
          <retval type="TItemAppearanceProperties">
            <devnotes>
              <summary>Represents properties of Item Appearance that define geometric properties of the entire ListViewItem,
               specify AppearanceClass and AppearanceClassName that define Item Appearance Objects that comprise item's view.
               </summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <procedure name="EditorBeforeItemAdded" visibility="class private" file="FMX.ListView.pas" line="788">
        <parameters>
          <parameter name="Sender" type="IListViewEditor"/>
        </parameters>
      </procedure>
      <procedure name="EditorAfterItemAdded" visibility="class private" file="FMX.ListView.pas" line="789">
        <parameters>
          <parameter name="Sender" type="IListViewEditor"/>
          <parameter name="Item" type="TListItem" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="EditorBeforeItemDeleted" visibility="class private" file="FMX.ListView.pas" line="790">
        <parameters>
          <parameter name="Sender" type="IListViewEditor"/>
          <parameter name="Index" type="Integer" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="EditorAfterItemDeleted" visibility="class private" file="FMX.ListView.pas" line="791">
        <parameters>
          <parameter name="Sender" type="IListViewEditor"/>
        </parameters>
      </procedure>
      <procedure name="ResetViewAppearance" visibility="class private" file="FMX.ListView.pas" line="792">
        <parameters>
          <parameter name="AItem" type="TListViewItem" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="ApplyStyle" visibility="protected" procflags="override" file="FMX.ListView.pas" line="795">
      <devnotes><summary>
Customizes styles in complex objects.
FMX.ListView.TAppearanceListView.ApplyStyle inherits from FMX.Controls.TStyledControl.ApplyStyle. All content below this line refers to FMX.Controls.TStyledControl.ApplyStyle.
Customizes styles in complex objects.
TStyledControl descendants override it to apply styles in concordance with their primitive components.      
Do not call ApplyStyle explicitly in an application. It is called by the ApplyStyleLookup method when object styles are updated.
For an example of an ApplyStyle implementation, see &quot;TCalloutPanel:Style Contracts&quot; in FireMonkey Component Design.
</summary></devnotes></procedure>
      <procedure name="ObjectsNotify" visibility="protected" file="FMX.ListView.pas" line="798">
        <devnotes><summary>
Handler of the TAppearanceListViewItems.OnNotify property.


</summary></devnotes>
        <parameters>
          <parameter name="Sender" type="TObject"/>
          <parameter name="Item" type="TListItem" paramflags="const"/>
          <parameter name="Action" type="TCollectionNotification"/>
        </parameters>
      </procedure>
      <procedure name="SetAppearanceListViewItems" visibility="protected" file="FMX.ListView.pas" line="802">
        <devnotes><summary>
The TAppearanceListView needs adapter to be the TAppearanceListViewItems or derivative.
If the TAppearanceListView is used with a custom adapter, use the Items property to set it instead of the Adapter property of the base class.


</summary></devnotes>
        <parameters>
          <parameter name="AItems" type="TAppearanceListViewItems" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DoResetView" visibility="protected" procflags="override" file="FMX.ListView.pas" line="803">
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Called when the view of the specified item of the adapter needs to be recreated.
FMX.ListView.TAppearanceListView.DoResetView inherits from FMX.ListView.TAdapterListView.DoResetView. All content below this line refers to FMX.ListView.TAdapterListView.DoResetView.
Called when the view of the specified item of the adapter needs to be recreated.


</summary></devnotes></procedure>
      <function name="HasButtonsInCells" visibility="protected" procflags="override" file="FMX.ListView.pas" line="805">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
Returns True if each list view item contains one or more buttons, or False otherwise.
FMX.ListView.TAppearanceListView.HasButtonsInCells inherits from FMX.ListView.TListViewBase.HasButtonsInCells. All content below this line refers to FMX.ListView.TListViewBase.HasButtonsInCells.
Returns True if each list view item contains one or more buttons, or False otherwise.

 See Also
FMX.ListView.TListViewBase.CanSwipeDelete
FMX.ListView.TListViewBase.EditMode
FMX.ListView.TListViewBase.HasCheckboxMode
FMX.ListView.TListViewBase.HasDeletionEditMode
FMX.ListView.TListViewBase.PullRefreshWait
FMX.ListView.TListViewBase.PullToRefresh
FMX.ListView.TListViewBase.SearchAlwaysOnTop
FMX.ListView.TListViewBase.SearchVisible
FMX.Controls.TControl.Enabled
FMX.Controls.TControl.Visible

</summary></devnotes></function>
      <function name="HasDeletionEditMode" visibility="protected" procflags="override" file="FMX.ListView.pas" line="806">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
Returns True if the list view supports a mode where you can select list view items to delete, or False otherwise.
FMX.ListView.TAppearanceListView.HasDeletionEditMode inherits from FMX.ListView.TListViewBase.HasDeletionEditMode. All content below this line refers to FMX.ListView.TListViewBase.HasDeletionEditMode.
Returns True if the list view supports a mode where you can select list view items to delete, or False otherwise.

 See Also
FMX.ListView.TListViewBase.CanSwipeDelete
FMX.ListView.TListViewBase.EditMode
FMX.ListView.TListViewBase.HasButtonsInCells
FMX.ListView.TListViewBase.HasCheckboxMode
FMX.ListView.TListViewBase.PullRefreshWait
FMX.ListView.TListViewBase.PullToRefresh
FMX.ListView.TListViewBase.SearchAlwaysOnTop
FMX.ListView.TListViewBase.SearchVisible
FMX.Controls.TControl.Enabled
FMX.Controls.TControl.Visible

</summary></devnotes></function>
      <function name="HasCheckboxMode" visibility="protected" procflags="override" file="FMX.ListView.pas" line="807">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
Returns True if the list view supports a mode where you can select list view items using checkboxes, or False otherwise.
FMX.ListView.TAppearanceListView.HasCheckboxMode inherits from FMX.ListView.TListViewBase.HasCheckboxMode. All content below this line refers to FMX.ListView.TListViewBase.HasCheckboxMode.
Returns True if the list view supports a mode where you can select list view items using checkboxes, or False otherwise.

 See Also
FMX.ListView.TListViewBase.CanSwipeDelete
FMX.ListView.TListViewBase.EditMode
FMX.ListView.TListViewBase.HasButtonsInCells
FMX.ListView.TListViewBase.HasDeletionEditMode
FMX.ListView.TListViewBase.PullRefreshWait
FMX.ListView.TListViewBase.PullToRefresh
FMX.ListView.TListViewBase.SearchAlwaysOnTop
FMX.ListView.TListViewBase.SearchVisible
FMX.Controls.TControl.Enabled
FMX.Controls.TControl.Visible

</summary></devnotes></function>
      <procedure name="SetItemHeight" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="808">
        <parameters>
          <parameter name="Value" type="Integer" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Setter of ItemHeight.
</summary></devnotes></procedure>
      <procedure name="SetItemEditHeight" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="809">
        <parameters>
          <parameter name="Value" type="Integer" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Setter of ItemEditHeight.
</summary></devnotes></procedure>
      <procedure name="SetHeaderHeight" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="810">
        <parameters>
          <parameter name="Value" type="Integer" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Setter of HeaderHeight.
</summary></devnotes></procedure>
      <procedure name="SetFooterHeight" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="811">
        <parameters>
          <parameter name="Value" type="Integer" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Setter of FooterHeight.
</summary></devnotes></procedure>
      <function name="GetAppearanceListViewItem" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="813">
        <parameters>
          <parameter name="Index" type="Integer" paramflags="const"/>
          <retval type="TListViewItem">
            <devnotes>
               <summary>Extension of <c>TListItem</c> that supports Appearances.
               Forms content of <c>TAppearanceListViewItems</c></summary>
            </devnotes>
          </retval>
        </parameters>
      <devnotes><summary>
Returns the list view item that is located at the specified index of the list of items.


</summary></devnotes></function>
      <function name="GetItemHeight" visibility="protected" procflags="overload override" file="FMX.ListView.pas" line="815">
        <devnotes><summary>
Returns the height of the list view item that has the specified index in the list of items, or the value of ItemHeight if you do not specify any index.
</summary></devnotes>
        <parameters>
          <parameter name="Index" type="Integer" paramflags="const"/>
          <retval type="Integer"/>
        </parameters>
      </function>
      <function name="GetItemHeight" visibility="protected" procflags="overload virtual" file="FMX.ListView.pas" line="817">
        <parameters>
          <retval type="Integer"/>
        </parameters>
      <devnotes><summary>
Returns the height of the list view item that has the specified index in the list of items, or the value of ItemHeight if you do not specify any index.
</summary></devnotes></function>
      <function name="GetItemEditHeight" visibility="protected" procflags="overload virtual" file="FMX.ListView.pas" line="818">
        <parameters>
          <retval type="Integer"/>
        </parameters>
      <devnotes><summary>
Getter of ItemEditHeight.
</summary></devnotes></function>
      <function name="GetHeaderHeight" visibility="protected" procflags="overload virtual" file="FMX.ListView.pas" line="819">
        <parameters>
          <retval type="Integer"/>
        </parameters>
      <devnotes><summary>
Getter of HeaderHeight.
</summary></devnotes></function>
      <function name="GetFooterHeight" visibility="protected" procflags="overload virtual" file="FMX.ListView.pas" line="820">
        <parameters>
          <retval type="Integer"/>
        </parameters>
      <devnotes><summary>
Getter of FooterHeight.
</summary></devnotes></function>
      <procedure name="WillEnterEditMode" visibility="protected" procflags="override" file="FMX.ListView.pas" line="822">
        <parameters>
          <parameter name="Animated" type="Boolean" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Invoked when the Edit mode is being changed.

FMX.ListView.TAppearanceListView.WillEnterEditMode inherits from FMX.ListView.TListViewBase.WillEnterEditMode. All content below this line refers to FMX.ListView.TListViewBase.WillEnterEditMode.
Invoked when the Edit mode is being changed.
If the Edit mode requires a different appearance, this is where an update of appearances needs to be initiated.


</summary></devnotes></procedure>
      <procedure name="DoResetEditModeAnimation" visibility="protected" procflags="override" file="FMX.ListView.pas" line="823">
      <devnotes><summary>
Called at the end of the animation that plays when the edit mode is toggled.
FMX.ListView.TAppearanceListView.DoResetEditModeAnimation inherits from FMX.ListView.TListViewBase.DoResetEditModeAnimation. All content below this line refers to FMX.ListView.TListViewBase.DoResetEditModeAnimation.
Called at the end of the animation that plays when the edit mode is toggled.


</summary></devnotes></procedure>
      <procedure name="DoAdapterSet" visibility="protected" procflags="override" file="FMX.ListView.pas" line="825">
      <devnotes><summary>


Called right after the adapter of the list view is set.
FMX.ListView.TAppearanceListView.DoAdapterSet inherits from FMX.ListView.TAdapterListView.DoAdapterSet. All content below this line refers to FMX.ListView.TAdapterListView.DoAdapterSet.
Called right after the adapter of the list view is set.


</summary></devnotes></procedure>
      <procedure name="DoRequestReindexing" visibility="protected" procflags="override" file="FMX.ListView.pas" line="827">
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Hook for the  IListViewController.RequestReindexing.
FMX.ListView.TAppearanceListView.DoRequestReindexing inherits from FMX.ListView.TListViewBase.DoRequestReindexing. All content below this line refers to FMX.ListView.TListViewBase.DoRequestReindexing.
Hook for the  IListViewController.RequestReindexing.


</summary></devnotes></procedure>
      <procedure name="DoItemResized" visibility="protected" procflags="override" file="FMX.ListView.pas" line="828">
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Hook for the  IListViewController.ItemResized.
FMX.ListView.TAppearanceListView.DoItemResized inherits from FMX.ListView.TListViewBase.DoItemResized. All content below this line refers to FMX.ListView.TListViewBase.DoItemResized.
Hook for the  IListViewController.ItemResized.


</summary></devnotes></procedure>
      <procedure name="DoCheckStateChanged" visibility="protected" procflags="override" file="FMX.ListView.pas" line="829">
        <parameters>
          <parameter name="AItem" type="TListItem" paramflags="const"/>
          <parameter name="Control" type="TListItemDrawable" paramflags="const"/>
        </parameters>
      <devnotes><summary>


Notifies the TListView that a control inside of an item is clicked.
FMX.ListView.TAppearanceListView.DoCheckStateChanged inherits from FMX.ListView.TListViewBase.DoCheckStateChanged. All content below this line refers to FMX.ListView.TListViewBase.DoCheckStateChanged.
Notifies the TListView that a control inside of an item is clicked.


</summary></devnotes></procedure>
      <procedure name="DoControlClicked" visibility="protected" procflags="override" file="FMX.ListView.pas" line="830">
        <parameters>
          <parameter name="Item" type="TListItem" paramflags="const"/>
          <parameter name="Control" type="TListItemDrawable" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Notifies the TListView that an item is clicked.
FMX.ListView.TAppearanceListView.DoControlClicked inherits from FMX.ListView.TListViewBase.DoControlClicked. All content below this line refers to FMX.ListView.TListViewBase.DoControlClicked.
Notifies the TListView that an item is clicked.


</summary></devnotes></procedure>
      <function name="GetAppearanceProperties" visibility="protected" file="FMX.ListView.pas" line="836">
        <devnotes><summary>
Returns an array with the objects of appearance properties of list view items.
The array contains the objects of appearance properties in the following order:

Appearance of regular items in edit mode.
Appearance of regular items.
Appearance of header items.
Appearance of footer items.

</summary></devnotes>
        <parameters>
          <retval type="TArray&lt;FMX.ListView.Appearances.TItemAppearanceProperties&gt;"/>
        </parameters>
      </function>
      <procedure name="RefreshAppearances" visibility="protected" file="FMX.ListView.pas" line="839">
        <devnotes><summary>
Refresh items with specified purposes.
Refresh all items if the set is empty.
</summary></devnotes>
        <parameters>
          <parameter name="APurposes" type="TListItemPurposes" paramflags="const">
            <value>
              []
            </value>
          </parameter>
        </parameters>
      </procedure>
      <procedure name="UpdateAppearanceStyleResources" visibility="protected" file="FMX.ListView.pas" line="841">
        <devnotes><summary>
Refresh items with specified purposes.


</summary></devnotes>
      </procedure>
      <procedure name="ItemAppearanceChange" visibility="protected" file="FMX.ListView.pas" line="843">
        <devnotes><summary>
Called when the appearance of the items is changed.
</summary></devnotes>
        <parameters>
          <parameter name="Sender" type="TItemAppearanceProperties" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="ItemAppearanceChangeObjects" visibility="protected" file="FMX.ListView.pas" line="845">
        <devnotes><summary>
Notifies the owner of the change in the appearance view.


</summary></devnotes>
        <parameters>
          <parameter name="Sender" type="TItemAppearanceProperties" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="ItemAppearanceChangeHeight" visibility="protected" file="FMX.ListView.pas" line="847">
        <devnotes><summary>
Called when the heights of the items are changed.
</summary></devnotes>
        <parameters>
          <parameter name="Sender" type="TItemAppearanceProperties" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="EditModeAppearances" visibility="protected" file="FMX.ListView.pas" line="849">
        <devnotes><summary>
Prepares the appearance of the list view items for the animation that plays when the list view enters the edit mode.
The list view calls EditModeAppearances when the EditMode property of the list view changes from False to True and the run-time platform supports edit mode animations, provided that the event handler of OnEditModeChanging did not prepare the appearance already.


</summary></devnotes>
      </procedure>
      <procedure name="InitializeItemAppearance" visibility="protected" procflags="virtual" file="FMX.ListView.pas" line="859">
        <devnotes><summary>
Fills the AppearanceClass property of the specified instance of TItemAppearanceProperties with a default value.
</summary></devnotes>
        <parameters>
          <parameter name="AAppearance" type="TItemAppearanceProperties" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DoListItemClick" visibility="protected" procflags="override" file="FMX.ListView.pas" line="861">
        <parameters>
          <parameter name="AItem" type="TListItem" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Dispatches the OnItemClick event.
DoListItemClick receives a single parameter, AItem, which is the clicked list view item.
If AItem is an instance of TListViewItem, DoListItemClick passes itself (as the Sender parameter) and the received AItem to the event handler of OnItemClick.


</summary></devnotes></procedure>
      <procedure name="DoUpdatingItemView" visibility="protected" procflags="override" file="FMX.ListView.pas" line="862">
        <parameters>
          <parameter name="AListItem" type="TListItem" paramflags="const"/>
          <parameter name="AHandled" type="Boolean" paramflags="var"/>
        </parameters>
      <devnotes><summary>
Dispatches the OnUpdatingItemView event.
DoUpdatingItemView receives the following parameters:

AListItem is the target list view item.
AHandled determines whether the event handler of OnUpdatingItemView takes care of updating the appearance of the list view item (True) or DoUpdatingItemView must update the appearance of the list view item instead (False).
DoUpdatingItemView passes itself (as the Sender parameter) and the received AListItem and AHandled parameters to the event handler of OnUpdatingItemView.
If AListItem is an instance of TListViewItem, DoUpdatingItemView also passes itself (as the Sender parameter) and the received AListItem and AHandled parameters to the event handler of OnUpdatingObjects.
</summary></devnotes></procedure>
      <procedure name="DoUpdateItemView" visibility="protected" procflags="override" file="FMX.ListView.pas" line="863">
        <parameters>
          <parameter name="AListItem" type="TListItem" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Dispatches the OnUpdateItemView and OnUpdateObjects events.
DoUpdateItemView receives a single parameter, AItem, which is the target list view item.
DoUpdateItemView passes itself (as the Sender parameter) and the received AItem to the event handler of OnUpdateItemView.
If AItem is an instance of TListViewItem, DoUpdateItemView also passes itself (as the Sender parameter) and the received AItem to the event handler of OnUpdateObjects.
</summary></devnotes></procedure>
      <property name="ItemHeight" visibility="protected" read="GetItemHeight" write="SetItemHeight" type="Integer" file="FMX.ListView.pas" line="867">
        <devnotes><summary>
Height in pixels of each regular list view item.
</summary></devnotes>
      </property>
      <property name="ItemEditHeight" visibility="protected" read="GetItemEditHeight" write="SetItemEditHeight" type="Integer" file="FMX.ListView.pas" line="869">
        <devnotes><summary>
Height in pixels of each regular list view item when the list view is in edit mode.
</summary></devnotes>
      </property>
      <property name="HeaderHeight" visibility="protected" read="GetHeaderHeight" write="SetHeaderHeight" type="Integer" file="FMX.ListView.pas" line="871">
        <devnotes><summary>
Height in pixels of each header list view item.
</summary></devnotes>
      </property>
      <property name="FooterHeight" visibility="protected" read="GetFooterHeight" write="SetFooterHeight" type="Integer" file="FMX.ListView.pas" line="873">
        <devnotes><summary>
Height in pixels of each footer list view item.
</summary></devnotes>
      </property>
      <property name="ItemEditAppearanceClassName" visibility="protected" read="GetItemEditObjectsClassName" write="SetItemEditObjectsClassName" type="string" default="0" file="FMX.ListView.pas" line="880">
        <devnotes><summary>
Name of the appearance class of regular list view items in edit mode.
</summary></devnotes>
      </property>
      <property name="ItemAppearanceClassName" visibility="protected" read="GetItemObjectsClassName" write="SetItemObjectsClassName" type="string" default="0" file="FMX.ListView.pas" line="885">
        <devnotes><summary>
Name of the appearance class of regular list view items.
</summary></devnotes>
      </property>
      <property name="HeaderAppearanceClassName" visibility="protected" read="GetHeaderAppearanceClassName" write="SetHeaderAppearanceClassName" type="string" default="0" file="FMX.ListView.pas" line="890">
        <devnotes><summary>
Name of the appearance class of header list view items.
</summary></devnotes>
      </property>
      <property name="FooterAppearanceClassName" visibility="protected" read="GetFooterAppearanceClassName" write="SetFooterAppearanceClassName" type="string" default="0" file="FMX.ListView.pas" line="895">
        <devnotes><summary>
Name of the appearance class of footer list view items.
</summary></devnotes>
      </property>
      <property name="ItemAppearanceName" visibility="protected" read="GetItemAppearanceName" write="SetItemAppearanceName" stored="False" type="string" default="0" file="FMX.ListView.pas" line="899">
        <devnotes><summary>
Name of the appearance of regular list view items.
When your list view switches between display mode and edit mode, the item appearance switches between the appearance defined in the ItemAppearanceName property (display mode) and the appearance defined in the ItemEditAppearanceName property (edit mode). Items may display an animation as their appearance changes.
Possible values are:



ItemAppearanceName

ItemEditAppearanceName

List Item Preview


Not Selected

Selected


Custom

Custom






ImageListItem

ImageListItemDeleteImageListItemShowCheck






ImageListItemBottomDetail

ImageListItemBottomDetailShowCheck






ImageListItemBottomDetailRightButton

ImageListItemBottomDetailRightButtonShowCheck






ImageListItemRightButton

ImageListItemRightButtonDeleteImageListItemRightButtonShowCheck






ListItem

ListItemDeleteListItemShowCheck






ListItemRightDetail

ListItemRightDetailDeleteListItemRightDetailShowCheck




</summary></devnotes>
      </property>
      <property name="ItemEditAppearanceName" visibility="protected" read="GetItemEditAppearanceName" write="SetItemEditAppearanceName" stored="False" type="string" default="0" file="FMX.ListView.pas" line="902">
        <devnotes><summary>
Name of the appearance of regular list view items in edit mode.
When your list view switches between display mode and edit mode, the item appearance switches between the appearance defined in the ItemAppearanceName property (display mode) and the appearance defined in the ItemEditAppearanceName property (edit mode). Items may display an animation as their appearance changes.
You can find the possible values in the table below.



ItemEditAppearance

ItemAppearanceName

Editing Mode

List Item Preview


Not Selected

Selected


Custom

Custom

Custom






ImageListItemBottomDetailShowCheck

ImageListItemBottomDetail

Select






ImageListItemBottomDetailRightButtonShowCheck

ImageListItemBottomDetailRightButton

Select






ImageListItemDelete

ImageListItem

Delete






ImageListItemRightButtonDelete

ImageListItemRightButton

Delete






ImageListItemRightButtonShowCheck

ImageListItemRightButton

Select






ImageListItemShowCheck

ImageListItem

Select






ListItemDelete

ListItem

Delete






ListItemRightDetailDelete

ListItemRightDetail

Delete






ListItemRightDetailShowCheck

ListItemRightDetail

Select






ListItemShowCheck

ListItem

Select





Each edit mode item appearance matches a display mode item appearance (ItemAppearanceName). The type of editing mode described in the table above determines how list items behave.



Item

Behavior


Delete

Tap a list item to show a Delete button. Tap Delete to delete the item, tap anywhere else to hide the Delete button.


Select

Tap a list item to select it. Tap again to unselect it. You can select more than one item (multiselect).


Custom

Your custom implementation of the edit mode item appearance determines the behavior of list items.
</summary></devnotes>
      </property>
      <property name="HeaderAppearanceName" visibility="protected" read="GetHeaderAppearanceName" write="SetHeaderAppearanceName" stored="False" type="string" default="0" file="FMX.ListView.pas" line="905">
        <devnotes><summary>
Name of the appearance of header list view items.
Possible values are:



Item

Description


Custom

Custom appearance.


ListHeader

Default appearance.
</summary></devnotes>
      </property>
      <property name="FooterAppearanceName" visibility="protected" read="GetFooterAppearanceName" write="SetFooterAppearanceName" stored="False" type="string" default="0" file="FMX.ListView.pas" line="908">
        <devnotes><summary>
Name of the appearance of footer list view items.
Possible values are:



Item

Description


Custom

Custom appearance.


ListHeader

Default appearance.
</summary></devnotes>
      </property>
      <property name="ItemAppearance" visibility="protected" read="FAppearanceProperties" write="SetAppearanceProperties" type="TPublishedAppearance" file="FMX.ListView.pas" line="910"><devnotes><summary>
Specifies the various options that are used when rendering the list view items.

Note: This is a design-time property. At run time access the relevant properties of the list view instead. See TPublishedAppearance for more information.
Use the ItemAppearance property in order to control how an item from this list view component is displayed. The ItemAppearance property controls the footer, header, and list item appearance and height, and also the list item appearance and height when in edit mode.
</summary></devnotes></property>
      <property name="ItemAppearanceObjects" visibility="protected" read="GetItemAppearanceObjects" write="SetItemAppearanceObjects" type="TPublishedObjects" file="FMX.ListView.pas" line="913">
        <devnotes><summary>
Allows you to specify properties of individual item appearance objects. These objects include footer, header, item, and item in edit mode objects.
Use the ItemAppearanceObjects property in order to control various properties of the objects that might be part of this list view component. For instance, you can specify accessory and text settings for the items or you can affect text settings for the footer and header items.
</summary></devnotes>
      </property>
      <event name="OnButtonChange" visibility="protected" read="FOnButtonChange" write="FOnButtonChange" type="TItemControlEvent" file="FMX.ListView.pas" line="915">
        <devnotes><summary>
Occurs immediately when you check a glyph button (such as a check box or a delete button) inside a list view item.
Write an OnButtonChange event handler to provide additional functionality when checking a glyph button (such as a check box or a delete button) inside a list view item.
</summary></devnotes>
      </event>
      <event name="OnButtonClick" visibility="protected" read="FOnButtonClick" write="FOnButtonClick" type="TItemControlEvent" file="FMX.ListView.pas" line="917">
        <devnotes><summary>
Occurs immediately when you click on a text button or a glyph button inside a list view item.
Write an OnButtonClick event handler to provide additional functionality when clicking on a text button or a glyph button inside a list view item.
</summary></devnotes>
      </event>
      <constructor name="Create" visibility="public" file="FMX.ListView.pas" line="919">
        <parameters>
          <parameter name="AOwner" type="TComponent"/>
        </parameters>
      <devnotes><summary>
Creates an instance of TAppearanceListView with the specified component as its owner.
</summary></devnotes></constructor>
      <destructor name="Destroy" visibility="public" file="FMX.ListView.pas" line="920">
        <parameters>
        </parameters>
      <devnotes><summary>
Destroys this instance of TAppearanceListView.
</summary></devnotes></destructor>
      <procedure name="BeginUpdate" visibility="public" procflags="override" file="FMX.ListView.pas" line="921">
      <devnotes><summary>
Marks the start of an update session of the control and its children.
FMX.ListView.TAppearanceListView.BeginUpdate inherits from FMX.Controls.TControl.BeginUpdate. All content below this line refers to FMX.Controls.TControl.BeginUpdate.
Marks the start of an update session of the control and its children. 
It increases the value of the FUpdating semaphore. A call to BeginUpdate must be complemented by calls to EndUpdate after the update is finished.
FUpdating is an internal semaphore used to mark the process of control updating. Painting of a control is disabled while FUpdating is higher than 0.

 See Also
FMX.Controls.TControl.FUpdating
FMX.Controls.TControl.EndUpdate
FMX.Controls.TControl.IsUpdating

</summary></devnotes></procedure>
      <procedure name="EndUpdate" visibility="public" procflags="override" file="FMX.ListView.pas" line="922">
      <devnotes><summary>
Marks the end of an update session of the control and its children.
FMX.ListView.TAppearanceListView.EndUpdate inherits from FMX.Controls.TControl.EndUpdate. All content below this line refers to FMX.Controls.TControl.EndUpdate.
Marks the end of an update session of the control and its children.
The update session must be started first by calling BeginUpdate.
EndUpdate decreases the FUpdating semaphore. If all update sessions end and FUpdating is 0, EndUpdate invokes Realign to process layout changes.

 See Also
FMX.Controls.TControl.FUpdating
FMX.Controls.TControl.BeginUpdate
FMX.Controls.TControl.IsUpdating
FMX.Controls.TControl.Realign

</summary></devnotes></procedure>
      <procedure name="Resize" visibility="public" procflags="override" file="FMX.ListView.pas" line="923">
      <devnotes><summary>




OnResize event dispatcher. 
FMX.ListView.TAppearanceListView.Resize inherits from FMX.Controls.TControl.Resize. All content below this line refers to FMX.Controls.TControl.Resize.
OnResize event dispatcher. 
A control calls Resize when the dimensions of the control change.
Derived classes can override the protected Resize method to implement specific responses to control resizing.
</summary></devnotes></procedure>
      <property name="Items" visibility="public" read="FAppearanceViewItems" write="SetAppearanceListViewItems" type="TAppearanceListViewItems" file="FMX.ListView.pas" line="926">
        <devnotes><summary>
Provides access to individual items in this list view component.
Use the Items property in order to access each individual item stored in this list view component. The Items property is also used if you want to add items to the list view, in a programmatic manner. Otherwise, you would normally add the items automatically via LiveBindings.
</summary></devnotes>
      </property>
      <event name="OnItemClick" visibility="public" read="FOnItemClick" write="FOnItemClick" type="TAppearanceListView.TItemEvent" file="FMX.ListView.pas" line="928">
        <devnotes><summary>
Occurs immediately after clicking an item from the list view.
Write an OnItemClick event handler to respond to clicking on an item from the list view component.
OnItemClick is an event of type TItemEvent.
Do not modify the contents of the list view in the OnItemClick event handler (do not add, remove, update or change the order of list view items). If you need to do that, use OnItemClickEx event handler instead. It is safe to modify the content of the items themselves in both of those handlers.
The OnItemClick event handler receives the following parameters:



Parameter

Description



Sender



The instance of TCustomListView to which the clicked item belongs.




AItem



The instance of Appearances.TListViewItem that you click on.

</summary></devnotes>
      </event>
      <event name="OnUpdatingObjects" visibility="public" read="FOnUpdatingObjects" write="FOnUpdatingObjects" type="TAppearanceListView.TUpdatingObjectsEvent" file="FMX.ListView.pas" line="935">
        <devnotes><summary>
Occurs immediately before the list view component is updated.
Write an OnUpdatingObjects event handler to provide additional functionality before updating the list view component. 
OnUpdatingObjects is an event of type TItemEvent.
</summary></devnotes>
      </event>
      <event name="OnUpdateObjects" visibility="public" read="FOnUpdateObjects" write="FOnUpdateObjects" type="TAppearanceListView.TItemEvent" file="FMX.ListView.pas" line="942">
        <devnotes><summary>
Occurs immediately after the list view component is updated.
Write an OnUpdateObjects event handler to provide additional functionality after updating the list view component. 
OnUpdateObjects is an event of type TItemEvent.
</summary></devnotes>
      </event>
    </members>
  </class>
  <class name="TCustomListView" file="FMX.ListView.pas" line="945">
    
  </class>
  <class name="TListView" file="FMX.ListView.pas" line="948">
    
    <members>
      <procedure name="InitializeItemAppearance" visibility="protected" procflags="override" file="FMX.ListView.pas" line="950">
        <parameters>
          <parameter name="AAppearance" type="TItemAppearanceProperties" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Fills the AppearanceClass property of the specified instance of TItemAppearanceProperties with a default value.
FMX.ListView.TListView.InitializeItemAppearance inherits from FMX.ListView.TAppearanceListView.InitializeItemAppearance. All content below this line refers to FMX.ListView.TAppearanceListView.InitializeItemAppearance.
Fills the AppearanceClass property of the specified instance of TItemAppearanceProperties with a default value.

 See Also
FMX.ListView.TAppearanceListView.Create

</summary></devnotes></procedure>
      <property name="ItemAppearanceName" visibility="public" read="GetItemAppearanceName" write="SetItemAppearanceName" stored="False" type="string" default="0" hoisted="true" file="FMX.ListView.pas" line="953"/>
      <property name="ItemEditAppearanceName" visibility="public" read="GetItemEditAppearanceName" write="SetItemEditAppearanceName" stored="False" type="string" default="0" hoisted="true" file="FMX.ListView.pas" line="954"/>
      <property name="HeaderAppearanceName" visibility="public" read="GetHeaderAppearanceName" write="SetHeaderAppearanceName" stored="False" type="string" default="0" hoisted="true" file="FMX.ListView.pas" line="955"/>
      <property name="FooterAppearanceName" visibility="public" read="GetFooterAppearanceName" write="SetFooterAppearanceName" stored="False" type="string" default="0" hoisted="true" file="FMX.ListView.pas" line="956"/>
      <property name="ItemAppearanceClassName" visibility="published" read="GetItemObjectsClassName" write="SetItemObjectsClassName" type="string" default="0" hoisted="true" file="FMX.ListView.pas" line="959"/>
      <property name="ItemEditAppearanceClassName" visibility="published" read="GetItemEditObjectsClassName" write="SetItemEditObjectsClassName" type="string" default="0" hoisted="true" file="FMX.ListView.pas" line="960"/>
      <property name="HeaderAppearanceClassName" visibility="published" read="GetHeaderAppearanceClassName" write="SetHeaderAppearanceClassName" type="string" default="0" hoisted="true" file="FMX.ListView.pas" line="961"/>
      <property name="FooterAppearanceClassName" visibility="published" read="GetFooterAppearanceClassName" write="SetFooterAppearanceClassName" type="string" default="0" hoisted="true" file="FMX.ListView.pas" line="962"/>
      <event name="OnUpdatingObjects" visibility="published" read="FOnUpdatingObjects" write="FOnUpdatingObjects" type="TAppearanceListView.TUpdatingObjectsEvent" hoisted="true" file="FMX.ListView.pas" line="964"/>
      <event name="OnUpdateObjects" visibility="published" read="FOnUpdateObjects" write="FOnUpdateObjects" type="TAppearanceListView.TItemEvent" hoisted="true" file="FMX.ListView.pas" line="965"/>
      <event name="OnEditModeChange" visibility="published" read="FOnEditModeChange" write="FOnEditModeChange" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="966"/>
      <event name="OnEditModeChanging" visibility="published" read="FOnEditModeChanging" write="FOnEditModeChanging" type="TListViewBase.THandleChangeEvent" hoisted="true" file="FMX.ListView.pas" line="967"/>
      <property name="EditMode" visibility="published" read="FEditMode" write="SetEditMode" type="Boolean" default="0" hoisted="true" file="FMX.ListView.pas" line="968"/>
      <property name="Transparent" visibility="published" read="FTransparent" write="SetTransparent" type="Boolean" default="0" hoisted="true" file="FMX.ListView.pas" line="970"/>
      <property name="AllowSelection" visibility="published" read="FAllowSelection" write="FAllowSelection" type="Boolean" default="1" hoisted="true" file="FMX.ListView.pas" line="971"/>
      <property name="AlternatingColors" visibility="published" read="FAlternatingColors" write="SetAlternatingColors" type="Boolean" default="0" hoisted="true" file="FMX.ListView.pas" line="972"/>
      <property name="ItemIndex" visibility="published" read="GetItemIndex" write="SetItemIndex" type="Integer" default="-1" hoisted="true" file="FMX.ListView.pas" line="973"/>
      <property name="Images" visibility="published" read="GetImages" write="SetImages" type="TCustomImageList" hoisted="true" file="FMX.ListView.pas" line="974"/>
      <property name="ScrollViewPos" visibility="published" read="FScrollViewPos" write="SetScrollViewPos" type="Single" default="0" hoisted="true" file="FMX.ListView.pas" line="975"/>
      <property name="ItemSpaces" visibility="published" read="FItemSpaces" write="SetItemSpaces" type="TBounds" hoisted="true" file="FMX.ListView.pas" line="976"/>
      <property name="SideSpace" visibility="published" read="FSideSpace" write="SetSideSpace" type="Integer" default="0" hoisted="true" file="FMX.ListView.pas" line="977"/>
      <property name="Align" visibility="published" read="FAlign" write="SetAlign" type="TAlignLayout" default="0" hoisted="true" file="FMX.ListView.pas" line="979"/>
      <property name="Anchors" visibility="published" read="FAnchors" write="SetAnchors" stored="IsAnchorsStored" type="TAnchors" hoisted="true" file="FMX.ListView.pas" line="980"/>
      <property name="CanFocus" visibility="published" read="FCanFocus" write="FCanFocus" type="Boolean" default="1" hoisted="true" file="FMX.ListView.pas" line="981"/>
      <property name="CanParentFocus" visibility="published" read="FCanParentFocus" write="FCanParentFocus" type="Boolean" default="0" hoisted="true" file="FMX.ListView.pas" line="982"/>
      <property name="ClipChildren" visibility="published" read="FClipChildren" write="SetClipChildren" type="Boolean" default="1" hoisted="true" file="FMX.ListView.pas" line="983"/>
      <property name="ClipParent" visibility="published" read="FClipParent" write="FClipParent" type="Boolean" default="0" hoisted="true" file="FMX.ListView.pas" line="984"/>
      <property name="Cursor" visibility="published" read="GetCursor" write="SetCursor" type="TCursor" default="0" hoisted="true" file="FMX.ListView.pas" line="985"/>
      <property name="DisableFocusEffect" visibility="published" read="FDisableFocusEffect" write="FDisableFocusEffect" type="Boolean" default="1" hoisted="true" file="FMX.ListView.pas" line="986"/>
      <property name="DragMode" visibility="published" read="GetDragMode" write="SetDragMode" type="TDragMode" default="0" hoisted="true" file="FMX.ListView.pas" line="987"/>
      <property name="EnableDragHighlight" visibility="published" read="FEnableDragHighlight" write="FEnableDragHighlight" type="Boolean" default="1" hoisted="true" file="FMX.ListView.pas" line="988"/>
      <property name="Enabled" visibility="published" read="FEnabled" write="SetEnabled" stored="EnabledStored" type="Boolean" default="1" hoisted="true" file="FMX.ListView.pas" line="989"/>
      <property name="Locked" visibility="published" read="FLocked" write="SetLocked" type="Boolean" default="0" hoisted="true" file="FMX.ListView.pas" line="990"/>
      <property name="Height" visibility="published" read="GetHeight" write="SetHeight" stored="False" type="Single" hoisted="true" file="FMX.ListView.pas" line="991"/>
      <property name="Hint" visibility="published" read="FHint" write="SetHint" stored="HintStored" type="string" default="0" hoisted="true" file="FMX.ListView.pas" line="992"/>
      <property name="HitTest" visibility="published" read="FHitTest" write="SetHitTest" type="Boolean" default="1" hoisted="true" file="FMX.ListView.pas" line="993"/>
      <property name="Margins" visibility="published" read="GetMargins" write="SetMargins" type="TBounds" hoisted="true" file="FMX.ListView.pas" line="994"/>
      <property name="Opacity" visibility="published" read="FOpacity" write="SetOpacity" stored="IsOpacityStored" type="Single" hoisted="true" file="FMX.ListView.pas" line="995"/>
      <property name="Padding" visibility="published" read="GetPadding" write="SetPadding" type="TBounds" hoisted="true" file="FMX.ListView.pas" line="996"/>
      <property name="PopupMenu" visibility="published" read="FPopupMenu" write="SetPopupMenu" stored="IsPopupMenuStored" type="TCustomPopupMenu" hoisted="true" file="FMX.ListView.pas" line="997"/>
      <property name="Position" visibility="published" read="FPosition" write="SetPosition" stored="IsPositionStored" type="TPosition" hoisted="true" file="FMX.ListView.pas" line="998"/>
      <property name="RotationAngle" visibility="published" read="GetRotationAngle" write="SetRotationAngle" type="Single" default="0" hoisted="true" file="FMX.ListView.pas" line="999"/>
      <property name="RotationCenter" visibility="published" read="GetRotationCenter" write="SetRotationCenter" type="TPosition" hoisted="true" file="FMX.ListView.pas" line="1000"/>
      <property name="Scale" visibility="published" read="GetScale" write="SetScale" type="TPosition" hoisted="true" file="FMX.ListView.pas" line="1001"/>
      <property name="Size" visibility="published" read="FSize" write="SetSize" stored="IsSizeStored" type="TControlSize" hoisted="true" file="FMX.ListView.pas" line="1002"/>
      <property name="TabOrder" visibility="published" read="GetTabOrder" write="SetTabOrder" type="TTabOrder" default="-1" hoisted="true" file="FMX.ListView.pas" line="1003"/>
      <property name="TabStop" visibility="published" read="GetTabStop" write="SetTabStop" type="Boolean" default="1" hoisted="true" file="FMX.ListView.pas" line="1004"/>
      <property name="Visible" visibility="published" read="FVisible" write="SetVisible" stored="VisibleStored" type="Boolean" default="1" hoisted="true" file="FMX.ListView.pas" line="1005"/>
      <property name="Width" visibility="published" read="GetWidth" write="SetWidth" stored="False" type="Single" hoisted="true" file="FMX.ListView.pas" line="1006"/>
      <property name="ParentShowHint" visibility="published" read="FParentShowHint" write="SetParentShowHint" type="Boolean" default="1" hoisted="true" file="FMX.ListView.pas" line="1007"/>
      <property name="ShowHint" visibility="published" read="FShowHint" write="SetShowHint" stored="IsShowHintStored" type="Boolean" hoisted="true" file="FMX.ListView.pas" line="1008"/>
      <event name="OnApplyStyleLookup" visibility="published" read="FOnApplyStyleLookup" write="FOnApplyStyleLookup" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="1011"/>
      <event name="OnDragEnter" visibility="published" read="FOnDragEnter" write="FOnDragEnter" type="TDragEnterEvent" hoisted="true" file="FMX.ListView.pas" line="1013"/>
      <event name="OnDragLeave" visibility="published" read="FOnDragLeave" write="FOnDragLeave" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="1014"/>
      <event name="OnDragOver" visibility="published" read="FOnDragOver" write="FOnDragOver" type="TDragOverEvent" hoisted="true" file="FMX.ListView.pas" line="1015"/>
      <event name="OnDragDrop" visibility="published" read="FOnDragDrop" write="FOnDragDrop" type="TDragDropEvent" hoisted="true" file="FMX.ListView.pas" line="1016"/>
      <event name="OnDragEnd" visibility="published" read="FOnDragEnd" write="FOnDragEnd" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="1017"/>
      <event name="OnKeyDown" visibility="published" read="FOnKeyDown" write="FOnKeyDown" type="TKeyEvent" hoisted="true" file="FMX.ListView.pas" line="1019"/>
      <event name="OnKeyUp" visibility="published" read="FOnKeyUp" write="FOnKeyUp" type="TKeyEvent" hoisted="true" file="FMX.ListView.pas" line="1020"/>
      <event name="OnCanFocus" visibility="published" read="FOnCanFocus" write="FOnCanFocus" type="TCanFocusEvent" hoisted="true" file="FMX.ListView.pas" line="1022"/>
      <event name="OnEnter" visibility="published" read="FOnEnter" write="FOnEnter" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="1024"/>
      <event name="OnExit" visibility="published" read="FOnExit" write="FOnExit" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="1025"/>
      <event name="OnMouseDown" visibility="published" read="FOnMouseDown" write="FOnMouseDown" type="TMouseEvent" hoisted="true" file="FMX.ListView.pas" line="1026"/>
      <event name="OnMouseMove" visibility="published" read="FOnMouseMove" write="FOnMouseMove" type="TMouseMoveEvent" hoisted="true" file="FMX.ListView.pas" line="1027"/>
      <event name="OnMouseUp" visibility="published" read="FOnMouseUp" write="FOnMouseUp" type="TMouseEvent" hoisted="true" file="FMX.ListView.pas" line="1028"/>
      <event name="OnMouseWheel" visibility="published" read="FOnMouseWheel" write="FOnMouseWheel" type="TMouseWheelEvent" hoisted="true" file="FMX.ListView.pas" line="1029"/>
      <event name="OnMouseEnter" visibility="published" read="FOnMouseEnter" write="FOnMouseEnter" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="1030"/>
      <event name="OnMouseLeave" visibility="published" read="FOnMouseLeave" write="FOnMouseLeave" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="1031"/>
      <event name="OnPainting" visibility="published" read="FOnPainting" write="FOnPainting" type="TOnPaintEvent" hoisted="true" file="FMX.ListView.pas" line="1033"/>
      <event name="OnPaint" visibility="published" read="FOnPaint" write="FOnPaint" type="TOnPaintEvent" hoisted="true" file="FMX.ListView.pas" line="1034"/>
      <event name="OnResize" visibility="published" read="FOnResize" write="FOnResize" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="1035"/>
      <event name="OnResized" visibility="published" read="FOnResized" write="FOnResized" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="1036"/>
      <property name="ItemAppearance" visibility="published" read="FAppearanceProperties" write="SetAppearanceProperties" type="TPublishedAppearance" hoisted="true" file="FMX.ListView.pas" line="1038"/>
      <property name="ItemAppearanceObjects" visibility="published" read="GetItemAppearanceObjects" write="SetItemAppearanceObjects" type="TPublishedObjects" hoisted="true" file="FMX.ListView.pas" line="1039"/>
      <property name="HelpContext" visibility="published" read="FHelpContext" write="SetHelpContext" stored="IsHelpContextStored" type="THelpContext" default="0" hoisted="true" file="FMX.ListView.pas" line="1041"/>
      <property name="HelpKeyword" visibility="published" read="FHelpKeyword" write="SetHelpKeyword" stored="IsHelpContextStored" type="string" default="0" hoisted="true" file="FMX.ListView.pas" line="1042"/>
      <property name="HelpType" visibility="published" read="FHelpType" write="FHelpType" type="THelpType" default="1" hoisted="true" file="FMX.ListView.pas" line="1043"/>
      <property name="StyleLookup" visibility="published" read="FStyleLookup" write="SetStyleLookup" type="string" default="0" hoisted="true" file="FMX.ListView.pas" line="1045"/>
      <property name="TouchTargetExpansion" visibility="published" read="FTouchTargetExpansion" write="SetTouchTargetExpansion" type="TBounds" hoisted="true" file="FMX.ListView.pas" line="1046"/>
      <event name="OnClick" visibility="published" read="FOnClick" write="SetOnClick" stored="OnClickStored" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="1047"/>
      <event name="OnDblClick" visibility="published" read="FOnDblClick" write="FOnDblClick" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="1048"/>
      <property name="CanSwipeDelete" visibility="published" read="FCanSwipeDelete" write="SetCanSwipeDelete" type="Boolean" default="1" hoisted="true" file="FMX.ListView.pas" line="1051"/>
      <event name="OnChange" visibility="published" read="FOnChange" write="FOnChange" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="1053"/>
      <event name="OnChangeRepainted" visibility="published" read="FOnChangeRepainted" write="FOnChangeRepainted" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="1054"/>
      <event name="OnItemsChange" visibility="published" read="FOnItemsChange" write="FOnItemsChange" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="1055"/>
      <event name="OnScrollViewChange" visibility="published" read="FOnScrollViewChange" write="FOnScrollViewChange" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="1056"/>
      <event name="OnItemClick" visibility="published" read="FOnItemClick" write="FOnItemClick" type="TAppearanceListView.TItemEvent" hoisted="true" file="FMX.ListView.pas" line="1057"/>
      <event name="OnItemClickEx" visibility="published" read="FOnItemClickEx" write="FOnItemClickEx" type="TListViewBase.TListItemClickEventEx" hoisted="true" file="FMX.ListView.pas" line="1058"/>
      <event name="OnButtonClick" visibility="published" read="FOnButtonClick" write="FOnButtonClick" type="TItemControlEvent" hoisted="true" file="FMX.ListView.pas" line="1059"/>
      <event name="OnButtonChange" visibility="published" read="FOnButtonChange" write="FOnButtonChange" type="TItemControlEvent" hoisted="true" file="FMX.ListView.pas" line="1060"/>
      <event name="OnDeletingItem" visibility="published" read="FOnDeletingItem" write="FOnDeletingItem" type="TListViewBase.TDeletingItemEvent" hoisted="true" file="FMX.ListView.pas" line="1062"/>
      <event name="OnDeleteItem" visibility="published" read="FOnDeleteItem" write="FOnDeleteItem" type="TListViewBase.TDeleteItemEvent" hoisted="true" file="FMX.ListView.pas" line="1063"/>
      <event name="OnDeleteChangeVisible" visibility="published" read="FOnDeleteChange" write="FOnDeleteChange" type="TListViewBase.TDeleteChangeVisibilityEvent" hoisted="true" file="FMX.ListView.pas" line="1064"/>
      <event name="OnSearchChange" visibility="published" read="FOnSearchChange" write="FOnSearchChange" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="1065"/>
      <event name="OnFilter" visibility="published" read="FOnFilter" write="SetOnFilter" type="TFilterEvent" hoisted="true" file="FMX.ListView.pas" line="1066"/>
      <event name="OnPullRefresh" visibility="published" read="FOnPullRefresh" write="FOnPullRefresh" type="TNotifyEvent" hoisted="true" file="FMX.ListView.pas" line="1067"/>
      <property name="DeleteButtonText" visibility="published" read="GetDeleteButtonText" write="SetDeleteButtonText" stored="DeleteButtonTextStored" type="string" hoisted="true" file="FMX.ListView.pas" line="1068"/>
      <property name="AutoTapScroll" visibility="published" read="FAutoTapScroll" write="FAutoTapScroll" type="Boolean" default="0" hoisted="true" file="FMX.ListView.pas" line="1070"/>
      <property name="AutoTapTreshold" visibility="published" read="FAutoTapTreshold" write="FAutoTapTreshold" type="Integer" default="8" hoisted="true" file="FMX.ListView.pas" line="1071"/>
      <property name="ShowSelection" visibility="published" read="FShowSelection" write="SetShowSelection" type="Boolean" default="1" hoisted="true" file="FMX.ListView.pas" line="1072"/>
      <property name="DisableMouseWheel" visibility="published" read="FDisableMouseWheel" write="FDisableMouseWheel" type="Boolean" default="0" hoisted="true" file="FMX.ListView.pas" line="1073"/>
      <property name="SearchVisible" visibility="published" read="FSearchVisible" write="SetSearchVisible" type="Boolean" default="0" hoisted="true" file="FMX.ListView.pas" line="1075"/>
      <property name="SearchAlwaysOnTop" visibility="published" read="FSearchAlwaysOnTop" write="SetSearchAlwaysOnTop" type="Boolean" default="1" hoisted="true" file="FMX.ListView.pas" line="1076"/>
      <property name="SelectionCrossfade" visibility="published" read="FSelectionCrossfade" write="SetSelectionCrossfade" type="Boolean" default="0" hoisted="true" file="FMX.ListView.pas" line="1077"/>
      <property name="PullToRefresh" visibility="published" read="FPullToRefresh" write="SetPullToRefresh" type="Boolean" default="0" hoisted="true" file="FMX.ListView.pas" line="1078"/>
      <property name="PullRefreshWait" visibility="published" read="FPullRefreshWait" write="FPullRefreshWait" type="Boolean" default="0" hoisted="true" file="FMX.ListView.pas" line="1079"/>
      <property name="ControlType" visibility="published" read="FControlType" write="SetControlType" type="TControlType" default="0" hoisted="true" file="FMX.ListView.pas" line="1081"/>
      <property name="NativeOptions" visibility="published" read="FNativeOptions" write="SetNativeOptions" type="TListViewNativeOptions" default="0" hoisted="true" file="FMX.ListView.pas" line="1082"/>
    </members>
  <devnotes><summary>
Represents a FireMonkey list view component that you can use to hold and present various types of items.
The TListView displays a collection of items in a list that is optimized for LiveBindings and for fast and smooth scrolling. 
The items in the list view can have one or more of the following appearance features:

A caption or detail text (for example, using the Item.Text bindable member of TListView)
An associated image (for example, using the Item.Bitmap bindable member of TListView)
An accessory icon (for example, using the ItemEditAppearance property in the Object Inspector)
A graphic or a text button attached (for example, using the Item.ButtonText bindable member of TListView)
You can customize the appearance of a list view by modifying the layout of the list items, including the caption, the associated image, text details, or the accessory icon.
TListView has the edit mode in which  you can select several items.

Example
You can add items to a TListView either by binding to a data source, or by code (TListView.Items.Add).  
Here is a code example that shows how to add items to a TListView:


Delphi:

var
  LItem: TListViewItem;
  I: Integer;
begin
  for I := 1 to 10 do
  begin
    LItem := ListView1.Items.Add;
    LItem.Text := IntToStr(I); 
 end;
end;

// To achieve the best performance use BeginUpdate and EndUpdate.

var
  LItem: TListViewItem;
  I: Integer;
begin
  ListView1.BeginUpdate;
  try
    for I := 1 to 10 do
    begin
      LItem := ListView1.Items.Add;
      LItem.Text := IntToStr(I);
    end;
  finally
    ListView1.EndUpdate;
  end;
end;



C++:

for (int i = 1; i &lt;= 10; i++) {
  TListViewItem* item = ListView1-&gt;Items-&gt;Add();
  item-&gt;Text = IntToStr(i);
}

// To achieve the best performance use BeginUpdate and EndUpdate.

ListView1-&gt;BeginUpdate();
try {
  for (int i = 1; i &lt;= 10; i++) {
    TListViewItem* item = ListView1-&gt;Items-&gt;Add();
    item-&gt;Text = IntToStr(i);
  }
} catch (...) {
}
ListView1-&gt;EndUpdate();

</summary></devnotes></class>
  <class name="EListViewError" file="FMX.ListView.pas" line="1086">
    
  </class>
</namespace>