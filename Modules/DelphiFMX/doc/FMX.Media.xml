<?xml version="1.0" ?><namespace name="FMX.Media" platform="Win32">
  <const name="MediaTimeScale" type="Integer" file="FMX.Media.pas" line="24">
    <value>
      $989680
    </value>
  </const>
  <class name="ECaptureDeviceException" file="FMX.Media.pas" line="27">
    
  </class>
  <type name="TMediaTime" type="Int64" file="FMX.Media.pas" line="28"/>
  <helper name="TMediaTimeHelper" for="TMediaTime" file="FMX.Media.pas" line="32">
    <devnotes>
       <summary>Is a record used to convert the time of a media player into
       conventional formats.</summary>
    </devnotes>
    <members>
      <function name="ToDateTime" visibility="public" procflags="helper" file="FMX.Media.pas" line="35">
        <devnotes>
           <summary> Return time of player in TDateTime format </summary>
        </devnotes>
        <parameters>
          <retval type="TDateTime"/>
        </parameters>
      </function>
      <function name="ToString" visibility="public" procflags="helper" file="FMX.Media.pas" line="37">
        <devnotes>
           <summary> Return time of player in text format. Used system settings of time format</summary>
        </devnotes>
        <parameters>
          <retval type="string"/>
        </parameters>
      </function>
    </members>
  </helper>
  <enum name="TMediaType" file="FMX.Media.pas" line="40">
    <element value="0" name="Audio" file="FMX.Media.pas" line="40"/>
    <element value="1" name="Video" file="FMX.Media.pas" line="40"/>
  </enum>
  <enum name="TCaptureDeviceState" file="FMX.Media.pas" line="42">
    <element value="0" name="Capturing" file="FMX.Media.pas" line="42"/>
    <element value="1" name="Stopped" file="FMX.Media.pas" line="42"/>
  </enum>
  <type name="TSampleBufferReadyEvent" file="FMX.Media.pas" line="44" procflags="closure">
  </type>
  <type name="TPermissionRequestEvent" file="FMX.Media.pas" line="45" procflags="closure">
  </type>
  <class name="TCaptureDevice" file="FMX.Media.pas" line="49">
    
    <members>
      <enum name="TProperty" visibility="public" alias="FMX.Media.TProperty" file="FMX.Media.pas" line="51">
        <element value="0" name="UniqueID" file="FMX.Media.pas" line="51"/>
        <element value="1" name="Name" file="FMX.Media.pas" line="51"/>
        <element value="2" name="Description" file="FMX.Media.pas" line="51"/>
      </enum>
      <field name="FManager" type="TCaptureDeviceManager" visibility="private" size="4" offset="4" file="FMX.Media.pas" line="53"/>
      <field name="FDefault" type="Boolean" visibility="private" size="1" offset="8" file="FMX.Media.pas" line="54"/>
      <field name="FOnPermissionRequest" type="TPermissionRequestEvent" visibility="private" size="8" offset="16" file="FMX.Media.pas" line="55"/>
      <procedure name="DoPermissionRequest" visibility="protected" file="FMX.Media.pas" line="57">
        <parameters>
          <parameter name="AMessage" type="string" paramflags="const"/>
          <parameter name="AAccessGranted" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DoRequestPermission" visibility="protected" procflags="virtual" file="FMX.Media.pas" line="58">
      </procedure>
      <function name="GetMediaType" visibility="protected" procflags="abstract virtual" file="FMX.Media.pas" line="59">
        <parameters>
          <retval type="TMediaType"/>
        </parameters>
      </function>
      <function name="GetDeviceProperty" visibility="protected" procflags="virtual" file="FMX.Media.pas" line="60">
        <parameters>
          <parameter name="Prop" type="TCaptureDevice.TProperty" paramflags="const"/>
          <retval type="string"/>
        </parameters>
      </function>
      <function name="GetDeviceState" visibility="protected" procflags="abstract virtual" file="FMX.Media.pas" line="61">
        <parameters>
          <retval type="TCaptureDeviceState"/>
        </parameters>
      </function>
      <procedure name="DoStartCapture" visibility="protected" procflags="abstract virtual" file="FMX.Media.pas" line="62">
      </procedure>
      <procedure name="DoStopCapture" visibility="protected" procflags="abstract virtual" file="FMX.Media.pas" line="63">
      </procedure>
      <constructor name="Create" visibility="public" file="FMX.Media.pas" line="65">
        <parameters>
          <parameter name="AManager" type="TCaptureDeviceManager" paramflags="const"/>
          <parameter name="ADefault" type="Boolean" paramflags="const"/>
        </parameters>
      </constructor>
      <procedure name="AfterConstruction" visibility="public" procflags="override" file="FMX.Media.pas" line="66">
      </procedure>
      <destructor name="Destroy" visibility="public" file="FMX.Media.pas" line="67">
        <parameters>
        </parameters>
      </destructor>
      <procedure name="RequestPermission" visibility="public" file="FMX.Media.pas" line="68">
      </procedure>
      <procedure name="StartCapture" visibility="public" file="FMX.Media.pas" line="69">
      </procedure>
      <procedure name="StopCapture" visibility="public" file="FMX.Media.pas" line="70">
      </procedure>
      <property name="Description" visibility="public" read="GetDeviceProperty" type="string" default="0" index="2" file="FMX.Media.pas" line="71"/>
      <property name="IsDefault" visibility="public" read="FDefault" type="Boolean" file="FMX.Media.pas" line="72"/>
      <property name="MediaType" visibility="public" read="GetMediaType" type="TMediaType" file="FMX.Media.pas" line="73"/>
      <property name="Name" visibility="public" read="GetDeviceProperty" type="string" default="0" index="1" file="FMX.Media.pas" line="74"/>
      <property name="State" visibility="public" read="GetDeviceState" type="TCaptureDeviceState" file="FMX.Media.pas" line="75"/>
      <property name="UniqueID" visibility="public" read="GetDeviceProperty" type="string" default="0" index="0" file="FMX.Media.pas" line="76"/>
      <event name="OnPermissionRequest" visibility="public" read="FOnPermissionRequest" write="FOnPermissionRequest" type="TPermissionRequestEvent" file="FMX.Media.pas" line="77"/>
    </members>
  </class>
  <classref name="TCaptureDeviceClass" ref="TCaptureDevice" file="FMX.Media.pas" line="79"/>
  <class name="TAudioCaptureDevice" file="FMX.Media.pas" line="81">
    
    <members>
      <procedure name="SetFileName" visibility="private" file="FMX.Media.pas" line="83">
        <parameters>
          <parameter name="Value" type="string" paramflags="const"/>
        </parameters>
      </procedure>
      <field name="FFileName" type="string" visibility="protected" size="4" offset="24" file="FMX.Media.pas" line="85"/>
      <function name="GetMediaType" visibility="protected" procflags="override" file="FMX.Media.pas" line="86">
        <parameters>
          <retval type="TMediaType"/>
        </parameters>
      </function>
      <function name="GetFilterString" visibility="protected" procflags="virtual" file="FMX.Media.pas" line="87">
        <parameters>
          <retval type="string"/>
        </parameters>
      </function>
      <property name="FilterString" visibility="public" read="GetFilterString" type="string" default="0" file="FMX.Media.pas" line="89"/>
      <property name="FileName" visibility="public" read="FFileName" write="SetFileName" type="string" default="0" file="FMX.Media.pas" line="90"/>
    </members>
  </class>
  <enum name="TDevicePosition" file="FMX.Media.pas" line="93">
    <element value="0" name="Unspecified" file="FMX.Media.pas" line="93"/>
    <element value="1" name="Front" file="FMX.Media.pas" line="93"/>
    <element value="2" name="Back" file="FMX.Media.pas" line="93"/>
  </enum>
  <enum name="TFlashMode" file="FMX.Media.pas" line="95">
    <element value="0" name="AutoFlash" file="FMX.Media.pas" line="95"/>
    <element value="1" name="FlashOff" file="FMX.Media.pas" line="95"/>
    <element value="2" name="FlashOn" file="FMX.Media.pas" line="95"/>
  </enum>
  <enum name="TFocusMode" file="FMX.Media.pas" line="97">
    <element value="0" name="AutoFocus" file="FMX.Media.pas" line="97"/>
    <element value="1" name="ContinuousAutoFocus" file="FMX.Media.pas" line="97"/>
    <element value="2" name="Locked" file="FMX.Media.pas" line="97"/>
  </enum>
  <enum name="TTorchMode" file="FMX.Media.pas" line="99">
    <element value="0" name="ModeOff" file="FMX.Media.pas" line="99"/>
    <element value="1" name="ModeOn" file="FMX.Media.pas" line="99"/>
    <element value="2" name="ModeAuto" file="FMX.Media.pas" line="99"/>
  </enum>
  <enum name="TVideoCaptureQuality" file="FMX.Media.pas" line="101">
    <element value="0" name="PhotoQuality" file="FMX.Media.pas" line="101"/>
    <element value="1" name="HighQuality" file="FMX.Media.pas" line="101"/>
    <element value="2" name="MediumQuality" file="FMX.Media.pas" line="101"/>
    <element value="3" name="LowQuality" file="FMX.Media.pas" line="101"/>
    <element value="4" name="CaptureSettings" file="FMX.Media.pas" line="101"/>
  </enum>
  <enum name="TVideoCaptureSettingPriority" file="FMX.Media.pas" line="105">
    <devnotes>
       <summary>Enumerates the priorities to sort the video capture settings of a
       camera.</summary>
    </devnotes>
    <element value="0" name="Resolution" file="FMX.Media.pas" line="105"/>
    <element value="1" name="FrameRate" file="FMX.Media.pas" line="105"/>
  </enum>
  <struct name="TVideoCaptureSetting" size="32" file="FMX.Media.pas" line="108">
    <devnotes>
       <summary>Record that stores information of one camera frame configuration</summary>
    </devnotes>
    <class name="TResolutionComparer" visibility="private" alias="FMX.Media.TResolutionComparer" file="FMX.Media.pas" line="111">
      
      <members>
        <function name="Compare" visibility="public" procflags="override" file="FMX.Media.pas" line="112">
          <parameters>
            <parameter name="Left" type="TVideoCaptureSetting" paramflags="const"/>
            <parameter name="Right" type="TVideoCaptureSetting" paramflags="const"/>
            <retval type="Integer"/>
          </parameters>
        </function>
      </members>
    </class>
    <class name="TFrameRateComparer" visibility="private" alias="FMX.Media.TFrameRateComparer" file="FMX.Media.pas" line="114">
      
      <members>
        <function name="Compare" visibility="public" procflags="override" file="FMX.Media.pas" line="115">
          <parameters>
            <parameter name="Left" type="TVideoCaptureSetting" paramflags="const"/>
            <parameter name="Right" type="TVideoCaptureSetting" paramflags="const"/>
            <retval type="Integer"/>
          </parameters>
        </function>
      </members>
    </class>
    <field name="FWidth" type="Integer" visibility="private" size="4" offset="0" file="FMX.Media.pas" line="118"/>
    <field name="FHeight" type="Integer" visibility="private" size="4" offset="4" file="FMX.Media.pas" line="119"/>
    <field name="FFrameRate" type="Double" visibility="private" size="8" offset="8" file="FMX.Media.pas" line="120"/>
    <field name="FMinFrameRate" type="Double" visibility="private" size="8" offset="16" file="FMX.Media.pas" line="121"/>
    <field name="FMaxFrameRate" type="Double" visibility="private" size="8" offset="24" file="FMX.Media.pas" line="122"/>
    <function name="Create" visibility="public" procflags="static overload inline" file="FMX.Media.pas" line="126">
      <devnotes>
         <summary>Creates a new record with default parameters.</summary>
      </devnotes>
      <parameters>
        <retval type="TVideoCaptureSetting">
          <devnotes>
             <summary>Record that stores information of one camera frame configuration</summary>
          </devnotes>
        </retval>
      </parameters>
    </function>
    <function name="Create" visibility="public" procflags="static overload inline" file="FMX.Media.pas" line="129">
      <devnotes>
         <summary>Creates a new record with the given configuration.</summary>
         <remarks>This function also initialices the min and max frame rates with AFrameRate value.</remarks>
      </devnotes>
      <parameters>
        <parameter name="AWidth" type="Integer" paramflags="const"/>
        <parameter name="AHeight" type="Integer" paramflags="const"/>
        <parameter name="AFrameRate" type="Single" paramflags="const"/>
        <retval type="TVideoCaptureSetting">
          <devnotes>
             <summary>Record that stores information of one camera frame configuration</summary>
          </devnotes>
        </retval>
      </parameters>
    </function>
    <procedure name="SetFrameRate" visibility="public" procflags="overload" file="FMX.Media.pas" line="133">
      <devnotes>
         <summary>Configures the frame rates.</summary>
         <param name="AValue">Value for the frame rate and the minimum frame rate.</param>
         <param name="AMaxValue">Value for the maximum frame rate.</param>
      </devnotes>
      <parameters>
        <parameter name="AValue" type="Double" paramflags="const"/>
        <parameter name="AMaxValue" type="Double" paramflags="const"/>
      </parameters>
    </procedure>
    <procedure name="SetFrameRate" visibility="public" procflags="overload" file="FMX.Media.pas" line="136">
      <devnotes>
         <summary>Configures the frame rates.</summary>
         <param name="AValue">Value for the frame and the minimum and maximum frame rate as well.</param>
      </devnotes>
      <parameters>
        <parameter name="AValue" type="Double" paramflags="const"/>
      </parameters>
    </procedure>
    <function name="GetSize" visibility="public" file="FMX.Media.pas" line="138">
      <devnotes>
         <summary>Get the frame(width and height) size.</summary>
      </devnotes>
      <parameters>
        <retval type="TSize"/>
      </parameters>
    </function>
    <function name="IsSmallerThan" visibility="public" file="FMX.Media.pas" line="140">
      <devnotes>
         <summary>Function to compare two configurations with a priority.</summary>
      </devnotes>
      <parameters>
        <parameter name="ASetting" type="TVideoCaptureSetting" paramflags="const"/>
        <parameter name="APriority" type="TVideoCaptureSettingPriority"/>
        <retval type="Boolean"/>
      </parameters>
    </function>
    <property name="Width" visibility="public" read="FWidth" write="FWidth" type="Integer" file="FMX.Media.pas" line="143">
      <devnotes>
         <summary>Width of the frame</summary>
      </devnotes>
    </property>
    <property name="Height" visibility="public" read="FHeight" write="FHeight" type="Integer" file="FMX.Media.pas" line="145">
      <devnotes>
         <summary>Height of the frame</summary>
      </devnotes>
    </property>
    <property name="FrameRate" visibility="public" read="FFrameRate" write="SetFrameRate" type="Double" default="0" file="FMX.Media.pas" line="147">
      <devnotes>
         <summary>Frame rate of the frame</summary>
      </devnotes>
    </property>
    <property name="MaxFrameRate" visibility="public" read="FMaxFrameRate" type="Double" default="0" file="FMX.Media.pas" line="149">
      <devnotes>
         <summary>Maximum allowed frame rate for a configuration</summary>
      </devnotes>
    </property>
    <property name="MinFrameRate" visibility="public" read="FMinFrameRate" type="Double" default="0" file="FMX.Media.pas" line="151">
      <devnotes>
         <summary>Minimum allowed frame rate for a configuration</summary>
      </devnotes>
    </property>
  </struct>
  <class name="TVideoCaptureDevice" file="FMX.Media.pas" line="155">
    
    <ancestor name="TCaptureDevice" namespace="FMX.Media">
      <methodref name="DoPermissionRequest" visibility="protected"/>
      <methodref name="DoRequestPermission" visibility="protected" procflags="virtual"/>
      <methodref name="GetMediaType" visibility="protected" procflags="abstract virtual"/>
      <methodref name="GetDeviceProperty" visibility="protected" procflags="virtual"/>
      <methodref name="GetDeviceState" visibility="protected" procflags="abstract virtual"/>
      <methodref name="DoStartCapture" visibility="protected" procflags="abstract virtual"/>
      <methodref name="DoStopCapture" visibility="protected" procflags="abstract virtual"/>
      <methodref name="Create" visibility="public" procflags="constructor virtual"/>
      <methodref name="AfterConstruction" visibility="public" procflags="override"/>
      <methodref name="Destroy" visibility="public" procflags="destructor override"/>
      <methodref name="RequestPermission" visibility="public"/>
      <methodref name="StartCapture" visibility="public"/>
      <methodref name="StopCapture" visibility="public"/>
      <propertyref name="Description" visibility="public"/>
      <propertyref name="IsDefault" visibility="public"/>
      <propertyref name="MediaType" visibility="public"/>
      <propertyref name="Name" visibility="public"/>
      <propertyref name="State" visibility="public"/>
      <propertyref name="UniqueID" visibility="public"/>
      <eventref name="OnPermissionRequest" visibility="public"/>
      <ancestor name="TObject" namespace="System">
        <methodref name="Create" visibility="public" procflags="constructor">
        </methodref>
        <methodref name="Free" visibility="public">
        </methodref>
        <methodref name="DisposeOf" visibility="public" procflags="inline">
        </methodref>
        <methodref name="InitInstance" visibility="public" procflags="class">
        </methodref>
        <methodref name="CleanupInstance" visibility="public">
        </methodref>
        <methodref name="ClassType" visibility="public" procflags="inline">
        </methodref>
        <methodref name="ClassName" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassNameIs" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassParent" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="ClassInfo" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="InstanceSize" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="InheritsFrom" visibility="public" procflags="class">
        </methodref>
        <methodref name="MethodAddress" visibility="public" procflags="class overload">
        </methodref>
        <methodref name="MethodAddress" visibility="public" procflags="class overload">
        </methodref>
        <methodref name="MethodName" visibility="public" procflags="class">
        </methodref>
        <methodref name="QualifiedClassName" visibility="public" procflags="class">
        </methodref>
        <methodref name="FieldAddress" visibility="public" procflags="overload">
        </methodref>
        <methodref name="FieldAddress" visibility="public" procflags="overload">
        </methodref>
        <methodref name="GetInterface" visibility="public">
        </methodref>
        <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
        </methodref>
        <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="UnitName" visibility="public" procflags="class">
        </methodref>
        <methodref name="UnitScope" visibility="public" procflags="class">
        </methodref>
        <methodref name="Equals" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="GetHashCode" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="ToString" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="AfterConstruction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="Dispatch" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="DefaultHandler" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="NewInstance" visibility="public" procflags="class virtual">
        </methodref>
        <methodref name="FreeInstance" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor virtual">
        </methodref>
        <methodref name="GetDisposed" visibility="protected" procflags="inline">
        </methodref>
        <methodref name="CheckDisposed" visibility="protected" procflags="inline">
        </methodref>
        <propertyref name="Disposed" visibility="protected">
        </propertyref>
      </ancestor>
    </ancestor>
    <members>
      <field name="FOnSampleBufferReady" type="TSampleBufferReadyEvent" visibility="private" size="8" offset="24" file="FMX.Media.pas" line="157"/>
      <field name="FCaptureSettingPriority" type="TVideoCaptureSettingPriority" visibility="private" size="1" offset="32" file="FMX.Media.pas" line="158"/>
      <field name="FQuality" type="TVideoCaptureQuality" visibility="private" size="1" offset="33" file="FMX.Media.pas" line="159"/>
      <procedure name="InternalSetCaptureSetting" visibility="private" file="FMX.Media.pas" line="161">
        <parameters>
          <parameter name="ASetting" type="TVideoCaptureSetting" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetDefaultCanvasCaptureSettings" visibility="private" file="FMX.Media.pas" line="162">
        <parameters>
          <retval type="TArray&lt;FMX.Media.TVideoCaptureSetting&gt;"/>
        </parameters>
      </function>
      <function name="GetPosition" visibility="protected" procflags="virtual" file="FMX.Media.pas" line="164">
        <parameters>
          <retval type="TDevicePosition"/>
        </parameters>
      </function>
      <function name="GetQuality" visibility="protected" procflags="virtual" file="FMX.Media.pas" line="165">
        <parameters>
          <retval type="TVideoCaptureQuality"/>
        </parameters>
      </function>
      <procedure name="SetQuality" visibility="protected" file="FMX.Media.pas" line="166">
        <parameters>
          <parameter name="Value" type="TVideoCaptureQuality" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DoSetQuality" visibility="protected" procflags="virtual" file="FMX.Media.pas" line="168">
        <devnotes>
           <summary>Method subclasses should override to configure the desired quality.</summary>
        </devnotes>
        <parameters>
          <parameter name="Value" type="TVideoCaptureQuality" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetHasFlash" visibility="protected" procflags="virtual" file="FMX.Media.pas" line="169">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="GetFlashMode" visibility="protected" procflags="virtual" file="FMX.Media.pas" line="170">
        <parameters>
          <retval type="TFlashMode"/>
        </parameters>
      </function>
      <procedure name="SetFlashMode" visibility="protected" procflags="virtual" file="FMX.Media.pas" line="171">
        <parameters>
          <parameter name="Value" type="TFlashMode" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetHasTorch" visibility="protected" procflags="virtual" file="FMX.Media.pas" line="172">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="GetTorchMode" visibility="protected" procflags="virtual" file="FMX.Media.pas" line="173">
        <parameters>
          <retval type="TTorchMode"/>
        </parameters>
      </function>
      <procedure name="SetTorchMode" visibility="protected" procflags="virtual" file="FMX.Media.pas" line="174">
        <parameters>
          <parameter name="Value" type="TTorchMode" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetFocusMode" visibility="protected" procflags="virtual" file="FMX.Media.pas" line="175">
        <parameters>
          <retval type="TFocusMode"/>
        </parameters>
      </function>
      <procedure name="SetFocusMode" visibility="protected" procflags="virtual" file="FMX.Media.pas" line="176">
        <parameters>
          <parameter name="Value" type="TFocusMode" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetMediaType" visibility="protected" procflags="override" file="FMX.Media.pas" line="177">
        <parameters>
          <retval type="TMediaType"/>
        </parameters>
      </function>
      <procedure name="SampleBufferReady" visibility="protected" file="FMX.Media.pas" line="178">
        <parameters>
          <parameter name="ATime" type="TMediaTime" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DoSampleBufferToBitmap" visibility="protected" procflags="abstract virtual" file="FMX.Media.pas" line="179">
        <parameters>
          <parameter name="ABitmap" type="TBitmap" paramflags="const"/>
          <parameter name="ASetSize" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetCaptureSetting" visibility="protected" procflags="abstract virtual" file="FMX.Media.pas" line="181">
        <devnotes>
           <summary>Returns the current frame configuration.</summary>
        </devnotes>
        <parameters>
          <retval type="TVideoCaptureSetting">
            <devnotes>
               <summary>Record that stores information of one camera frame configuration</summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <function name="DoSetCaptureSetting" visibility="protected" procflags="abstract virtual" file="FMX.Media.pas" line="184">
        <devnotes>
           <summary>Configures the capture frame with the given settings.</summary>
           <returns>True if this operation was successful, and false otherwise.</returns>
        </devnotes>
        <parameters>
          <parameter name="ASetting" type="TVideoCaptureSetting" paramflags="const"/>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="DoGetAvailableCaptureSettings" visibility="protected" procflags="abstract virtual" file="FMX.Media.pas" line="187">
        <devnotes>
           <summary>Returns the available capture settings.</summary>
           <remarks>The array cannot be sorted.</remarks>
        </devnotes>
        <parameters>
          <retval type="TArray&lt;FMX.Media.TVideoCaptureSetting&gt;"/>
        </parameters>
      </function>
      <function name="CreateCaptureSettings" visibility="protected" file="FMX.Media.pas" line="191">
        <devnotes>
           <summary>Returns a new capture settings configuration with given parameters.</summary>
           <remarks>This function exists to allow this class subclasses to access to private fields of the frame configuration.
           </remarks>
        </devnotes>
        <parameters>
          <parameter name="AWidth" type="Integer" paramflags="const"/>
          <parameter name="AHeight" type="Integer" paramflags="const"/>
          <parameter name="AFrameRate" type="Double" paramflags="const"/>
          <parameter name="AMinFrameRate" type="Double" paramflags="const"/>
          <parameter name="AMaxFrameRate" type="Double" paramflags="const"/>
          <retval type="TVideoCaptureSetting">
            <devnotes>
               <summary>Record that stores information of one camera frame configuration</summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <constructor name="Create" visibility="public" file="FMX.Media.pas" line="196">
        <devnotes>
           <summary>Constructor.</summary>
           <param name="AManager">Manager who is managing this device.</param>
           <param name="ADefault">True is this is the default device for the manager, False otherwise.</param>
        </devnotes>
        <parameters>
          <parameter name="AManager" type="TCaptureDeviceManager" paramflags="const"/>
          <parameter name="ADefault" type="Boolean" paramflags="const"/>
        </parameters>
      </constructor>
      <procedure name="SampleBufferToBitmap" visibility="public" file="FMX.Media.pas" line="197">
        <parameters>
          <parameter name="ABitmap" type="TBitmap" paramflags="const"/>
          <parameter name="ASetSize" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="SetCaptureSetting" visibility="public" file="FMX.Media.pas" line="200">
        <devnotes>
           <summary>Configures the capture frame with the given settings.</summary>
           <returns>True if this operation was successful, and false otherwise.</returns>
        </devnotes>
        <parameters>
          <parameter name="ASetting" type="TVideoCaptureSetting" paramflags="const"/>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="GetAvailableCaptureSettings" visibility="public" file="FMX.Media.pas" line="203">
        <devnotes>
           <summary>Returns the available capture settings taking in account the canvas class bitmap size limitations.</summary>
           <remarks>The returning array is sorted with the CaptureSettingPriority criteria.</remarks>
        </devnotes>
        <parameters>
          <parameter name="ACanvasClass" type="TCanvasClass" paramflags="const"/>
          <retval type="TArray&lt;FMX.Media.TVideoCaptureSetting&gt;"/>
        </parameters>
      </function>
      <property name="AvailableCaptureSettings" visibility="public" read="GetDefaultCanvasCaptureSettings" type="TArray&lt;FMX.Media.TVideoCaptureSetting&gt;" file="FMX.Media.pas" line="208">
        <devnotes>
           <summary>Returns the available capture settings using the default canvas class to keep the limitation of the
           bitmap size.</summary>
           <remarks>The returning array is sorted with the CaptureSettingPriority criteria.</remarks>
        </devnotes>
      </property>
      <property name="CaptureSetting" visibility="public" read="GetCaptureSetting" write="InternalSetCaptureSetting" type="TVideoCaptureSetting" file="FMX.Media.pas" line="210">
        <devnotes>
           <summary>Current frame configuration.</summary>
        </devnotes>
      </property>
      <property name="CaptureSettingPriority" visibility="public" read="FCaptureSettingPriority" write="FCaptureSettingPriority" type="TVideoCaptureSettingPriority" file="FMX.Media.pas" line="214">
        <devnotes>
           <summary>Current settings sort priority.</summary>
           <remarks>When you retrieve the available frame settings, the are sorted by one priority criteria. This criteria is
           this property</remarks>
        </devnotes>
      </property>
      <property name="Position" visibility="public" read="GetPosition" type="TDevicePosition" file="FMX.Media.pas" line="215"/>
      <property name="Quality" visibility="public" read="GetQuality" write="SetQuality" type="TVideoCaptureQuality" file="FMX.Media.pas" line="221">
        <devnotes>
           <summary>Current frame configuration.</summary>
           <remarks>You can use this property to assign a preset for the capture frame. If the platform has its own presets,
           this property manage them directly. If not, this property manages the available capture settings to configure
           the capture frame from the worse configuration (low quality) to the best one (photo). To get a more sophisticated
           control, you can manage available capture settings directly instead.</remarks>
        </devnotes>
      </property>
      <property name="HasFlash" visibility="public" read="GetHasFlash" type="Boolean" file="FMX.Media.pas" line="222"/>
      <property name="HasTorch" visibility="public" read="GetHasTorch" type="Boolean" file="FMX.Media.pas" line="223"/>
      <property name="FlashMode" visibility="public" read="GetFlashMode" write="SetFlashMode" type="TFlashMode" file="FMX.Media.pas" line="224"/>
      <property name="FocusMode" visibility="public" read="GetFocusMode" write="SetFocusMode" type="TFocusMode" file="FMX.Media.pas" line="225"/>
      <property name="TorchMode" visibility="public" read="GetTorchMode" write="SetTorchMode" type="TTorchMode" file="FMX.Media.pas" line="226"/>
      <event name="OnSampleBufferReady" visibility="public" read="FOnSampleBufferReady" write="FOnSampleBufferReady" type="TSampleBufferReadyEvent" file="FMX.Media.pas" line="227"/>
    </members>
  </class>
  <class name="TCaptureDeviceManager" file="FMX.Media.pas" line="233">
    
    <members>
      <field name="FCustomDevices" type="TCaptureDeviceClassList" visibility="private" varflags="class" file="FMX.Media.pas" line="235"/>
      <field name="FCurrentManager" type="TCaptureDeviceManager" visibility="private" varflags="class" file="FMX.Media.pas" line="236"/>
      <function name="InternalGetCaptureDeviceManager" visibility="private" procflags="static" file="FMX.Media.pas" line="237">
        <parameters>
          <retval type="TCaptureDeviceManager"/>
        </parameters>
      </function>
      <procedure name="AddDevice" visibility="protected" file="FMX.Media.pas" line="239">
        <parameters>
          <parameter name="Device" type="TCaptureDevice" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="RemoveDevice" visibility="protected" file="FMX.Media.pas" line="240">
        <parameters>
          <parameter name="Device" type="TCaptureDevice" paramflags="const"/>
        </parameters>
      </procedure>
      <field name="FDevices" type="TCaptureDeviceList" visibility="private" size="4" offset="4" file="FMX.Media.pas" line="242"/>
      <field name="FDevicesByKind" type="TCaptureDeviceList" visibility="private" size="4" offset="8" file="FMX.Media.pas" line="243"/>
      <function name="GetCount" visibility="private" procflags="inline" file="FMX.Media.pas" line="244">
        <parameters>
          <retval type="Integer"/>
        </parameters>
      </function>
      <function name="GetDevice" visibility="private" procflags="inline" file="FMX.Media.pas" line="245">
        <parameters>
          <parameter name="Index" type="Integer"/>
          <retval type="TCaptureDevice"/>
        </parameters>
      </function>
      <function name="GetDefaultAudioCaptureDevice" visibility="private" file="FMX.Media.pas" line="246">
        <parameters>
          <retval type="TAudioCaptureDevice"/>
        </parameters>
      </function>
      <function name="GetDefaultVideoCaptureDevice" visibility="private" file="FMX.Media.pas" line="247">
        <parameters>
          <retval type="TVideoCaptureDevice">
            <devnotes>
               <summary>Defines a video capturing device.</summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <constructor name="Create" visibility="public" file="FMX.Media.pas" line="250">
        <devnotes>
           <summary>Default constructor.</summary>
        </devnotes>
        <parameters>
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public" file="FMX.Media.pas" line="251">
        <parameters>
        </parameters>
      </destructor>
      <procedure name="UnInitialize" visibility="public" procflags="static" file="FMX.Media.pas" line="253">
      </procedure>
      <procedure name="RegisterCaptureDeviceClass" visibility="public" procflags="class" file="FMX.Media.pas" line="255">
        <parameters>
          <parameter name="CaptureDeviceClass" type="TCaptureDeviceClass" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetDevicesByMediaType" visibility="public" file="FMX.Media.pas" line="257">
        <parameters>
          <parameter name="MediaType" type="TMediaType"/>
          <retval type="TCaptureDeviceList"/>
        </parameters>
      </function>
      <function name="GetDefaultDeviceByMediaType" visibility="public" file="FMX.Media.pas" line="258">
        <parameters>
          <parameter name="MediaType" type="TMediaType"/>
          <retval type="TCaptureDevice"/>
        </parameters>
      </function>
      <function name="GetDevicesByName" visibility="public" file="FMX.Media.pas" line="259">
        <parameters>
          <parameter name="Name" type="string" paramflags="const"/>
          <retval type="TCaptureDevice"/>
        </parameters>
      </function>
      <property name="Count" visibility="public" read="GetCount" type="Integer" file="FMX.Media.pas" line="261"/>
      <property name="DefaultAudioCaptureDevice" visibility="public" read="GetDefaultAudioCaptureDevice" type="TAudioCaptureDevice" file="FMX.Media.pas" line="262"/>
      <property name="DefaultVideoCaptureDevice" visibility="public" read="GetDefaultVideoCaptureDevice" type="TVideoCaptureDevice" file="FMX.Media.pas" line="263"/>
      <property name="Devices[Index]" visibility="public" read="GetDevice" type="TCaptureDevice" file="FMX.Media.pas" line="264"/>
      <property name="Current" visibility="public" read="InternalGetCaptureDeviceManager" type="TCaptureDeviceManager" file="FMX.Media.pas" line="266"/>
    </members>
  </class>
  <enum name="TCameraKind" file="FMX.Media.pas" line="271">
    <element value="0" name="Default" file="FMX.Media.pas" line="271"/>
    <element value="1" name="FrontCamera" file="FMX.Media.pas" line="271"/>
    <element value="2" name="BackCamera" file="FMX.Media.pas" line="271"/>
  </enum>
  <class name="TCameraComponent" file="FMX.Media.pas" line="274">
    
    <ancestor name="TFmxObject" namespace="FMX.Types">
      <interfaces>
        <implements name="IActionClient"/>
        <implements name="IFreeNotification"/>
      </interfaces>
      <methodref name="SetStyleName" visibility="private">
      </methodref>
      <methodref name="SetStored" visibility="private">
      </methodref>
      <methodref name="GetChildrenCount" visibility="private" procflags="inline">
      </methodref>
      <methodref name="GetIndexOfChild" visibility="private">
      </methodref>
      <methodref name="SetIndexOfChild" visibility="private">
      </methodref>
      <methodref name="SetIndex" visibility="private">
      </methodref>
      <methodref name="GetActionRoot" visibility="private">
      </methodref>
      <methodref name="GetActionClient" visibility="private" procflags="inline">
      </methodref>
      <methodref name="SetActionClient" visibility="private">
      </methodref>
      <methodref name="GetAction" visibility="private">
      </methodref>
      <methodref name="SetAction" visibility="private">
      </methodref>
      <methodref name="GetIndex" visibility="private">
      </methodref>
      <methodref name="Create@" visibility="class private" procflags="class constructor noself">
      </methodref>
      <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
      </methodref>
      <methodref name="CreateChildrenList" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="ResetChildrenIndicesSpan" visibility="protected">
      </methodref>
      <methodref name="ResetChildrenIndices" visibility="protected">
      </methodref>
      <methodref name="GetBackIndex" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DefineProperties" visibility="protected" procflags="override">
      </methodref>
      <methodref name="IgnoreBindingName" visibility="protected">
      </methodref>
      <methodref name="GetChildren" visibility="protected" procflags="override">
      </methodref>
      <methodref name="SetParentComponent" visibility="protected" procflags="override">
      </methodref>
      <methodref name="Notification" visibility="protected" procflags="override">
      </methodref>
      <methodref name="GetActionLinkClass" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="InitiateAction" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoActionChange" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="ActionChange" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoActionClientChanged" visibility="protected" procflags="virtual">
      </methodref>
      <propertyref name="ActionLink" visibility="protected">
      </propertyref>
      <propertyref name="Action" visibility="protected">
      </propertyref>
      <propertyref name="StyleIndexer" visibility="protected">
      </propertyref>
      <methodref name="GetParentComponent" visibility="public" procflags="override">
      </methodref>
      <methodref name="HasParent" visibility="public" procflags="override">
      </methodref>
      <methodref name="AddToResourcePool" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="RemoveFromResourcePool" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="SetParent" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoRootChanging" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoRootChanged" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="ParentChanged" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="ChangeOrder" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="ChangeChildren" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoAddObject" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoInsertObject" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoRemoveObject" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoDeleteChildren" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="SearchInto" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="FreeNotification" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="SupportsPlatformService" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetData" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="SetData" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="IgnoreIntegerValue" visibility="protected">
      </methodref>
      <methodref name="IgnoreFloatValue" visibility="protected">
      </methodref>
      <methodref name="IgnoreBooleanValue" visibility="protected">
      </methodref>
      <methodref name="IgnoreIdentValue" visibility="protected">
      </methodref>
      <methodref name="Create" visibility="public" procflags="constructor override">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor override">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="override">
      </methodref>
      <methodref name="Release" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Released" visibility="public" symflags="deprecated">
      </methodref>
      <methodref name="ObjectState" visibility="public" symflags="deprecated">
      </methodref>
      <methodref name="SetRoot" visibility="public">
      </methodref>
      <methodref name="SetDesign" visibility="public">
      </methodref>
      <methodref name="Clone" visibility="public">
      </methodref>
      <methodref name="AddObject" visibility="public">
      </methodref>
      <methodref name="InsertObject" visibility="public">
      </methodref>
      <methodref name="RemoveObject" visibility="public" procflags="overload">
      </methodref>
      <methodref name="RemoveObject" visibility="public" procflags="overload">
      </methodref>
      <methodref name="ContainsObject" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Exchange" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DeleteChildren" visibility="public">
      </methodref>
      <methodref name="IsChild" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BringChildToFront" visibility="public">
      </methodref>
      <methodref name="SendChildToBack" visibility="public">
      </methodref>
      <methodref name="BringToFront" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SendToBack" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AddObjectsToList" visibility="public">
      </methodref>
      <methodref name="Sort" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="EnumObjects" visibility="public">
      </methodref>
      <methodref name="AnimateFloat" visibility="public" symflags="deprecated">
      </methodref>
      <methodref name="AnimateFloatDelay" visibility="public" symflags="deprecated">
      </methodref>
      <methodref name="AnimateFloatWait" visibility="public" symflags="deprecated">
      </methodref>
      <methodref name="AnimateInt" visibility="public" symflags="deprecated">
      </methodref>
      <methodref name="AnimateIntWait" visibility="public" symflags="deprecated">
      </methodref>
      <methodref name="AnimateColor" visibility="public" symflags="deprecated">
      </methodref>
      <methodref name="StopPropertyAnimation" visibility="public">
      </methodref>
      <methodref name="AddFreeNotify" visibility="public">
      </methodref>
      <methodref name="RemoveFreeNotify" visibility="public">
      </methodref>
      <methodref name="FindStyleResource" visibility="public" procflags="overload virtual">
      </methodref>
      <propertyref name="Root" visibility="public">
      </propertyref>
      <propertyref name="Stored" visibility="public">
      </propertyref>
      <propertyref name="TagObject" visibility="public">
      </propertyref>
      <propertyref name="TagFloat" visibility="public">
      </propertyref>
      <propertyref name="TagString" visibility="public">
      </propertyref>
      <propertyref name="ChildrenCount" visibility="public">
      </propertyref>
      <propertyref name="Children" visibility="public">
      </propertyref>
      <propertyref name="Data" visibility="public">
      </propertyref>
      <propertyref name="Parent" visibility="public">
      </propertyref>
      <propertyref name="Index" visibility="public">
      </propertyref>
      <propertyref name="ActionClient" visibility="public">
      </propertyref>
      <propertyref name="StyleName" visibility="published">
      </propertyref>
      <ancestor name="TComponent" namespace="System.Classes">
        <interfaces>
          <implements name="IInterfaceComponentReference"/>
          <implements name="IInterface"/>
        </interfaces>
        <methodref name="GetComObject" visibility="private">
        </methodref>
        <methodref name="GetComponent" visibility="private">
        </methodref>
        <methodref name="GetComponentCount" visibility="private">
        </methodref>
        <methodref name="GetComponentIndex" visibility="private">
        </methodref>
        <methodref name="Insert" visibility="private">
        </methodref>
        <methodref name="ReadLeft" visibility="private">
        </methodref>
        <methodref name="ReadTop" visibility="private">
        </methodref>
        <methodref name="Remove" visibility="private">
        </methodref>
        <methodref name="RemoveNotification" visibility="private">
        </methodref>
        <methodref name="SetComponentIndex" visibility="private">
        </methodref>
        <methodref name="SetReference" visibility="private">
        </methodref>
        <methodref name="WriteLeft" visibility="private">
        </methodref>
        <methodref name="WriteTop" visibility="private">
        </methodref>
        <methodref name="IntfGetComponent" visibility="private">
        </methodref>
        <methodref name="DoGetDeltaStreams" visibility="private">
        </methodref>
        <methodref name="ReadDeltaStream" visibility="private">
        </methodref>
        <methodref name="ReadDeltaState" visibility="private">
        </methodref>
        <methodref name="FindSortedComponent" visibility="private">
        </methodref>
        <methodref name="AddSortedComponent" visibility="private">
        </methodref>
        <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
        </methodref>
        <methodref name="Create@" visibility="class private" procflags="class constructor noself">
        </methodref>
        <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ChangeName" visibility="protected">
        </methodref>
        <methodref name="DefineProperties" visibility="protected" procflags="override">
        </methodref>
        <methodref name="GetChildren" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetOwner" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Loaded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Notification" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ReadState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CanObserve" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetObservers" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetAncestor" visibility="protected">
        </methodref>
        <methodref name="SetDesigning" visibility="protected">
        </methodref>
        <methodref name="SetInline" visibility="protected">
        </methodref>
        <methodref name="SetDesignInstance" visibility="protected">
        </methodref>
        <methodref name="SetName" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updating" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updated" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
        </methodref>
        <methodref name="ValidateRename" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="WriteState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="RemoveFreeNotifications" visibility="protected">
        </methodref>
        <methodref name="QueryInterface" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="_AddRef" visibility="protected">
        </methodref>
        <methodref name="_Release" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfoCount" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfo" visibility="protected">
        </methodref>
        <methodref name="GetIDsOfNames" visibility="protected">
        </methodref>
        <methodref name="Invoke" visibility="protected">
        </methodref>
        <eventref name="OnGetDeltaStreams" visibility="protected">
        </eventref>
        <methodref name="Create" visibility="public" procflags="constructor virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor override">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="override">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndFunctionInvoke" visibility="public">
        </methodref>
        <methodref name="DestroyComponents" visibility="public">
        </methodref>
        <methodref name="Destroying" visibility="public">
        </methodref>
        <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="FindComponent" visibility="public">
        </methodref>
        <methodref name="FreeNotification" visibility="public">
        </methodref>
        <methodref name="RemoveFreeNotification" visibility="public">
        </methodref>
        <methodref name="FreeOnRelease" visibility="public">
        </methodref>
        <methodref name="GetEnumerator" visibility="public" procflags="inline">
        </methodref>
        <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="GetNamePath" visibility="public" procflags="override">
        </methodref>
        <methodref name="HasParent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="InsertComponent" visibility="public">
        </methodref>
        <methodref name="RemoveComponent" visibility="public">
        </methodref>
        <methodref name="SetSubComponent" visibility="public">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="override">
        </methodref>
        <methodref name="UpdateAction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="IsImplementorOf" visibility="public">
        </methodref>
        <methodref name="ReferenceInterface" visibility="public">
        </methodref>
        <propertyref name="ComObject" visibility="public">
        </propertyref>
        <propertyref name="Components" visibility="public">
        </propertyref>
        <propertyref name="ComponentCount" visibility="public">
        </propertyref>
        <propertyref name="ComponentIndex" visibility="public">
        </propertyref>
        <propertyref name="ComponentState" visibility="public">
        </propertyref>
        <propertyref name="ComponentStyle" visibility="public">
        </propertyref>
        <propertyref name="DesignInfo" visibility="public">
        </propertyref>
        <propertyref name="Owner" visibility="public">
        </propertyref>
        <propertyref name="VCLComObject" visibility="public">
        </propertyref>
        <propertyref name="Observers" visibility="public">
        </propertyref>
        <propertyref name="Name" visibility="published">
        </propertyref>
        <propertyref name="Tag" visibility="published">
        </propertyref>
        <ancestor name="TPersistent" namespace="System.Classes">
          <methodref name="AssignError" visibility="private">
          </methodref>
          <methodref name="AssignTo" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DefineProperties" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetOwner" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="Assign" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="GetNamePath" visibility="public" procflags="dynamic">
          </methodref>
          <ancestor name="TObject" namespace="System">
            <methodref name="Create" visibility="public" procflags="constructor">
            </methodref>
            <methodref name="Free" visibility="public">
            </methodref>
            <methodref name="DisposeOf" visibility="public" procflags="inline">
            </methodref>
            <methodref name="InitInstance" visibility="public" procflags="class">
            </methodref>
            <methodref name="CleanupInstance" visibility="public">
            </methodref>
            <methodref name="ClassType" visibility="public" procflags="inline">
            </methodref>
            <methodref name="ClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassNameIs" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassParent" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="ClassInfo" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InstanceSize" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InheritsFrom" visibility="public" procflags="class">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodName" visibility="public" procflags="class">
            </methodref>
            <methodref name="QualifiedClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="GetInterface" visibility="public">
            </methodref>
            <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
            </methodref>
            <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="UnitName" visibility="public" procflags="class">
            </methodref>
            <methodref name="UnitScope" visibility="public" procflags="class">
            </methodref>
            <methodref name="Equals" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="GetHashCode" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="ToString" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="SafeCallException" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="AfterConstruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Dispatch" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="DefaultHandler" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="NewInstance" visibility="public" procflags="class virtual">
            </methodref>
            <methodref name="FreeInstance" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor virtual">
            </methodref>
            <methodref name="GetDisposed" visibility="protected" procflags="inline">
            </methodref>
            <methodref name="CheckDisposed" visibility="protected" procflags="inline">
            </methodref>
            <propertyref name="Disposed" visibility="protected">
            </propertyref>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <field name="FOnSampleBufferReady" type="TSampleBufferReadyEvent" visibility="private" size="8" offset="128" file="FMX.Media.pas" line="276"/>
      <field name="FCameraKind" type="TCameraKind" visibility="private" size="1" offset="136" file="FMX.Media.pas" line="277"/>
      <field name="FDevice" type="TVideoCaptureDevice" visibility="private" size="4" offset="140" file="FMX.Media.pas" line="278"/>
      <field name="FActive" type="Boolean" visibility="private" size="1" offset="144" file="FMX.Media.pas" line="279"/>
      <function name="GetDevice" visibility="private" file="FMX.Media.pas" line="280">
        <parameters>
          <retval type="TVideoCaptureDevice">
            <devnotes>
               <summary>Defines a video capturing device.</summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <procedure name="SetCameraKind" visibility="private" file="FMX.Media.pas" line="281">
        <parameters>
          <parameter name="Value" type="TCameraKind" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetActive" visibility="private" file="FMX.Media.pas" line="282">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <procedure name="SetActive" visibility="private" file="FMX.Media.pas" line="283">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetFlashMode" visibility="private" file="FMX.Media.pas" line="284">
        <parameters>
          <retval type="TFlashMode"/>
        </parameters>
      </function>
      <function name="GetFocusMode" visibility="private" file="FMX.Media.pas" line="285">
        <parameters>
          <retval type="TFocusMode"/>
        </parameters>
      </function>
      <function name="GetHasFlash" visibility="private" file="FMX.Media.pas" line="286">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="GetHasTorch" visibility="private" file="FMX.Media.pas" line="287">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="GetQuality" visibility="private" file="FMX.Media.pas" line="288">
        <parameters>
          <retval type="TVideoCaptureQuality"/>
        </parameters>
      </function>
      <function name="GetTorchMode" visibility="private" file="FMX.Media.pas" line="289">
        <parameters>
          <retval type="TTorchMode"/>
        </parameters>
      </function>
      <procedure name="SetFlashMode" visibility="private" file="FMX.Media.pas" line="290">
        <parameters>
          <parameter name="Value" type="TFlashMode" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetFocusMode" visibility="private" file="FMX.Media.pas" line="291">
        <parameters>
          <parameter name="Value" type="TFocusMode" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetQuality" visibility="private" file="FMX.Media.pas" line="292">
        <parameters>
          <parameter name="Value" type="TVideoCaptureQuality" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetTorchMode" visibility="private" file="FMX.Media.pas" line="293">
        <parameters>
          <parameter name="Value" type="TTorchMode" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetCaptureSettingPriority" visibility="private" file="FMX.Media.pas" line="295">
        <devnotes>
           <summary>Sets the priority to sort the result of available frame settings.</summary>
        </devnotes>
        <parameters>
          <parameter name="APriority" type="TVideoCaptureSettingPriority" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetCaptureSettingPriority" visibility="private" file="FMX.Media.pas" line="297">
        <devnotes>
           <summary>Gets the priority criteria to sort the result of available frame settings.</summary>
        </devnotes>
        <parameters>
          <retval type="TVideoCaptureSettingPriority">
            <devnotes>
               <summary>Enumerates the priorities to sort the video capture settings of a
               camera.</summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <procedure name="InternalSetCaptureSetting" visibility="private" file="FMX.Media.pas" line="298">
        <parameters>
          <parameter name="ASetting" type="TVideoCaptureSetting" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DoStart" visibility="protected" file="FMX.Media.pas" line="300">
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <procedure name="DoStop" visibility="protected" file="FMX.Media.pas" line="301">
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <procedure name="DoSampleBufferReady" visibility="protected" file="FMX.Media.pas" line="302">
        <parameters>
          <parameter name="Sender" type="TObject"/>
          <parameter name="ATime" type="TMediaTime" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <property name="Device" visibility="protected" read="GetDevice" type="TVideoCaptureDevice" file="FMX.Media.pas" line="303"><devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></property>
      <constructor name="Create" visibility="public" file="FMX.Media.pas" line="305">
        <parameters>
          <parameter name="AOwner" type="TComponent"/>
        </parameters>
      <devnotes><summary>
Allocates memory and constructs a safely initialized instance of a component.
Allocates memory and constructs a safely initialized instance of a component.
FMX.Media.TCameraComponent.Create inherits from System.Classes.TComponent.Create. All content below this line refers to System.Classes.TComponent.Create.
Allocates memory and constructs a safely initialized instance of a component.
All objects have a Create method that constructs the object. TComponent redefines Create so that, for components, Create also:

Establishes the relationship of a component and its Owner, as indicated by the AOwner parameter.
Sets the ComponentStyle property to csInheritable, meaning that the component can be inherited by a descendent form type.
It is not necessary to explicitly create components added in the Form Designer. These components are created automatically when the application is run, and they are destroyed when the application is closed.
For components created programmatically, that is, not created in the Form Designer, call Create and pass in an owner component as the AOwner parameter. The owner disposes of the component when it is destroyed. If the component is not owned, then use Free when it needs to be destroyed.

Tip:  When passing in Self as the Owner parameter, consider what Self references. If a component creates another component in one of its methods, then Self refers to the first component and not the component being created, which is then owned by the first component.
Note:  The TComponent constructor is virtual in part to allow polymorphic instantiation of class references. This is critical to the streaming system and to the Form Designer. Do not forget to use the override directive when declaring a new component's Create constructor.</summary></devnotes></constructor>
      <destructor name="Destroy" visibility="public" file="FMX.Media.pas" line="306">
        <parameters>
        </parameters>
      <devnotes><summary>
Disposes of the component and its owned components.
Disposes of the component and its owned components.
FMX.Media.TCameraComponent.Destroy inherits from System.Classes.TComponent.Destroy. All content below this line refers to System.Classes.TComponent.Destroy.
Disposes of the component and its owned components.
Do not call Destroy directly. Call Free instead. Free verifies that the component is not nil, and only then calls Destroy.
Never explicitly free a component in one of its own event handlers, nor free a component from the event handler of a component that it owns or contains.
To destroy a form, call its Release method. Release waits for all the form's event handlers and the event handlers of the form's components to finish executing before destroying the form.

Note: A form owns all the controls and nonvisual components that are placed on it in design mode. When it is freed, all of these components are automatically freed as well. By default, all forms are owned by the global Application object. When an application terminates, it frees the global Application object, which frees all forms. For objects that are not components, and for components created with a nil owner, be sure to call Free after finishing with the object; otherwise the memory allocated for the object will be lost until the application terminates.</summary></devnotes></destructor>
      <procedure name="SampleBufferToBitmap" visibility="public" file="FMX.Media.pas" line="307">
        <parameters>
          <parameter name="ABitmap" type="TBitmap" paramflags="const"/>
          <parameter name="ASetSize" type="Boolean" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Displays the captured data on a bitmap. 
The SampleBufferToBitmap method displays the captured video data on a bitmap.

The ABitmap parameter is the bitmap where the image is displayed.
The ASetSize parameter specifies whether the video samples are resized to fit the current size of ABitmap, or whether ABitmap is resized to the windows sizes.</summary></devnotes></procedure>
      <function name="GetCaptureSetting" visibility="public" file="FMX.Media.pas" line="309">
        <devnotes><summary>
Getter of CaptureSetting.
</summary></devnotes>
        <parameters>
          <retval type="TVideoCaptureSetting">
            <devnotes>
               <summary>Record that stores information of one camera frame configuration</summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <function name="SetCaptureSetting" visibility="public" file="FMX.Media.pas" line="311">
        <devnotes><summary>
Setter of CaptureSetting.
</summary></devnotes>
        <parameters>
          <parameter name="ASetting" type="TVideoCaptureSetting" paramflags="const"/>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="GetDefaultCanvasCaptureSettings" visibility="public" file="FMX.Media.pas" line="314">
        <devnotes><summary>
It returns the available capture settings.

Note: The returning array is sorted with the CaptureSettingPriority criteria.</summary></devnotes>
        <parameters>
          <retval type="TArray&lt;FMX.Media.TVideoCaptureSetting&gt;"/>
        </parameters>
      </function>
      <function name="GetAvailableCaptureSettings" visibility="public" file="FMX.Media.pas" line="317">
        <devnotes><summary>
Returns an array of available video capture settings.
</summary></devnotes>
        <parameters>
          <parameter name="ACanvasClass" type="TCanvasClass" paramflags="const"/>
          <retval type="TArray&lt;FMX.Media.TVideoCaptureSetting&gt;"/>
        </parameters>
      </function>
      <property name="AvailableCaptureSettings" visibility="public" read="GetDefaultCanvasCaptureSettings" type="TArray&lt;FMX.Media.TVideoCaptureSetting&gt;" file="FMX.Media.pas" line="321">
        <devnotes><summary>
Array with the available capture settings.
You can use CaptureSettingPriority to set the criterion to sort the Array.
Use the CaptureSetting property to set the capture data resolution.
See the Quality property for further details.
</summary></devnotes>
      </property>
      <property name="CaptureSetting" visibility="public" read="GetCaptureSetting" write="InternalSetCaptureSetting" type="TVideoCaptureSetting" file="FMX.Media.pas" line="323">
        <devnotes><summary>
Current frame capture configuration.
Use the CaptureSetting property to set the capture data resolution from the available ones.
See the Quality property for further details.
</summary></devnotes>
      </property>
      <property name="CaptureSettingPriority" visibility="public" read="GetCaptureSettingPriority" write="SetCaptureSettingPriority" type="TVideoCaptureSettingPriority" file="FMX.Media.pas" line="325">
        <devnotes><summary>
Priority criterion for sorting the result of the available frame settings.
See the Quality property for further details.
</summary></devnotes>
      </property>
      <property name="Quality" visibility="public" read="GetQuality" write="SetQuality" type="TVideoCaptureQuality" file="FMX.Media.pas" line="326"><devnotes><summary>
States the quality of the video capture. 
The Quality property of type TVideoCaptureQuality can take one of the following values:



Value

Meaning



PhotoQuality



The captured data has high-resolution photo quality.




HighQuality



The captured data has high resolution (depending on the device). 




MediumQuality



The captured data has medium resolution (depending on the device). 




LowQuality



The captured data has low resolution (depending on the device).




CaptureSettings



This option allows you to set a customized capture data resolution. 


By default, Quality is set to CaptureSettings and it uses the best available camera quality (best resolution and best frame rate) prioritizing first the Resolution.
For example, to change the Quality of the CameraComponent1 TCameraComponent to LowQuality, you can use the following line:


Delphi: 

CameraComponent1.Quality := TVideoCaptureQuality.LowQuality;



C++: 

CameraComponent1-&gt;Quality = TVideoCaptureQuality::LowQuality;


Setting a Custom Quality Capture Setting
By setting the Quality to TVideoCaptureQuality.CaptureSettings you can set a customized capture data resolution:

Use the AvailableCaptureSettings property to see the Array with the different supported configurations.
You can use CaptureSettingPriority to set the criterion to sort the Array of the AvailableCaptureSettings to prioritize Resolution or FrameRate when sorting the Array. See TVideoCaptureSettingPriority for further information.
Use the CaptureSetting property to set the capture data resolution from the available ones.
To set the best available capture settings prioritizing the frame rate, you could for example use the following:


Delphi: 

procedure TForm1.SetMaxFrameRateClick(Sender: TObject);
var
  LSettings: TArray&lt;TVideoCaptureSetting&gt;;
begin
  CameraComponent1.CaptureSettingPriority := TVideoCaptureSettingPriority.FrameRate;
  LSettings := CameraComponent1.AvailableCaptureSettings;
  CameraComponent1.CaptureSetting := LSettings[0];
end;



C++: 

void __fastcall TForm1::SetMaxFrameRateClick(TObject *Sender)
{
	DynamicArray&lt;TVideoCaptureSetting&gt; LSettings;
	CameraComponent1-&gt;CaptureSettingPriority = TVideoCaptureSettingPriority::FrameRate;
	LSettings = CameraComponent1-&gt;AvailableCaptureSettings;
	CameraComponent1-&gt;CaptureSetting = LSettings[0];
}


Note: When you set a specific CaptureSetting, the Quality property is automatically set to TVideoCaptureQuality.CaptureSettings.</summary></devnotes></property>
      <property name="HasFlash" visibility="public" read="GetHasFlash" type="Boolean" file="FMX.Media.pas" line="327"><devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></property>
      <property name="HasTorch" visibility="public" read="GetHasTorch" type="Boolean" file="FMX.Media.pas" line="328"><devnotes><summary>
Indicates whether the camera device has torch. 
Use the HasTorch property to see whether the camera device has torch.
</summary></devnotes></property>
      <property name="FlashMode" visibility="public" read="GetFlashMode" write="SetFlashMode" type="TFlashMode" file="FMX.Media.pas" line="329"><devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></property>
      <property name="FocusMode" visibility="public" read="GetFocusMode" write="SetFocusMode" type="TFocusMode" file="FMX.Media.pas" line="330"><devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></property>
      <property name="TorchMode" visibility="public" read="GetTorchMode" write="SetTorchMode" type="TTorchMode" file="FMX.Media.pas" line="331"><devnotes><summary>
Selects the different modes for the torch: on, off, or auto. 
The TorchMode property can take one of three values enumerated by TTorchMode: ModeOff, ModeOn, and ModeAuto.
For example, to turn on the torch of the CameraComponent1 TCameraComponent, you can use the following line:


Delphi: 

CameraComponent.TorchMode := TTorchMode.ModeOn;



C++: 

CameraComponent-&gt;TorchMode = TTorchMode::ModeOn;


Use the HasTorch property to see whether the camera device has a torch.
</summary></devnotes></property>
      <property name="Active" visibility="published" read="GetActive" write="SetActive" type="Boolean" default="0" file="FMX.Media.pas" line="333"><devnotes><summary>
Enables and disables the camera device. 
Set the Active property to True to enable the camera device, and set Active to False to disable it.
</summary></devnotes></property>
      <property name="Kind" visibility="published" read="FCameraKind" write="SetCameraKind" type="TCameraKind" default="0" file="FMX.Media.pas" line="334"><devnotes><summary>
Selects the kind of camera device: default, front, or back camera. 
The Kind property can take one of three values enumerated by TCameraKind: Default, FrontCamera, and BackCamera.
For example, to select the back camera of the CameraComponent1 TCameraComponent you can use the following line:


Delphi: 

CameraComponent1.Kind := TCameraKind.BackCamera;



C++: 

CameraComponent1-&gt;Kind = TCameraKind::BackCamera;

</summary></devnotes></property>
      <event name="OnSampleBufferReady" visibility="published" read="FOnSampleBufferReady" write="FOnSampleBufferReady" type="TSampleBufferReadyEvent" file="FMX.Media.pas" line="335"><devnotes><summary>
Occurs when the sample buffer is ready. 
Write an event handler for the OnSampleBufferReady event to specify what happens when the sample buffer is ready.
</summary></devnotes></event>
    </members>
  </class>
  <class name="EMediaException" file="FMX.Media.pas" line="340">
    
  </class>
  <enum name="TMediaState" file="FMX.Media.pas" line="342">
    <element value="0" name="Unavailable" file="FMX.Media.pas" line="342"/>
    <element value="1" name="Playing" file="FMX.Media.pas" line="342"/>
    <element value="2" name="Stopped" file="FMX.Media.pas" line="342"/>
  </enum>
  <class name="TMedia" file="FMX.Media.pas" line="346">
    
    <members>
      <field name="FFileName" type="string" visibility="private" size="4" offset="4" file="FMX.Media.pas" line="348"/>
      <field name="FControl" type="TMediaPlayerControl" visibility="private" size="4" offset="8" file="FMX.Media.pas" line="349"/>
      <procedure name="SetControl" visibility="private" file="FMX.Media.pas" line="350">
        <parameters>
          <parameter name="Value" type="TMediaPlayerControl" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetDuration" visibility="protected" procflags="abstract virtual" file="FMX.Media.pas" line="352">
        <parameters>
          <retval type="TMediaTime"/>
        </parameters>
      <devnotes><summary>
Getter function for the Duration property.
</summary></devnotes></function>
      <function name="GetCurrent" visibility="protected" procflags="abstract virtual" file="FMX.Media.pas" line="353">
        <parameters>
          <retval type="TMediaTime"/>
        </parameters>
      <devnotes><summary>
Getter function for the CurrentTime property.
</summary></devnotes></function>
      <procedure name="SetCurrent" visibility="protected" procflags="abstract virtual" file="FMX.Media.pas" line="354">
        <parameters>
          <parameter name="Value" type="TMediaTime" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Setter function for the CurrentTime property.
Value specifies the new value for CurrentTime.
</summary></devnotes></procedure>
      <function name="GetVideoSize" visibility="protected" procflags="abstract virtual" file="FMX.Media.pas" line="355">
        <parameters>
          <retval type="TPointF"/>
        </parameters>
      <devnotes><summary>
Getter function for the VideoSize property.
</summary></devnotes></function>
      <function name="GetMediaState" visibility="protected" procflags="abstract virtual" file="FMX.Media.pas" line="356">
        <parameters>
          <retval type="TMediaState"/>
        </parameters>
      <devnotes><summary>
Getter function for the State property.
</summary></devnotes></function>
      <function name="GetVolume" visibility="protected" procflags="abstract virtual" file="FMX.Media.pas" line="357">
        <parameters>
          <retval type="Single"/>
        </parameters>
      <devnotes><summary>
Getter function for the Volume property.
</summary></devnotes></function>
      <procedure name="SetVolume" visibility="protected" procflags="abstract virtual" file="FMX.Media.pas" line="358">
        <parameters>
          <parameter name="Value" type="Single" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Setter function for the Volume property.
Value specifies the new value of Volume.
</summary></devnotes></procedure>
      <procedure name="UpdateMediaFromControl" visibility="protected" procflags="virtual" file="FMX.Media.pas" line="359">
      <devnotes><summary>
Updates the current Media, depending on the TMediaPlayerControl associated with it.
UpdateMediaFromControl is used to keep the current Media, which has been updated after being manipulated by the TMediaPlayerControl associated with it. 
The TMediaPlayerControl associated with the current media is specified through the Control property.
</summary></devnotes></procedure>
      <procedure name="DoPlay" visibility="protected" procflags="abstract virtual" file="FMX.Media.pas" line="360">
      <devnotes><summary>
Plays the current media file.
To start playing the current media, call the Play method. 
</summary></devnotes></procedure>
      <procedure name="DoStop" visibility="protected" procflags="abstract virtual" file="FMX.Media.pas" line="361">
      <devnotes><summary>
Stops the current media from being played.
To stop playing the current media, call the Stop method. 
</summary></devnotes></procedure>
      <function name="QueryInterface" visibility="protected" procflags="abstract virtual" callconv="stdcall" file="FMX.Media.pas" line="362">
        <parameters>
          <parameter name="IID" type="TGUID" paramflags="const"/>
          <parameter name="Obj" paramflags="out"/>
          <retval type="HRESULT"/>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></function>
      <constructor name="Create" visibility="public" file="FMX.Media.pas" line="364">
        <parameters>
          <parameter name="AFileName" type="string" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Constructs an object and initializes its data before the object is first used.
FMX.Media.TMedia.Create inherits from System.TObject.Create. All content below this line refers to System.TObject.Create.
Constructs an object and initializes its data before the object is first used.
Create constructs an object. The purpose, size, and behavior of objects differ greatly. The Create constructor defined by TObject allocates memory but does not initialize data. 
Descendant objects usually define a constructor that creates the particular kind of object and initializes its data.

Note: If an exception escapes from a constructor, the object's destructor is called to clean up the failed instance.</summary></devnotes></constructor>
      <procedure name="Play" visibility="public" file="FMX.Media.pas" line="365">
      <devnotes><summary>
Starts the playback of the current media file.
Call the Play method to playback the current media file. To pause or stop the current media file from playing, call the Stop method.
</summary></devnotes></procedure>
      <procedure name="Stop" visibility="public" file="FMX.Media.pas" line="366">
      <devnotes><summary>
Stops the playback of the current media file.
Call the Stop method to stop or to pause the current played media file. To play the current media file, call the Play method.
</summary></devnotes></procedure>
      <property name="Control" visibility="public" read="FControl" write="SetControl" type="TMediaPlayerControl" file="FMX.Media.pas" line="367"><devnotes><summary>
Specifies the media player control that plays the current media file.
Set Control to specify the media player control that plays the current media file.

Tip: For easy access to media files and easy playing, use the TMediaPlayer or TMediaPlayerControl visual components. Giving the name of the file to be played will automatically create the TMedia objects and set the Control to the current used media player control.</summary></devnotes></property>
      <property name="FileName" visibility="public" read="FFileName" type="string" default="0" file="FMX.Media.pas" line="368"><devnotes><summary>
Specifies the name of the current used media file.
FileName specifies the name of the media file used to create the current TMedia object. FileName includes the path, name, and extension of the media file. 
</summary></devnotes></property>
      <property name="Duration" visibility="public" read="GetDuration" type="TMediaTime" file="FMX.Media.pas" line="369"><devnotes><summary>
Specifies the total play time of the current media file.
Duration is measured in 100ns. To obtain s, divide Duration by MediaTimeScale.
</summary></devnotes></property>
      <property name="CurrentTime" visibility="public" read="GetCurrent" write="SetCurrent" type="TMediaTime" file="FMX.Media.pas" line="370"><devnotes><summary>
Specifies the current playback position.
CurrentTime is measured in 100ns. To obtain s, divide Duration by MediaTimeScale.
Set CurrentTime to control the current position to be played.
</summary></devnotes></property>
      <property name="VideoSize" visibility="public" read="GetVideoSize" type="TPointF" file="FMX.Media.pas" line="371"><devnotes><summary>
Specifies the resolution of the current video file.
VideoSize specifies the native width and height of the current media file, in pixels. 
VideoSize is a TPointF. The X coordinate of the point represents the width of the window, and the Y coordinate of the point represents the height of the window. If the media file is audio only and does not have a window to be displayed, VideoSize is (0,0).
</summary></devnotes></property>
      <property name="Volume" visibility="public" read="GetVolume" write="SetVolume" type="Single" default="0" file="FMX.Media.pas" line="373"><devnotes><summary>
Specifies the audio volume of the current media file.
Volume takes values in the range from 0 through 1. If Volume is 1, then the media file is played at the maximum native volume. If Volume is 0, then the media file is mute.
</summary></devnotes></property>
      <property name="State" visibility="public" read="GetMediaState" type="TMediaState" file="FMX.Media.pas" line="374"><devnotes><summary>
Specifies whether the current media file is playing or is stopped.
If the current media file is not assigned or supported, then State is set to Unavailable.
If the current media file is playing, then State is set to Playing, otherwise it is set to Stopped.
</summary></devnotes></property>
    </members>
  <devnotes><summary>
Base class to access media files.
TMedia is an abstract class that defines an interface for media files. Platform-specific subclasses provide concrete implementations for Windows and OS X platforms.
TMedia exposes media file properties such as file name, size, dimension, state, or duration. 
The supported media files formats are the native formats for each platform:

For Windows:
Audio formats: .wma, .mp3, .wav
Video formats: .avi, .wmv
For OS X:
Audio formats: .mp3
Video formats: .mov, .m4v, .mp4
Using TMediaCodecManager, it is possible to register custom media codecs to extend the audio/video feature support.
For easy access to media files, use the TMediaPlayer and TMediaPlayerControl components.
</summary></devnotes></class>
  <class name="TCustomMediaCodec" file="FMX.Media.pas" line="379">
    
    <members>
      <function name="CreateFromFile" visibility="public" procflags="abstract virtual" file="FMX.Media.pas" line="381">
        <parameters>
          <parameter name="AFileName" type="string" paramflags="const"/>
          <retval type="TMedia"/>
        </parameters>
      <devnotes><summary>
Creates a TMedia from a specified file.
The AFileName parameter specifies the name of the file from which the TMedia is created.
Do not use CreateFromFile explicitly in applications. Use TMediaCodecManager to access and manage media codecs.
</summary></devnotes></function>
    </members>
  <devnotes><summary>
Base class for media codecs.
TCustomMediaCodec is an abstract class that defines a media codec.
Use TMediaCodecManager to register custom media codecs to extend FireMonkey audio/video features. 
</summary></devnotes></class>
  <classref name="TCustomMediaCodecClass" ref="TCustomMediaCodec" file="FMX.Media.pas" line="383"/>
  <class name="EMediaCodecManagerException" file="FMX.Media.pas" line="387">
    
  </class>
  <class name="TMediaCodecManager" sealed="true" file="FMX.Media.pas" line="389">
    
    <members>
      <struct name="TMediaCodecClassDescriptor" visibility="public" alias="FMX.Media.TMediaCodecClassDescriptor" size="16" file="FMX.Media.pas" line="391">
        <field name="Extension" type="string" visibility="public" size="4" offset="0" file="FMX.Media.pas" line="392"/>
        <field name="Description" type="string" visibility="public" size="4" offset="4" file="FMX.Media.pas" line="393"/>
        <field name="MediaType" type="TMediaType" visibility="public" size="1" offset="8" file="FMX.Media.pas" line="394"/>
        <field name="MediaCodecClass" type="TCustomMediaCodecClass" visibility="public" size="4" offset="12" file="FMX.Media.pas" line="395"/>
      </struct>
      <enum name="TMediaCodecDescriptorField" visibility="class private" alias="FMX.Media.TMediaCodecDescriptorField" file="FMX.Media.pas" line="398">
        <element value="0" name="Extension" file="FMX.Media.pas" line="398"/>
        <element value="1" name="Description" file="FMX.Media.pas" line="398"/>
      </enum>
      <field name="FMediaCodecClassDescriptors" type="TList&lt;FMX.Media.TMediaCodecManager.TMediaCodecClassDescriptor&gt;" visibility="class private" varflags="class" file="FMX.Media.pas" line="400"/>
      <function name="FindMediaCodecDescriptor" visibility="class private" procflags="class" file="FMX.Media.pas" line="401">
        <parameters>
          <parameter name="Name" type="string" paramflags="const"/>
          <parameter name="Field" type="TMediaCodecManager.TMediaCodecDescriptorField"/>
          <retval type="TMediaCodecManager.TMediaCodecClassDescriptor"/>
        </parameters>
      </function>
      <procedure name="UnInitialize" visibility="public" procflags="class" file="FMX.Media.pas" line="405">
      </procedure>
      <procedure name="RegisterMediaCodecClass" visibility="public" procflags="class overload" file="FMX.Media.pas" line="407">
        <parameters>
          <parameter name="Extension" type="string" paramflags="const"/>
          <parameter name="Description" type="string" paramflags="const"/>
          <parameter name="MediaType" type="TMediaType"/>
          <parameter name="MediaCodecClass" type="TCustomMediaCodecClass"/>
        </parameters>
      </procedure>
      <function name="GetFileTypes" visibility="public" procflags="class" file="FMX.Media.pas" line="409">
        <parameters>
          <retval type="string"/>
        </parameters>
      </function>
      <function name="GetFileTypesByType" visibility="public" procflags="class" file="FMX.Media.pas" line="410">
        <parameters>
          <parameter name="MediaType" type="TMediaType"/>
          <retval type="string"/>
        </parameters>
      </function>
      <function name="GetFilterString" visibility="public" procflags="class" file="FMX.Media.pas" line="411">
        <parameters>
          <retval type="string"/>
        </parameters>
      </function>
      <function name="GetFilterStringByType" visibility="public" procflags="class" file="FMX.Media.pas" line="412">
        <parameters>
          <parameter name="MediaType" type="TMediaType"/>
          <retval type="string"/>
        </parameters>
      </function>
      <function name="IsCodedExists" visibility="public" procflags="class overload" file="FMX.Media.pas" line="413">
        <parameters>
          <parameter name="AFileName" type="string" paramflags="const"/>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="CreateFromFile" visibility="public" procflags="class" file="FMX.Media.pas" line="414">
        <parameters>
          <parameter name="AFileName" type="string" paramflags="const"/>
          <retval type="TMedia"/>
        </parameters>
      </function>
    </members>
  </class>
  <class name="TMediaPlayer" file="FMX.Media.pas" line="419">
    
    <members>
      <field name="FMedia" type="TMedia" visibility="private" size="4" offset="128" file="FMX.Media.pas" line="421"/>
      <field name="FFileName" type="string" visibility="private" size="4" offset="132" file="FMX.Media.pas" line="422"/>
      <field name="FControl" type="TMediaPlayerControl" visibility="private" size="4" offset="136" file="FMX.Media.pas" line="423"/>
      <procedure name="SetControl" visibility="private" file="FMX.Media.pas" line="424">
        <parameters>
          <parameter name="Value" type="TMediaPlayerControl" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetFileName" visibility="private" file="FMX.Media.pas" line="425">
        <parameters>
          <parameter name="Value" type="string" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetMediaState" visibility="private" file="FMX.Media.pas" line="426">
        <parameters>
          <retval type="TMediaState"/>
        </parameters>
      </function>
      <function name="GetCurrent" visibility="private" file="FMX.Media.pas" line="427">
        <parameters>
          <retval type="TMediaTime"/>
        </parameters>
      </function>
      <function name="GetDuration" visibility="private" file="FMX.Media.pas" line="428">
        <parameters>
          <retval type="TMediaTime"/>
        </parameters>
      </function>
      <function name="GetMedia" visibility="private" file="FMX.Media.pas" line="429">
        <parameters>
          <retval type="TMedia"/>
        </parameters>
      </function>
      <function name="GetVideoSize" visibility="private" file="FMX.Media.pas" line="430">
        <parameters>
          <retval type="TPointF"/>
        </parameters>
      </function>
      <function name="GetVolume" visibility="private" file="FMX.Media.pas" line="431">
        <parameters>
          <retval type="Single"/>
        </parameters>
      </function>
      <procedure name="SetCurrent" visibility="private" file="FMX.Media.pas" line="432">
        <parameters>
          <parameter name="Value" type="TMediaTime" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="SetVolume" visibility="private" file="FMX.Media.pas" line="433">
        <parameters>
          <parameter name="Value" type="Single" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="QueryInterface" visibility="protected" procflags="override" callconv="stdcall" file="FMX.Media.pas" line="435">
        <parameters>
          <parameter name="IID" type="TGUID" paramflags="const"/>
          <parameter name="Obj" paramflags="out"/>
          <retval type="HRESULT"/>
        </parameters>
      <devnotes><summary>
Returns a reference to a specified interface if the current component supports that interface.
FMX.Media.TMediaPlayer.QueryInterface inherits from System.Classes.TComponent.QueryInterface. All content below this line refers to System.Classes.TComponent.QueryInterface.
Returns a reference to a specified interface if the current component supports that interface.
QueryInterface checks whether the component supports the interface specified by IID and, if so, returns a reference to that interface as the Obj parameter. If the component does not support the interface, the Obj parameter returns nil (Delphi) or NULL (C++).
QueryInterface returns the S_OK execution code on success. HResult type 
defines the following execution codes: S_OK, S_FALSE, E_NOINTERFACE, E_UNEXPECTED, and E_NOTIMPL.

Note: For components that act as COM object wrappers, QueryInterface calls the QueryInterface method of the internal COM object.</summary></devnotes></function>
      <constructor name="Create" visibility="public" file="FMX.Media.pas" line="437">
        <parameters>
          <parameter name="AOwner" type="TComponent"/>
        </parameters>
      <devnotes><summary>
Allocates memory and constructs a safely initialized instance of a component.
Allocates memory and constructs a safely initialized instance of a component.
FMX.Media.TMediaPlayer.Create inherits from System.Classes.TComponent.Create. All content below this line refers to System.Classes.TComponent.Create.
Allocates memory and constructs a safely initialized instance of a component.
All objects have a Create method that constructs the object. TComponent redefines Create so that, for components, Create also:

Establishes the relationship of a component and its Owner, as indicated by the AOwner parameter.
Sets the ComponentStyle property to csInheritable, meaning that the component can be inherited by a descendent form type.
It is not necessary to explicitly create components added in the Form Designer. These components are created automatically when the application is run, and they are destroyed when the application is closed.
For components created programmatically, that is, not created in the Form Designer, call Create and pass in an owner component as the AOwner parameter. The owner disposes of the component when it is destroyed. If the component is not owned, then use Free when it needs to be destroyed.

Tip:  When passing in Self as the Owner parameter, consider what Self references. If a component creates another component in one of its methods, then Self refers to the first component and not the component being created, which is then owned by the first component.
Note:  The TComponent constructor is virtual in part to allow polymorphic instantiation of class references. This is critical to the streaming system and to the Form Designer. Do not forget to use the override directive when declaring a new component's Create constructor.</summary></devnotes></constructor>
      <destructor name="Destroy" visibility="public" file="FMX.Media.pas" line="438">
        <parameters>
        </parameters>
      <devnotes><summary>
Disposes of the component and its owned components.
Disposes of the component and its owned components.
FMX.Media.TMediaPlayer.Destroy inherits from System.Classes.TComponent.Destroy. All content below this line refers to System.Classes.TComponent.Destroy.
Disposes of the component and its owned components.
Do not call Destroy directly. Call Free instead. Free verifies that the component is not nil, and only then calls Destroy.
Never explicitly free a component in one of its own event handlers, nor free a component from the event handler of a component that it owns or contains.
To destroy a form, call its Release method. Release waits for all the form's event handlers and the event handlers of the form's components to finish executing before destroying the form.

Note: A form owns all the controls and nonvisual components that are placed on it in design mode. When it is freed, all of these components are automatically freed as well. By default, all forms are owned by the global Application object. When an application terminates, it frees the global Application object, which frees all forms. For objects that are not components, and for components created with a nil owner, be sure to call Free after finishing with the object; otherwise the memory allocated for the object will be lost until the application terminates.</summary></devnotes></destructor>
      <procedure name="Play" visibility="public" file="FMX.Media.pas" line="439">
      <devnotes><summary>
Starts playing the current Media.
Call the Play method to play the current Media. If Media is not assigned, Play does nothing. 
To stop or pause the current media file from playing, call the Stop method.
</summary></devnotes></procedure>
      <procedure name="Stop" visibility="public" file="FMX.Media.pas" line="440">
      <devnotes><summary>
Stops or pauses playing the current Media.
Call Stop to stop or to pause the current Media. If Media is not assigned, Stop does nothing. 
To start playing the current media file, call the Play method.
</summary></devnotes></procedure>
      <procedure name="Clear" visibility="public" file="FMX.Media.pas" line="441">
      <devnotes><summary>
Clears the current media player.
Call Clear to clear the current Media attached to the media player. Clear also empties the FileName property.
</summary></devnotes></procedure>
      <property name="Media" visibility="public" read="GetMedia" type="TMedia" file="FMX.Media.pas" line="442"><devnotes><summary>
Specifies the current TMedia attached to this media player.
Call the Play and Stop methods to start playing, or to stop or pause the current Media file, respectively.
Media is assigned and created when the FileName property is set.
TMediaPlayer exposes the Media properties through the following properties: Duration, VideoSize, CurrentTime, Volume, and  State. 
To empty the current Media attached to the media player, call the Clear method.
If Media type is audio, then calling Play will start playing the audio file. If Media type is video, then calling Play will just play the audio component of the specified video file. To display a video file, use a TMediaPlayerControl, and link the current TMediaPlayer to it by setting the MediaPlayer property of the TMediaPlayerControl.
</summary></devnotes></property>
      <property name="Duration" visibility="public" read="GetDuration" type="TMediaTime" file="FMX.Media.pas" line="443"><devnotes><summary>
Specifies the total play time of the current media file attached to the media player.
Duration is measured in 100ns. To obtain s, divide Duration by MediaTimeScale.
</summary></devnotes></property>
      <property name="CurrentTime" visibility="public" read="GetCurrent" write="SetCurrent" type="TMediaTime" file="FMX.Media.pas" line="444"><devnotes><summary>
Specifies the current playback position.
CurrentTime is measured in 100ns. To obtain s, divide CurrentTime by MediaTimeScale.
Set CurrentTime to control the current position to be played.
</summary></devnotes></property>
      <property name="VideoSize" visibility="public" read="GetVideoSize" type="TPointF" file="FMX.Media.pas" line="445"><devnotes><summary>
Specifies the resolution of the current video file.
VideoSize specifies the native width and height of the current media file, in pixels. 
VideoSize is a TPointF. The X coordinate of the point represents the width of the window, and the Y coordinate of the point represents the height of the window. If the media file is audio only and does not have a window to be displayed, or if no media file is attached to the media player, then VideoSize is (0,0).
</summary></devnotes></property>
      <property name="Volume" visibility="public" read="GetVolume" write="SetVolume" type="Single" default="0" file="FMX.Media.pas" line="446"><devnotes><summary>
Specifies the audio volume of the current media file.
Volume takes values in the range from 0 through 1. If Volume is 1, then the media file is played at the maximum native volume. If Volume is 0, then the media file is mute.
If there is no media file attached to the current media player, then Volume is 1.
</summary></devnotes></property>
      <property name="State" visibility="public" read="GetMediaState" type="TMediaState" file="FMX.Media.pas" line="447"><devnotes><summary>
Specifies whether the current attached Media is playing or is stopped.
If the current media file is not assigned or supported, then State is set to Unavailable.
If the current media file is playing, then State is set to Playing, otherwise it is set to Stopped.
</summary></devnotes></property>
      <property name="FileName" visibility="published" read="FFileName" write="SetFileName" type="string" default="0" file="FMX.Media.pas" line="449"><devnotes><summary>
Specifies the media file name played by the current media player.
Media is assigned and created when the FileName property is set. The file name must include the path of the file, so it can be localized on the memory, and the extension. 
To empty the current Media attached to the media player, call the Clear method.
</summary></devnotes></property>
    </members>
  <devnotes><summary>
Nonvisual component for media file playback.
Use a TMediaPlayer component for easy access to media files. 
The currently accessed media file is specified through the Media property.
To specify the media file to be played by the current TMediaPlayer, set the FileName property. The file name must include the path of the file, so it can be localized on the memory, and the extension. 
Call the Play and Stop methods to start playing a media file, or to stop or pause a running media file. The current position is specified through the CurrentTime property. TMediaPlayer also exposes media file properties such as Duration, VideoSize, Volume or State.
TMediaPlayer can play back audio files and the audio component of a video file. To display a video file, use a TMediaPlayerControl component.  For more information, see Audio-Video in FireMonkey.

Note: In order to play an audio file using TMediaPlayer, use the appropriate format:
.wav on Windows
.caf on iOS and OS X
.3GP on Android</summary></devnotes></class>
  <class name="TMediaPlayerControl" file="FMX.Media.pas" line="454">
    
    <members>
      <field name="FMediaPlayer" type="TMediaPlayer" visibility="private" size="4" offset="904" file="FMX.Media.pas" line="456"/>
      <field name="FSavedParent" type="TFmxObject" visibility="private" size="4" offset="908" file="FMX.Media.pas" line="457">
        <attributes>
          <attribute name="TObject"/>
        </attributes>
      </field>
      <procedure name="SetMediaPlayer" visibility="private" file="FMX.Media.pas" line="458">
        <parameters>
          <parameter name="Value" type="TMediaPlayer" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="UpdateMedia" visibility="private" file="FMX.Media.pas" line="459">
      </procedure>
      <procedure name="FormHandleAfterCreated" visibility="private" file="FMX.Media.pas" line="460">
        <parameters>
          <parameter name="Sender" type="TObject" paramflags="const"/>
          <parameter name="Msg" type="TMessageBase" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="FormHandleBeforeDestroyed" visibility="private" file="FMX.Media.pas" line="461">
        <parameters>
          <parameter name="Sender" type="TObject" paramflags="const"/>
          <parameter name="Msg" type="TMessageBase" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="AncestorVisibleChanged" visibility="protected" procflags="override" file="FMX.Media.pas" line="463">
        <parameters>
          <parameter name="Visible" type="Boolean" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Notifies its child controls that the visibility of an ancestor of your control has changed to Visible.
FMX.Media.TMediaPlayerControl.AncestorVisibleChanged inherits from FMX.Controls.TControl.AncestorVisibleChanged. All content below this line refers to FMX.Controls.TControl.AncestorVisibleChanged.
Notifies its child controls that the visibility of an ancestor of your control has changed to Visible.

 See Also
FMX.Controls.TControl.AncestorParentChanged
FMX.Controls.TControl.ChildrenAlignChanged
FMX.Controls.TControl.ClipChildrenChanged
FMX.Controls.TControl.EffectEnabledChanged
FMX.Controls.TControl.EnabledChanged
FMX.Controls.TControl.HandleSizeChanged
FMX.Controls.TControl.HitTestChanged
FMX.Controls.TControl.PaddingChanged
FMX.Controls.TControl.ParentChanged

</summary></devnotes></procedure>
      <procedure name="ParentChanged" visibility="protected" procflags="override" file="FMX.Media.pas" line="464">
      <devnotes><summary>
Executed right after the value of the Parent property changes.
FMX.Media.TMediaPlayerControl.ParentChanged inherits from FMX.Controls.TControl.ParentChanged. All content below this line refers to FMX.Controls.TControl.ParentChanged.
Executed right after the value of the Parent property changes.
The control does not execute ParentChanged if you assign Parent the same value that it already has.

 See Also
FMX.Controls.TControl.AncestorParentChanged
FMX.Controls.TControl.ClipChildrenChanged
FMX.Controls.TControl.EffectEnabledChanged
FMX.Controls.TControl.EnabledChanged
FMX.Controls.TControl.HandleSizeChanged
FMX.Controls.TControl.HitTestChanged
FMX.Controls.TControl.PaddingChanged
FMX.Controls.TControl.VisibleChanged
FMX.Controls.TControl.AncestorVisibleChanged
FMX.Controls.TControl.ChildrenAlignChanged

</summary></devnotes></procedure>
      <procedure name="DoAbsoluteChanged" visibility="protected" procflags="override" file="FMX.Media.pas" line="465">
      <devnotes><summary>


Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <procedure name="Move" visibility="protected" procflags="override" file="FMX.Media.pas" line="466">
      <devnotes><summary>
Updates the currently manipulated TMedia. 
Move extends the behavior inherited from TControl to update the TMedia attached to the TMediaPlayer with which the current TMediaPlayerControl is linked.
</summary></devnotes></procedure>
      <procedure name="Resize" visibility="protected" procflags="override" file="FMX.Media.pas" line="467">
      <devnotes><summary>
OnResize event dispatcher.
Resize extends the behavior inherited from TControl to update the TMedia attached to the TMediaPlayer with which the current TMediaPlayerControl is linked.
</summary></devnotes></procedure>
      <procedure name="Paint" visibility="protected" procflags="override" file="FMX.Media.pas" line="468">
      <devnotes><summary>
Renders the control's surface. 
FMX.Media.TMediaPlayerControl.Paint inherits from FMX.Controls.TControl.Paint. All content below this line refers to FMX.Controls.TControl.Paint.
Renders the control's surface. 
The Paint method is called by DoPaint when a control is being painted by the PaintTo method. Before DoPaint, Painting is called. AfterPaint is called immediately after. 
FireMonkey internally calls Paint to paint the control when the window is being painted. You must not call Paint explicitly.
The base class TControl implements an empty Paint. The descendants of TControl override Paint to provide specific rendering of the respective controls.
For example, Paint methods in classes of the FMX.Objects unit draw and fill shapes using the properties defined in these classes. See the descriptions of these classes to find the properties of the respective shapes. 
</summary></devnotes></procedure>
      <procedure name="Show" visibility="protected" procflags="override" file="FMX.Media.pas" line="469">
      <devnotes><summary>


Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <procedure name="Hide" visibility="protected" procflags="override" file="FMX.Media.pas" line="470">
      <devnotes><summary>


Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <procedure name="Notification" visibility="protected" procflags="override" file="FMX.Media.pas" line="471">
        <parameters>
          <parameter name="AComponent" type="TComponent"/>
          <parameter name="Operation" type="TOperation"/>
        </parameters>
      <devnotes><summary>




Forwards notification messages to all owned components.
FMX.Media.TMediaPlayerControl.Notification inherits from System.Classes.TComponent.Notification. All content below this line refers to System.Classes.TComponent.Notification.
Forwards notification messages to all owned components.
Do not call the Notification method in an application. Notification is called automatically when the component specified by AComponent is about to be inserted or removed, as specified by Operation. By default, components pass along the notification to their owned components, if any.
A component can, if needed, act on the notification that a component is being inserted or removed. For example, if a component has object fields or properties that contain references to other components, it can check the notifications of component removals and invalidate those references as needed.

Note: Notification is not called for components that are freed implicitly (because their Owner is freed).</summary></devnotes></procedure>
      <constructor name="Create" visibility="public" file="FMX.Media.pas" line="473">
        <parameters>
          <parameter name="AOwner" type="TComponent"/>
        </parameters>
      <devnotes><summary>
Allocates memory and constructs a safely initialized instance of a component.
Allocates memory and constructs a safely initialized instance of a component.
Allocates memory and constructs a safely initialized instance of a component.
FMX.Media.TMediaPlayerControl.Create inherits from System.Classes.TComponent.Create. All content below this line refers to System.Classes.TComponent.Create.
Allocates memory and constructs a safely initialized instance of a component.
All objects have a Create method that constructs the object. TComponent redefines Create so that, for components, Create also:

Establishes the relationship of a component and its Owner, as indicated by the AOwner parameter.
Sets the ComponentStyle property to csInheritable, meaning that the component can be inherited by a descendent form type.
It is not necessary to explicitly create components added in the Form Designer. These components are created automatically when the application is run, and they are destroyed when the application is closed.
For components created programmatically, that is, not created in the Form Designer, call Create and pass in an owner component as the AOwner parameter. The owner disposes of the component when it is destroyed. If the component is not owned, then use Free when it needs to be destroyed.

Tip:  When passing in Self as the Owner parameter, consider what Self references. If a component creates another component in one of its methods, then Self refers to the first component and not the component being created, which is then owned by the first component.
Note:  The TComponent constructor is virtual in part to allow polymorphic instantiation of class references. This is critical to the streaming system and to the Form Designer. Do not forget to use the override directive when declaring a new component's Create constructor.</summary></devnotes></constructor>
      <destructor name="Destroy" visibility="public" file="FMX.Media.pas" line="474">
        <parameters>
        </parameters>
      <devnotes><summary>
Disposes of the component and its owned components.
Disposes of the component and its owned components.
Disposes of the component and its owned components.
FMX.Media.TMediaPlayerControl.Destroy inherits from System.Classes.TComponent.Destroy. All content below this line refers to System.Classes.TComponent.Destroy.
Disposes of the component and its owned components.
Do not call Destroy directly. Call Free instead. Free verifies that the component is not nil, and only then calls Destroy.
Never explicitly free a component in one of its own event handlers, nor free a component from the event handler of a component that it owns or contains.
To destroy a form, call its Release method. Release waits for all the form's event handlers and the event handlers of the form's components to finish executing before destroying the form.

Note: A form owns all the controls and nonvisual components that are placed on it in design mode. When it is freed, all of these components are automatically freed as well. By default, all forms are owned by the global Application object. When an application terminates, it frees the global Application object, which frees all forms. For objects that are not components, and for components created with a nil owner, be sure to call Free after finishing with the object; otherwise the memory allocated for the object will be lost until the application terminates.</summary></devnotes></destructor>
      <property name="Size" visibility="published" read="FSize" write="SetSize" stored="IsSizeStored" type="TControlSize" hoisted="true" file="FMX.Media.pas" line="476"/>
      <property name="Align" visibility="published" read="FAlign" write="SetAlign" type="TAlignLayout" default="0" hoisted="true" file="FMX.Media.pas" line="477"/>
      <property name="Anchors" visibility="published" read="FAnchors" write="SetAnchors" stored="IsAnchorsStored" type="TAnchors" hoisted="true" file="FMX.Media.pas" line="478"/>
      <property name="Height" visibility="published" read="GetHeight" write="SetHeight" stored="False" type="Single" hoisted="true" file="FMX.Media.pas" line="479"/>
      <property name="Padding" visibility="published" read="GetPadding" write="SetPadding" type="TBounds" hoisted="true" file="FMX.Media.pas" line="480"/>
      <property name="MediaPlayer" visibility="published" read="FMediaPlayer" write="SetMediaPlayer" type="TMediaPlayer" file="FMX.Media.pas" line="481"><devnotes><summary>
Specifies the TMediaPlayer to which this TMediaPlayerControl is linked.
Set MediaPlayer to link a TMediaPlayer to this TMediaPlayerControl, so the video file attached to the media player is displayed on a form. 
</summary></devnotes></property>
      <property name="Margins" visibility="published" read="GetMargins" write="SetMargins" type="TBounds" hoisted="true" file="FMX.Media.pas" line="482"/>
      <property name="Position" visibility="published" read="FPosition" write="SetPosition" stored="IsPositionStored" type="TPosition" hoisted="true" file="FMX.Media.pas" line="483"/>
      <property name="Visible" visibility="published" read="FVisible" write="SetVisible" stored="VisibleStored" type="Boolean" default="1" hoisted="true" file="FMX.Media.pas" line="484"/>
      <property name="Width" visibility="published" read="GetWidth" write="SetWidth" stored="False" type="Single" hoisted="true" file="FMX.Media.pas" line="485"/>
    </members>
  <devnotes><summary>
Visual component to display video media files. 
TMediaPlayerControl is a native control used to display video media files at design time. It is an empty control that does not show any video data. TMediaPlayerControl can be placed anywhere on a form. To set the video to be displayed, link the current TMediaPlayerControl to a TMediaPlayer through the MediaPlayer property.
</summary></devnotes></class>
  <class name="TCustomMediaPlayerAction" file="FMX.Media.pas" line="490">
    
    <ancestor name="TCustomAction" namespace="FMX.ActnList">
      <methodref name="GetText" visibility="private" procflags="inline">
      </methodref>
      <methodref name="SetText" visibility="private" procflags="inline">
      </methodref>
      <methodref name="GetCustomActionList" visibility="private">
      </methodref>
      <methodref name="SetCustomActionList" visibility="private">
      </methodref>
      <methodref name="ReaderCaptionProc" visibility="private">
      </methodref>
      <methodref name="WriterCaptionProc" visibility="private">
      </methodref>
      <methodref name="ReaderImageIndexProc" visibility="private">
      </methodref>
      <methodref name="WriterImageIndexProc" visibility="private">
      </methodref>
      <methodref name="SetUnsupportedArchitectures" visibility="private">
      </methodref>
      <methodref name="SetUnsupportedPlatforms" visibility="private">
      </methodref>
      <methodref name="SetCustomText" visibility="private">
      </methodref>
      <methodref name="SetHideIfUnsupportedInterface" visibility="private">
      </methodref>
      <methodref name="UpdateSupported" visibility="protected">
      </methodref>
      <methodref name="IsSupportedInterface" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="CreateShortCutList" visibility="protected" procflags="override">
      </methodref>
      <methodref name="DefineProperties" visibility="protected" procflags="override">
      </methodref>
      <methodref name="SetTarget" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="SetEnabled" visibility="protected" procflags="override">
      </methodref>
      <methodref name="SetVisible" visibility="protected" procflags="override">
      </methodref>
      <methodref name="Loaded" visibility="protected" procflags="override">
      </methodref>
      <methodref name="CustomTextChanged" visibility="protected" procflags="virtual">
      </methodref>
      <propertyref name="CustomText" visibility="protected">
      </propertyref>
      <methodref name="Create" visibility="public" procflags="constructor override">
      </methodref>
      <methodref name="Execute" visibility="public" procflags="override">
      </methodref>
      <methodref name="Update" visibility="public" procflags="override">
      </methodref>
      <methodref name="IsDialogKey" visibility="public">
      </methodref>
      <propertyref name="Text" visibility="public">
      </propertyref>
      <propertyref name="Caption" visibility="public">
      </propertyref>
      <propertyref name="ActionList" visibility="public">
      </propertyref>
      <propertyref name="HideIfUnsupportedInterface" visibility="public">
      </propertyref>
      <propertyref name="ShortCutPressed" visibility="public">
      </propertyref>
      <propertyref name="Target" visibility="public">
      </propertyref>
      <propertyref name="UnsupportedArchitectures" visibility="public">
      </propertyref>
      <propertyref name="UnsupportedPlatforms" visibility="public">
      </propertyref>
      <propertyref name="Supported" visibility="public">
      </propertyref>
      <ancestor name="TContainedAction" namespace="System.Actions">
        <methodref name="GetIndex" visibility="private">
        </methodref>
        <methodref name="SetIndex" visibility="private">
        </methodref>
        <methodref name="SetCategory" visibility="private">
        </methodref>
        <methodref name="GetSecondaryShortCuts" visibility="private">
        </methodref>
        <methodref name="SetSecondaryShortCuts" visibility="private">
        </methodref>
        <methodref name="IsSecondaryShortCutsStored" visibility="private">
        </methodref>
        <methodref name="SetActionList" visibility="private">
        </methodref>
        <methodref name="ReadState" visibility="protected" procflags="override">
        </methodref>
        <methodref name="SecondaryShortCutsCreated" visibility="protected">
        </methodref>
        <methodref name="CreateShortCutList" visibility="protected" procflags="virtual">
        </methodref>
        <propertyref name="SavedEnabledState" visibility="protected">
        </propertyref>
        <methodref name="AssignTo" visibility="protected" procflags="override">
        </methodref>
        <methodref name="HandleShortCut" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetAutoCheck" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetCaption" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetName" visibility="protected" procflags="override">
        </methodref>
        <methodref name="SetChecked" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetEnabled" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetGroupIndex" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetHelpContext" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetHelpKeyword" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetHelpType" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetHint" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetVisible" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetShortCut" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetImageIndex" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetStatusAction" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Create" visibility="public" procflags="constructor override">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor override">
        </methodref>
        <methodref name="GetParentComponent" visibility="public" procflags="override">
        </methodref>
        <methodref name="HasParent" visibility="public" procflags="override">
        </methodref>
        <methodref name="SetParentComponent" visibility="public" procflags="override">
        </methodref>
        <propertyref name="ActionList" visibility="public">
        </propertyref>
        <methodref name="Suspended" visibility="public" procflags="override">
        </methodref>
        <propertyref name="Index" visibility="public">
        </propertyref>
        <propertyref name="DisableIfNoHandler" visibility="public">
        </propertyref>
        <propertyref name="AutoCheck" visibility="public">
        </propertyref>
        <propertyref name="Caption" visibility="public">
        </propertyref>
        <propertyref name="Checked" visibility="public">
        </propertyref>
        <propertyref name="Enabled" visibility="public">
        </propertyref>
        <propertyref name="GroupIndex" visibility="public">
        </propertyref>
        <propertyref name="HelpContext" visibility="public">
        </propertyref>
        <propertyref name="HelpKeyword" visibility="public">
        </propertyref>
        <propertyref name="HelpType" visibility="public">
        </propertyref>
        <propertyref name="Hint" visibility="public">
        </propertyref>
        <propertyref name="Visible" visibility="public">
        </propertyref>
        <propertyref name="ShortCut" visibility="public">
        </propertyref>
        <propertyref name="SecondaryShortCuts" visibility="public">
        </propertyref>
        <propertyref name="ImageIndex" visibility="public">
        </propertyref>
        <methodref name="DoHint" visibility="public" procflags="dynamic">
        </methodref>
        <eventref name="OnHint" visibility="public">
        </eventref>
        <propertyref name="StatusAction" visibility="public">
        </propertyref>
        <propertyref name="Category" visibility="published">
        </propertyref>
        <ancestor name="TBasicAction" namespace="System.Classes">
          <methodref name="GetClientCount" visibility="private">
          </methodref>
          <methodref name="GetClient" visibility="private">
          </methodref>
          <methodref name="SetActionComponent" visibility="private">
          </methodref>
          <methodref name="Change" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetOnExecute" visibility="protected" procflags="virtual">
          </methodref>
          <eventref name="OnChange" visibility="protected">
          </eventref>
          <methodref name="Notification" visibility="protected" procflags="override">
          </methodref>
          <propertyref name="ClientCount" visibility="protected">
          </propertyref>
          <propertyref name="Clients" visibility="protected">
          </propertyref>
          <methodref name="RegisterChanges" visibility="protected">
          </methodref>
          <methodref name="UnRegisterChanges" visibility="protected">
          </methodref>
          <methodref name="Create" visibility="public" procflags="constructor override">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="Suspended" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="HandlesTarget" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="UpdateTarget" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="ExecuteTarget" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="Execute" visibility="public" procflags="dynamic">
          </methodref>
          <methodref name="Update" visibility="public" procflags="virtual">
          </methodref>
          <propertyref name="ActionComponent" visibility="public">
          </propertyref>
          <eventref name="OnExecute" visibility="public">
          </eventref>
          <eventref name="OnUpdate" visibility="public">
          </eventref>
          <ancestor name="TComponent" namespace="System.Classes">
            <interfaces>
              <implements name="IInterfaceComponentReference"/>
              <implements name="IInterface"/>
            </interfaces>
            <methodref name="GetComObject" visibility="private">
            </methodref>
            <methodref name="GetComponent" visibility="private">
            </methodref>
            <methodref name="GetComponentCount" visibility="private">
            </methodref>
            <methodref name="GetComponentIndex" visibility="private">
            </methodref>
            <methodref name="Insert" visibility="private">
            </methodref>
            <methodref name="ReadLeft" visibility="private">
            </methodref>
            <methodref name="ReadTop" visibility="private">
            </methodref>
            <methodref name="Remove" visibility="private">
            </methodref>
            <methodref name="RemoveNotification" visibility="private">
            </methodref>
            <methodref name="SetComponentIndex" visibility="private">
            </methodref>
            <methodref name="SetReference" visibility="private">
            </methodref>
            <methodref name="WriteLeft" visibility="private">
            </methodref>
            <methodref name="WriteTop" visibility="private">
            </methodref>
            <methodref name="IntfGetComponent" visibility="private">
            </methodref>
            <methodref name="DoGetDeltaStreams" visibility="private">
            </methodref>
            <methodref name="ReadDeltaStream" visibility="private">
            </methodref>
            <methodref name="ReadDeltaState" visibility="private">
            </methodref>
            <methodref name="FindSortedComponent" visibility="private">
            </methodref>
            <methodref name="AddSortedComponent" visibility="private">
            </methodref>
            <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
            </methodref>
            <methodref name="Create@" visibility="class private" procflags="class constructor noself">
            </methodref>
            <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ChangeName" visibility="protected">
            </methodref>
            <methodref name="DefineProperties" visibility="protected" procflags="override">
            </methodref>
            <methodref name="GetChildren" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="GetOwner" visibility="protected" procflags="override">
            </methodref>
            <methodref name="Loaded" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Notification" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="ReadState" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="CanObserve" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetObservers" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetAncestor" visibility="protected">
            </methodref>
            <methodref name="SetDesigning" visibility="protected">
            </methodref>
            <methodref name="SetInline" visibility="protected">
            </methodref>
            <methodref name="SetDesignInstance" visibility="protected">
            </methodref>
            <methodref name="SetName" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="Updating" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="Updated" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
            </methodref>
            <methodref name="ValidateRename" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="WriteState" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="RemoveFreeNotifications" visibility="protected">
            </methodref>
            <methodref name="QueryInterface" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="_AddRef" visibility="protected">
            </methodref>
            <methodref name="_Release" visibility="protected">
            </methodref>
            <methodref name="GetTypeInfoCount" visibility="protected">
            </methodref>
            <methodref name="GetTypeInfo" visibility="protected">
            </methodref>
            <methodref name="GetIDsOfNames" visibility="protected">
            </methodref>
            <methodref name="Invoke" visibility="protected">
            </methodref>
            <eventref name="OnGetDeltaStreams" visibility="protected">
            </eventref>
            <methodref name="Create" visibility="public" procflags="constructor virtual">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor override">
            </methodref>
            <methodref name="BeforeDestruction" visibility="public" procflags="override">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="EndInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="EndInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="EndFunctionInvoke" visibility="public">
            </methodref>
            <methodref name="DestroyComponents" visibility="public">
            </methodref>
            <methodref name="Destroying" visibility="public">
            </methodref>
            <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
            </methodref>
            <methodref name="FindComponent" visibility="public">
            </methodref>
            <methodref name="FreeNotification" visibility="public">
            </methodref>
            <methodref name="RemoveFreeNotification" visibility="public">
            </methodref>
            <methodref name="FreeOnRelease" visibility="public">
            </methodref>
            <methodref name="GetEnumerator" visibility="public" procflags="inline">
            </methodref>
            <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
            </methodref>
            <methodref name="GetNamePath" visibility="public" procflags="override">
            </methodref>
            <methodref name="HasParent" visibility="public" procflags="dynamic">
            </methodref>
            <methodref name="InsertComponent" visibility="public">
            </methodref>
            <methodref name="RemoveComponent" visibility="public">
            </methodref>
            <methodref name="SetSubComponent" visibility="public">
            </methodref>
            <methodref name="SafeCallException" visibility="public" procflags="override">
            </methodref>
            <methodref name="UpdateAction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="IsImplementorOf" visibility="public">
            </methodref>
            <methodref name="ReferenceInterface" visibility="public">
            </methodref>
            <propertyref name="ComObject" visibility="public">
            </propertyref>
            <propertyref name="Components" visibility="public">
            </propertyref>
            <propertyref name="ComponentCount" visibility="public">
            </propertyref>
            <propertyref name="ComponentIndex" visibility="public">
            </propertyref>
            <propertyref name="ComponentState" visibility="public">
            </propertyref>
            <propertyref name="ComponentStyle" visibility="public">
            </propertyref>
            <propertyref name="DesignInfo" visibility="public">
            </propertyref>
            <propertyref name="Owner" visibility="public">
            </propertyref>
            <propertyref name="VCLComObject" visibility="public">
            </propertyref>
            <propertyref name="Observers" visibility="public">
            </propertyref>
            <propertyref name="Name" visibility="published">
            </propertyref>
            <propertyref name="Tag" visibility="published">
            </propertyref>
            <ancestor name="TPersistent" namespace="System.Classes">
              <methodref name="AssignError" visibility="private">
              </methodref>
              <methodref name="AssignTo" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DefineProperties" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetOwner" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor override">
              </methodref>
              <methodref name="Assign" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="GetNamePath" visibility="public" procflags="dynamic">
              </methodref>
              <ancestor name="TObject" namespace="System">
                <methodref name="Create" visibility="public" procflags="constructor">
                </methodref>
                <methodref name="Free" visibility="public">
                </methodref>
                <methodref name="DisposeOf" visibility="public" procflags="inline">
                </methodref>
                <methodref name="InitInstance" visibility="public" procflags="class">
                </methodref>
                <methodref name="CleanupInstance" visibility="public">
                </methodref>
                <methodref name="ClassType" visibility="public" procflags="inline">
                </methodref>
                <methodref name="ClassName" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassNameIs" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassParent" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="ClassInfo" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="InstanceSize" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="InheritsFrom" visibility="public" procflags="class">
                </methodref>
                <methodref name="MethodAddress" visibility="public" procflags="class overload">
                </methodref>
                <methodref name="MethodAddress" visibility="public" procflags="class overload">
                </methodref>
                <methodref name="MethodName" visibility="public" procflags="class">
                </methodref>
                <methodref name="QualifiedClassName" visibility="public" procflags="class">
                </methodref>
                <methodref name="FieldAddress" visibility="public" procflags="overload">
                </methodref>
                <methodref name="FieldAddress" visibility="public" procflags="overload">
                </methodref>
                <methodref name="GetInterface" visibility="public">
                </methodref>
                <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                </methodref>
                <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="UnitName" visibility="public" procflags="class">
                </methodref>
                <methodref name="UnitScope" visibility="public" procflags="class">
                </methodref>
                <methodref name="Equals" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="GetHashCode" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="ToString" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="SafeCallException" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Dispatch" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="NewInstance" visibility="public" procflags="class virtual">
                </methodref>
                <methodref name="FreeInstance" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                </methodref>
                <methodref name="GetDisposed" visibility="protected" procflags="inline">
                </methodref>
                <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                </methodref>
                <propertyref name="Disposed" visibility="protected">
                </propertyref>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <field name="FMediaPlayer" type="TMediaPlayer" visibility="private" size="4" offset="184" file="FMX.Media.pas" line="492">
        <attributes>
          <attribute name="TObject"/>
        </attributes>
      </field>
      <procedure name="SetMediaPlayer" visibility="private" file="FMX.Media.pas" line="493">
        <parameters>
          <parameter name="Value" type="TMediaPlayer" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="Notification" visibility="protected" procflags="override" file="FMX.Media.pas" line="495">
        <parameters>
          <parameter name="AComponent" type="TComponent"/>
          <parameter name="Operation" type="TOperation"/>
        </parameters>
      <devnotes><summary>
Responds when components are created or destroyed.
FMX.Media.TCustomMediaPlayerAction.Notification inherits from System.Classes.TBasicAction.Notification. All content below this line refers to System.Classes.TBasicAction.Notification.
Responds when components are created or destroyed.
Do not call the Notification method in an application. Notification is called automatically when the component specified by AComponent is about to be inserted or removed, as specified by Operation. 
TBasicAction overrides the System.Classes.TComponent.Notification method. Notification checks whether the component specified by AComponent is the same as the component stored in the ActionComponent property and whether it is about to be freed. If so, Notification sets the ActionComponent property to nil (Delphi) or NULL (C++).
</summary></devnotes></procedure>
      <constructor name="Create" visibility="public" file="FMX.Media.pas" line="499">
        <devnotes><summary>
Instantiates and initializes a TCustomMediaPlayerAction object.
Applications do not need to call Create directly. Actions are created automatically when you add them to a TActionList component using New &gt; New Standard Action in the Action List editor at design time.
If you want to create an action at run time, assign a TActionList component to its ActionList property after calling Create.
AOwner is the component that is responsible for freeing the action. It becomes the value of the Owner property.
</summary></devnotes>
        <parameters>
          <parameter name="AOwner" type="TComponent"/>
        </parameters>
      </constructor>
      <function name="HandlesTarget" visibility="public" procflags="override" file="FMX.Media.pas" line="500">
        <parameters>
          <parameter name="Target" type="TObject"/>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
Whether Target is appropriate for the action (True) or not (False).
HandlesTarget ignores the specified Target parameter, actually. Regardless of the specified target, HandlesTarget returns True provided that:

The platform where your application is running supports this action.
Your action does not have any event handler assigned to its OnExecute event.
You have an instance of TMediaPlayer in the MediaPlayer property of your action.</summary></devnotes></function>
      <function name="Update" visibility="public" procflags="override" file="FMX.Media.pas" line="501">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
Provides an opportunity to execute centralized code when an application is idle.
FMX.Media.TCustomMediaPlayerAction.Update inherits from System.Classes.TBasicAction.Update. All content below this line refers to System.Classes.TBasicAction.Update.
Provides an opportunity to execute centralized code when an application is idle.
Update triggers the OnUpdate event handler. Update returns True if an event handler was found, False otherwise. When the application is idle, the OnUpdate event occurs for every action. This provides an opportunity for applications to execute centralized code for enabling and disabling, checking and unchecking, and so on.
</summary></devnotes></function>
      <property name="MediaPlayer" visibility="public" read="FMediaPlayer" write="SetMediaPlayer" type="TMediaPlayer" file="FMX.Media.pas" line="503">
        <devnotes><summary>
Instance of TMediaPlayer that is target of the action.
</summary></devnotes>
      </property>
      <property name="CustomText" visibility="published" read="FCustomText" write="SetCustomText" type="string" default="0" hoisted="true" file="FMX.Media.pas" line="505"/>
      <property name="ImageIndex" visibility="published" read="FImageIndex" write="SetImageIndex" type="TImageIndex" default="-1" hoisted="true" file="FMX.Media.pas" line="506"/>
      <property name="ShortCut" visibility="published" read="FShortCut" write="SetShortCut" type="TShortCut" default="0" hoisted="true" file="FMX.Media.pas" line="507"/>
      <property name="SecondaryShortCuts" visibility="published" read="GetSecondaryShortCuts" write="SetSecondaryShortCuts" stored="IsSecondaryShortCutsStored" type="TCustomShortCutList" hoisted="true" file="FMX.Media.pas" line="508"/>
      <property name="Visible" visibility="published" read="FVisible" write="SetVisible" type="Boolean" default="1" hoisted="true" file="FMX.Media.pas" line="509"/>
      <property name="UnsupportedArchitectures" visibility="published" read="FUnsupportedArchitectures" write="SetUnsupportedArchitectures" type="TArchitectures" default="0" hoisted="true" file="FMX.Media.pas" line="510"/>
      <event name="OnUpdate" visibility="published" read="FOnUpdate" write="FOnUpdate" type="TNotifyEvent" hoisted="true" file="FMX.Media.pas" line="511"/>
    </members>
  </class>
  <class name="TMediaPlayerStart" file="FMX.Media.pas" line="516">
    
    <ancestor name="TCustomMediaPlayerAction" namespace="FMX.Media">
      <methodref name="SetMediaPlayer" visibility="private"/>
      <methodref name="Notification" visibility="protected" procflags="override"/>
      <methodref name="Create" visibility="public" procflags="constructor override">
      </methodref>
      <methodref name="HandlesTarget" visibility="public" procflags="override"/>
      <methodref name="Update" visibility="public" procflags="override"/>
      <propertyref name="MediaPlayer" visibility="public">
      </propertyref>
      <propertyref name="CustomText" visibility="published"/>
      <propertyref name="ImageIndex" visibility="published"/>
      <propertyref name="ShortCut" visibility="published"/>
      <propertyref name="SecondaryShortCuts" visibility="published"/>
      <propertyref name="Visible" visibility="published"/>
      <propertyref name="UnsupportedArchitectures" visibility="published"/>
      <propertyref name="OnUpdate" visibility="published"/>
      <ancestor name="TCustomAction" namespace="FMX.ActnList">
        <methodref name="GetText" visibility="private" procflags="inline">
        </methodref>
        <methodref name="SetText" visibility="private" procflags="inline">
        </methodref>
        <methodref name="GetCustomActionList" visibility="private">
        </methodref>
        <methodref name="SetCustomActionList" visibility="private">
        </methodref>
        <methodref name="ReaderCaptionProc" visibility="private">
        </methodref>
        <methodref name="WriterCaptionProc" visibility="private">
        </methodref>
        <methodref name="ReaderImageIndexProc" visibility="private">
        </methodref>
        <methodref name="WriterImageIndexProc" visibility="private">
        </methodref>
        <methodref name="SetUnsupportedArchitectures" visibility="private">
        </methodref>
        <methodref name="SetUnsupportedPlatforms" visibility="private">
        </methodref>
        <methodref name="SetCustomText" visibility="private">
        </methodref>
        <methodref name="SetHideIfUnsupportedInterface" visibility="private">
        </methodref>
        <methodref name="UpdateSupported" visibility="protected">
        </methodref>
        <methodref name="IsSupportedInterface" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CreateShortCutList" visibility="protected" procflags="override">
        </methodref>
        <methodref name="DefineProperties" visibility="protected" procflags="override">
        </methodref>
        <methodref name="SetTarget" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetEnabled" visibility="protected" procflags="override">
        </methodref>
        <methodref name="SetVisible" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Loaded" visibility="protected" procflags="override">
        </methodref>
        <methodref name="CustomTextChanged" visibility="protected" procflags="virtual">
        </methodref>
        <propertyref name="CustomText" visibility="protected">
        </propertyref>
        <methodref name="Create" visibility="public" procflags="constructor override">
        </methodref>
        <methodref name="Execute" visibility="public" procflags="override">
        </methodref>
        <methodref name="Update" visibility="public" procflags="override">
        </methodref>
        <methodref name="IsDialogKey" visibility="public">
        </methodref>
        <propertyref name="Text" visibility="public">
        </propertyref>
        <propertyref name="Caption" visibility="public">
        </propertyref>
        <propertyref name="ActionList" visibility="public">
        </propertyref>
        <propertyref name="HideIfUnsupportedInterface" visibility="public">
        </propertyref>
        <propertyref name="ShortCutPressed" visibility="public">
        </propertyref>
        <propertyref name="Target" visibility="public">
        </propertyref>
        <propertyref name="UnsupportedArchitectures" visibility="public">
        </propertyref>
        <propertyref name="UnsupportedPlatforms" visibility="public">
        </propertyref>
        <propertyref name="Supported" visibility="public">
        </propertyref>
        <ancestor name="TContainedAction" namespace="System.Actions">
          <methodref name="GetIndex" visibility="private">
          </methodref>
          <methodref name="SetIndex" visibility="private">
          </methodref>
          <methodref name="SetCategory" visibility="private">
          </methodref>
          <methodref name="GetSecondaryShortCuts" visibility="private">
          </methodref>
          <methodref name="SetSecondaryShortCuts" visibility="private">
          </methodref>
          <methodref name="IsSecondaryShortCutsStored" visibility="private">
          </methodref>
          <methodref name="SetActionList" visibility="private">
          </methodref>
          <methodref name="ReadState" visibility="protected" procflags="override">
          </methodref>
          <methodref name="SecondaryShortCutsCreated" visibility="protected">
          </methodref>
          <methodref name="CreateShortCutList" visibility="protected" procflags="virtual">
          </methodref>
          <propertyref name="SavedEnabledState" visibility="protected">
          </propertyref>
          <methodref name="AssignTo" visibility="protected" procflags="override">
          </methodref>
          <methodref name="HandleShortCut" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetAutoCheck" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetCaption" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetName" visibility="protected" procflags="override">
          </methodref>
          <methodref name="SetChecked" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetEnabled" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetGroupIndex" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetHelpContext" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetHelpKeyword" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetHelpType" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetHint" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetVisible" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetShortCut" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetImageIndex" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetStatusAction" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="Create" visibility="public" procflags="constructor override">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="GetParentComponent" visibility="public" procflags="override">
          </methodref>
          <methodref name="HasParent" visibility="public" procflags="override">
          </methodref>
          <methodref name="SetParentComponent" visibility="public" procflags="override">
          </methodref>
          <propertyref name="ActionList" visibility="public">
          </propertyref>
          <methodref name="Suspended" visibility="public" procflags="override">
          </methodref>
          <propertyref name="Index" visibility="public">
          </propertyref>
          <propertyref name="DisableIfNoHandler" visibility="public">
          </propertyref>
          <propertyref name="AutoCheck" visibility="public">
          </propertyref>
          <propertyref name="Caption" visibility="public">
          </propertyref>
          <propertyref name="Checked" visibility="public">
          </propertyref>
          <propertyref name="Enabled" visibility="public">
          </propertyref>
          <propertyref name="GroupIndex" visibility="public">
          </propertyref>
          <propertyref name="HelpContext" visibility="public">
          </propertyref>
          <propertyref name="HelpKeyword" visibility="public">
          </propertyref>
          <propertyref name="HelpType" visibility="public">
          </propertyref>
          <propertyref name="Hint" visibility="public">
          </propertyref>
          <propertyref name="Visible" visibility="public">
          </propertyref>
          <propertyref name="ShortCut" visibility="public">
          </propertyref>
          <propertyref name="SecondaryShortCuts" visibility="public">
          </propertyref>
          <propertyref name="ImageIndex" visibility="public">
          </propertyref>
          <methodref name="DoHint" visibility="public" procflags="dynamic">
          </methodref>
          <eventref name="OnHint" visibility="public">
          </eventref>
          <propertyref name="StatusAction" visibility="public">
          </propertyref>
          <propertyref name="Category" visibility="published">
          </propertyref>
          <ancestor name="TBasicAction" namespace="System.Classes">
            <methodref name="GetClientCount" visibility="private">
            </methodref>
            <methodref name="GetClient" visibility="private">
            </methodref>
            <methodref name="SetActionComponent" visibility="private">
            </methodref>
            <methodref name="Change" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetOnExecute" visibility="protected" procflags="virtual">
            </methodref>
            <eventref name="OnChange" visibility="protected">
            </eventref>
            <methodref name="Notification" visibility="protected" procflags="override">
            </methodref>
            <propertyref name="ClientCount" visibility="protected">
            </propertyref>
            <propertyref name="Clients" visibility="protected">
            </propertyref>
            <methodref name="RegisterChanges" visibility="protected">
            </methodref>
            <methodref name="UnRegisterChanges" visibility="protected">
            </methodref>
            <methodref name="Create" visibility="public" procflags="constructor override">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor override">
            </methodref>
            <methodref name="Suspended" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="HandlesTarget" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="UpdateTarget" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="ExecuteTarget" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Execute" visibility="public" procflags="dynamic">
            </methodref>
            <methodref name="Update" visibility="public" procflags="virtual">
            </methodref>
            <propertyref name="ActionComponent" visibility="public">
            </propertyref>
            <eventref name="OnExecute" visibility="public">
            </eventref>
            <eventref name="OnUpdate" visibility="public">
            </eventref>
            <ancestor name="TComponent" namespace="System.Classes">
              <interfaces>
                <implements name="IInterfaceComponentReference"/>
                <implements name="IInterface"/>
              </interfaces>
              <methodref name="GetComObject" visibility="private">
              </methodref>
              <methodref name="GetComponent" visibility="private">
              </methodref>
              <methodref name="GetComponentCount" visibility="private">
              </methodref>
              <methodref name="GetComponentIndex" visibility="private">
              </methodref>
              <methodref name="Insert" visibility="private">
              </methodref>
              <methodref name="ReadLeft" visibility="private">
              </methodref>
              <methodref name="ReadTop" visibility="private">
              </methodref>
              <methodref name="Remove" visibility="private">
              </methodref>
              <methodref name="RemoveNotification" visibility="private">
              </methodref>
              <methodref name="SetComponentIndex" visibility="private">
              </methodref>
              <methodref name="SetReference" visibility="private">
              </methodref>
              <methodref name="WriteLeft" visibility="private">
              </methodref>
              <methodref name="WriteTop" visibility="private">
              </methodref>
              <methodref name="IntfGetComponent" visibility="private">
              </methodref>
              <methodref name="DoGetDeltaStreams" visibility="private">
              </methodref>
              <methodref name="ReadDeltaStream" visibility="private">
              </methodref>
              <methodref name="ReadDeltaState" visibility="private">
              </methodref>
              <methodref name="FindSortedComponent" visibility="private">
              </methodref>
              <methodref name="AddSortedComponent" visibility="private">
              </methodref>
              <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
              </methodref>
              <methodref name="Create@" visibility="class private" procflags="class constructor noself">
              </methodref>
              <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ChangeName" visibility="protected">
              </methodref>
              <methodref name="DefineProperties" visibility="protected" procflags="override">
              </methodref>
              <methodref name="GetChildren" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="GetOwner" visibility="protected" procflags="override">
              </methodref>
              <methodref name="Loaded" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Notification" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="ReadState" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="CanObserve" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetObservers" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetAncestor" visibility="protected">
              </methodref>
              <methodref name="SetDesigning" visibility="protected">
              </methodref>
              <methodref name="SetInline" visibility="protected">
              </methodref>
              <methodref name="SetDesignInstance" visibility="protected">
              </methodref>
              <methodref name="SetName" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="Updating" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="Updated" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
              </methodref>
              <methodref name="ValidateRename" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="WriteState" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="RemoveFreeNotifications" visibility="protected">
              </methodref>
              <methodref name="QueryInterface" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="_AddRef" visibility="protected">
              </methodref>
              <methodref name="_Release" visibility="protected">
              </methodref>
              <methodref name="GetTypeInfoCount" visibility="protected">
              </methodref>
              <methodref name="GetTypeInfo" visibility="protected">
              </methodref>
              <methodref name="GetIDsOfNames" visibility="protected">
              </methodref>
              <methodref name="Invoke" visibility="protected">
              </methodref>
              <eventref name="OnGetDeltaStreams" visibility="protected">
              </eventref>
              <methodref name="Create" visibility="public" procflags="constructor virtual">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor override">
              </methodref>
              <methodref name="BeforeDestruction" visibility="public" procflags="override">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="EndInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="EndInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="EndFunctionInvoke" visibility="public">
              </methodref>
              <methodref name="DestroyComponents" visibility="public">
              </methodref>
              <methodref name="Destroying" visibility="public">
              </methodref>
              <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
              </methodref>
              <methodref name="FindComponent" visibility="public">
              </methodref>
              <methodref name="FreeNotification" visibility="public">
              </methodref>
              <methodref name="RemoveFreeNotification" visibility="public">
              </methodref>
              <methodref name="FreeOnRelease" visibility="public">
              </methodref>
              <methodref name="GetEnumerator" visibility="public" procflags="inline">
              </methodref>
              <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
              </methodref>
              <methodref name="GetNamePath" visibility="public" procflags="override">
              </methodref>
              <methodref name="HasParent" visibility="public" procflags="dynamic">
              </methodref>
              <methodref name="InsertComponent" visibility="public">
              </methodref>
              <methodref name="RemoveComponent" visibility="public">
              </methodref>
              <methodref name="SetSubComponent" visibility="public">
              </methodref>
              <methodref name="SafeCallException" visibility="public" procflags="override">
              </methodref>
              <methodref name="UpdateAction" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="IsImplementorOf" visibility="public">
              </methodref>
              <methodref name="ReferenceInterface" visibility="public">
              </methodref>
              <propertyref name="ComObject" visibility="public">
              </propertyref>
              <propertyref name="Components" visibility="public">
              </propertyref>
              <propertyref name="ComponentCount" visibility="public">
              </propertyref>
              <propertyref name="ComponentIndex" visibility="public">
              </propertyref>
              <propertyref name="ComponentState" visibility="public">
              </propertyref>
              <propertyref name="ComponentStyle" visibility="public">
              </propertyref>
              <propertyref name="DesignInfo" visibility="public">
              </propertyref>
              <propertyref name="Owner" visibility="public">
              </propertyref>
              <propertyref name="VCLComObject" visibility="public">
              </propertyref>
              <propertyref name="Observers" visibility="public">
              </propertyref>
              <propertyref name="Name" visibility="published">
              </propertyref>
              <propertyref name="Tag" visibility="published">
              </propertyref>
              <ancestor name="TPersistent" namespace="System.Classes">
                <methodref name="AssignError" visibility="private">
                </methodref>
                <methodref name="AssignTo" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="DefineProperties" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="GetOwner" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor override">
                </methodref>
                <methodref name="Assign" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="GetNamePath" visibility="public" procflags="dynamic">
                </methodref>
                <ancestor name="TObject" namespace="System">
                  <methodref name="Create" visibility="public" procflags="constructor">
                  </methodref>
                  <methodref name="Free" visibility="public">
                  </methodref>
                  <methodref name="DisposeOf" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="InitInstance" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="CleanupInstance" visibility="public">
                  </methodref>
                  <methodref name="ClassType" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="ClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassNameIs" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassParent" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="ClassInfo" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InstanceSize" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InheritsFrom" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="QualifiedClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="GetInterface" visibility="public">
                  </methodref>
                  <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="UnitName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="UnitScope" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="Equals" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="GetHashCode" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="ToString" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="SafeCallException" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Dispatch" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="NewInstance" visibility="public" procflags="class virtual">
                  </methodref>
                  <methodref name="FreeInstance" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                  </methodref>
                  <methodref name="GetDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <propertyref name="Disposed" visibility="protected">
                  </propertyref>
                </ancestor>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <procedure name="CustomTextChanged" visibility="protected" procflags="override" file="FMX.Media.pas" line="518">
      <devnotes><summary>
Updates the value of the Text property to be the value of the CustomText property or, if CustomText is an empty string, to be the default text of the action: &quot;Play&quot;.
TMediaPlayerStart calls CustomTextChanged when you change the value of the MediaPlayer property of your action, and when the action updates.
</summary></devnotes></procedure>
      <function name="Update" visibility="public" procflags="override" file="FMX.Media.pas" line="520">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
Provides an opportunity to execute centralized code when an application is idle.
FMX.Media.TMediaPlayerStart.Update inherits from System.Classes.TBasicAction.Update. All content below this line refers to System.Classes.TBasicAction.Update.
Provides an opportunity to execute centralized code when an application is idle.
Update triggers the OnUpdate event handler. Update returns True if an event handler was found, False otherwise. When the application is idle, the OnUpdate event occurs for every action. This provides an opportunity for applications to execute centralized code for enabling and disabling, checking and unchecking, and so on.
</summary></devnotes></function>
      <procedure name="ExecuteTarget" visibility="public" procflags="override" file="FMX.Media.pas" line="521">
        <parameters>
          <parameter name="Target" type="TObject"/>
        </parameters>
      <devnotes><summary>
Executes the action on the media player of the MediaPlayer property. The specified Target is ignored.
</summary></devnotes></procedure>
      <property name="MediaPlayer" visibility="published" read="FMediaPlayer" write="SetMediaPlayer" type="TMediaPlayer" hoisted="true" file="FMX.Media.pas" line="523"/>
    </members>
  </class>
  <class name="TMediaPlayerStop" file="FMX.Media.pas" line="528">
    
    <ancestor name="TCustomMediaPlayerAction" namespace="FMX.Media">
      <methodref name="SetMediaPlayer" visibility="private"/>
      <methodref name="Notification" visibility="protected" procflags="override"/>
      <methodref name="Create" visibility="public" procflags="constructor override">
      </methodref>
      <methodref name="HandlesTarget" visibility="public" procflags="override"/>
      <methodref name="Update" visibility="public" procflags="override"/>
      <propertyref name="MediaPlayer" visibility="public">
      </propertyref>
      <propertyref name="CustomText" visibility="published"/>
      <propertyref name="ImageIndex" visibility="published"/>
      <propertyref name="ShortCut" visibility="published"/>
      <propertyref name="SecondaryShortCuts" visibility="published"/>
      <propertyref name="Visible" visibility="published"/>
      <propertyref name="UnsupportedArchitectures" visibility="published"/>
      <propertyref name="OnUpdate" visibility="published"/>
      <ancestor name="TCustomAction" namespace="FMX.ActnList">
        <methodref name="GetText" visibility="private" procflags="inline">
        </methodref>
        <methodref name="SetText" visibility="private" procflags="inline">
        </methodref>
        <methodref name="GetCustomActionList" visibility="private">
        </methodref>
        <methodref name="SetCustomActionList" visibility="private">
        </methodref>
        <methodref name="ReaderCaptionProc" visibility="private">
        </methodref>
        <methodref name="WriterCaptionProc" visibility="private">
        </methodref>
        <methodref name="ReaderImageIndexProc" visibility="private">
        </methodref>
        <methodref name="WriterImageIndexProc" visibility="private">
        </methodref>
        <methodref name="SetUnsupportedArchitectures" visibility="private">
        </methodref>
        <methodref name="SetUnsupportedPlatforms" visibility="private">
        </methodref>
        <methodref name="SetCustomText" visibility="private">
        </methodref>
        <methodref name="SetHideIfUnsupportedInterface" visibility="private">
        </methodref>
        <methodref name="UpdateSupported" visibility="protected">
        </methodref>
        <methodref name="IsSupportedInterface" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CreateShortCutList" visibility="protected" procflags="override">
        </methodref>
        <methodref name="DefineProperties" visibility="protected" procflags="override">
        </methodref>
        <methodref name="SetTarget" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetEnabled" visibility="protected" procflags="override">
        </methodref>
        <methodref name="SetVisible" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Loaded" visibility="protected" procflags="override">
        </methodref>
        <methodref name="CustomTextChanged" visibility="protected" procflags="virtual">
        </methodref>
        <propertyref name="CustomText" visibility="protected">
        </propertyref>
        <methodref name="Create" visibility="public" procflags="constructor override">
        </methodref>
        <methodref name="Execute" visibility="public" procflags="override">
        </methodref>
        <methodref name="Update" visibility="public" procflags="override">
        </methodref>
        <methodref name="IsDialogKey" visibility="public">
        </methodref>
        <propertyref name="Text" visibility="public">
        </propertyref>
        <propertyref name="Caption" visibility="public">
        </propertyref>
        <propertyref name="ActionList" visibility="public">
        </propertyref>
        <propertyref name="HideIfUnsupportedInterface" visibility="public">
        </propertyref>
        <propertyref name="ShortCutPressed" visibility="public">
        </propertyref>
        <propertyref name="Target" visibility="public">
        </propertyref>
        <propertyref name="UnsupportedArchitectures" visibility="public">
        </propertyref>
        <propertyref name="UnsupportedPlatforms" visibility="public">
        </propertyref>
        <propertyref name="Supported" visibility="public">
        </propertyref>
        <ancestor name="TContainedAction" namespace="System.Actions">
          <methodref name="GetIndex" visibility="private">
          </methodref>
          <methodref name="SetIndex" visibility="private">
          </methodref>
          <methodref name="SetCategory" visibility="private">
          </methodref>
          <methodref name="GetSecondaryShortCuts" visibility="private">
          </methodref>
          <methodref name="SetSecondaryShortCuts" visibility="private">
          </methodref>
          <methodref name="IsSecondaryShortCutsStored" visibility="private">
          </methodref>
          <methodref name="SetActionList" visibility="private">
          </methodref>
          <methodref name="ReadState" visibility="protected" procflags="override">
          </methodref>
          <methodref name="SecondaryShortCutsCreated" visibility="protected">
          </methodref>
          <methodref name="CreateShortCutList" visibility="protected" procflags="virtual">
          </methodref>
          <propertyref name="SavedEnabledState" visibility="protected">
          </propertyref>
          <methodref name="AssignTo" visibility="protected" procflags="override">
          </methodref>
          <methodref name="HandleShortCut" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetAutoCheck" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetCaption" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetName" visibility="protected" procflags="override">
          </methodref>
          <methodref name="SetChecked" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetEnabled" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetGroupIndex" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetHelpContext" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetHelpKeyword" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetHelpType" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetHint" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetVisible" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetShortCut" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetImageIndex" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetStatusAction" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="Create" visibility="public" procflags="constructor override">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="GetParentComponent" visibility="public" procflags="override">
          </methodref>
          <methodref name="HasParent" visibility="public" procflags="override">
          </methodref>
          <methodref name="SetParentComponent" visibility="public" procflags="override">
          </methodref>
          <propertyref name="ActionList" visibility="public">
          </propertyref>
          <methodref name="Suspended" visibility="public" procflags="override">
          </methodref>
          <propertyref name="Index" visibility="public">
          </propertyref>
          <propertyref name="DisableIfNoHandler" visibility="public">
          </propertyref>
          <propertyref name="AutoCheck" visibility="public">
          </propertyref>
          <propertyref name="Caption" visibility="public">
          </propertyref>
          <propertyref name="Checked" visibility="public">
          </propertyref>
          <propertyref name="Enabled" visibility="public">
          </propertyref>
          <propertyref name="GroupIndex" visibility="public">
          </propertyref>
          <propertyref name="HelpContext" visibility="public">
          </propertyref>
          <propertyref name="HelpKeyword" visibility="public">
          </propertyref>
          <propertyref name="HelpType" visibility="public">
          </propertyref>
          <propertyref name="Hint" visibility="public">
          </propertyref>
          <propertyref name="Visible" visibility="public">
          </propertyref>
          <propertyref name="ShortCut" visibility="public">
          </propertyref>
          <propertyref name="SecondaryShortCuts" visibility="public">
          </propertyref>
          <propertyref name="ImageIndex" visibility="public">
          </propertyref>
          <methodref name="DoHint" visibility="public" procflags="dynamic">
          </methodref>
          <eventref name="OnHint" visibility="public">
          </eventref>
          <propertyref name="StatusAction" visibility="public">
          </propertyref>
          <propertyref name="Category" visibility="published">
          </propertyref>
          <ancestor name="TBasicAction" namespace="System.Classes">
            <methodref name="GetClientCount" visibility="private">
            </methodref>
            <methodref name="GetClient" visibility="private">
            </methodref>
            <methodref name="SetActionComponent" visibility="private">
            </methodref>
            <methodref name="Change" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetOnExecute" visibility="protected" procflags="virtual">
            </methodref>
            <eventref name="OnChange" visibility="protected">
            </eventref>
            <methodref name="Notification" visibility="protected" procflags="override">
            </methodref>
            <propertyref name="ClientCount" visibility="protected">
            </propertyref>
            <propertyref name="Clients" visibility="protected">
            </propertyref>
            <methodref name="RegisterChanges" visibility="protected">
            </methodref>
            <methodref name="UnRegisterChanges" visibility="protected">
            </methodref>
            <methodref name="Create" visibility="public" procflags="constructor override">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor override">
            </methodref>
            <methodref name="Suspended" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="HandlesTarget" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="UpdateTarget" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="ExecuteTarget" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Execute" visibility="public" procflags="dynamic">
            </methodref>
            <methodref name="Update" visibility="public" procflags="virtual">
            </methodref>
            <propertyref name="ActionComponent" visibility="public">
            </propertyref>
            <eventref name="OnExecute" visibility="public">
            </eventref>
            <eventref name="OnUpdate" visibility="public">
            </eventref>
            <ancestor name="TComponent" namespace="System.Classes">
              <interfaces>
                <implements name="IInterfaceComponentReference"/>
                <implements name="IInterface"/>
              </interfaces>
              <methodref name="GetComObject" visibility="private">
              </methodref>
              <methodref name="GetComponent" visibility="private">
              </methodref>
              <methodref name="GetComponentCount" visibility="private">
              </methodref>
              <methodref name="GetComponentIndex" visibility="private">
              </methodref>
              <methodref name="Insert" visibility="private">
              </methodref>
              <methodref name="ReadLeft" visibility="private">
              </methodref>
              <methodref name="ReadTop" visibility="private">
              </methodref>
              <methodref name="Remove" visibility="private">
              </methodref>
              <methodref name="RemoveNotification" visibility="private">
              </methodref>
              <methodref name="SetComponentIndex" visibility="private">
              </methodref>
              <methodref name="SetReference" visibility="private">
              </methodref>
              <methodref name="WriteLeft" visibility="private">
              </methodref>
              <methodref name="WriteTop" visibility="private">
              </methodref>
              <methodref name="IntfGetComponent" visibility="private">
              </methodref>
              <methodref name="DoGetDeltaStreams" visibility="private">
              </methodref>
              <methodref name="ReadDeltaStream" visibility="private">
              </methodref>
              <methodref name="ReadDeltaState" visibility="private">
              </methodref>
              <methodref name="FindSortedComponent" visibility="private">
              </methodref>
              <methodref name="AddSortedComponent" visibility="private">
              </methodref>
              <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
              </methodref>
              <methodref name="Create@" visibility="class private" procflags="class constructor noself">
              </methodref>
              <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ChangeName" visibility="protected">
              </methodref>
              <methodref name="DefineProperties" visibility="protected" procflags="override">
              </methodref>
              <methodref name="GetChildren" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="GetOwner" visibility="protected" procflags="override">
              </methodref>
              <methodref name="Loaded" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Notification" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="ReadState" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="CanObserve" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetObservers" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetAncestor" visibility="protected">
              </methodref>
              <methodref name="SetDesigning" visibility="protected">
              </methodref>
              <methodref name="SetInline" visibility="protected">
              </methodref>
              <methodref name="SetDesignInstance" visibility="protected">
              </methodref>
              <methodref name="SetName" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="Updating" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="Updated" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
              </methodref>
              <methodref name="ValidateRename" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="WriteState" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="RemoveFreeNotifications" visibility="protected">
              </methodref>
              <methodref name="QueryInterface" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="_AddRef" visibility="protected">
              </methodref>
              <methodref name="_Release" visibility="protected">
              </methodref>
              <methodref name="GetTypeInfoCount" visibility="protected">
              </methodref>
              <methodref name="GetTypeInfo" visibility="protected">
              </methodref>
              <methodref name="GetIDsOfNames" visibility="protected">
              </methodref>
              <methodref name="Invoke" visibility="protected">
              </methodref>
              <eventref name="OnGetDeltaStreams" visibility="protected">
              </eventref>
              <methodref name="Create" visibility="public" procflags="constructor virtual">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor override">
              </methodref>
              <methodref name="BeforeDestruction" visibility="public" procflags="override">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="EndInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="EndInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="EndFunctionInvoke" visibility="public">
              </methodref>
              <methodref name="DestroyComponents" visibility="public">
              </methodref>
              <methodref name="Destroying" visibility="public">
              </methodref>
              <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
              </methodref>
              <methodref name="FindComponent" visibility="public">
              </methodref>
              <methodref name="FreeNotification" visibility="public">
              </methodref>
              <methodref name="RemoveFreeNotification" visibility="public">
              </methodref>
              <methodref name="FreeOnRelease" visibility="public">
              </methodref>
              <methodref name="GetEnumerator" visibility="public" procflags="inline">
              </methodref>
              <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
              </methodref>
              <methodref name="GetNamePath" visibility="public" procflags="override">
              </methodref>
              <methodref name="HasParent" visibility="public" procflags="dynamic">
              </methodref>
              <methodref name="InsertComponent" visibility="public">
              </methodref>
              <methodref name="RemoveComponent" visibility="public">
              </methodref>
              <methodref name="SetSubComponent" visibility="public">
              </methodref>
              <methodref name="SafeCallException" visibility="public" procflags="override">
              </methodref>
              <methodref name="UpdateAction" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="IsImplementorOf" visibility="public">
              </methodref>
              <methodref name="ReferenceInterface" visibility="public">
              </methodref>
              <propertyref name="ComObject" visibility="public">
              </propertyref>
              <propertyref name="Components" visibility="public">
              </propertyref>
              <propertyref name="ComponentCount" visibility="public">
              </propertyref>
              <propertyref name="ComponentIndex" visibility="public">
              </propertyref>
              <propertyref name="ComponentState" visibility="public">
              </propertyref>
              <propertyref name="ComponentStyle" visibility="public">
              </propertyref>
              <propertyref name="DesignInfo" visibility="public">
              </propertyref>
              <propertyref name="Owner" visibility="public">
              </propertyref>
              <propertyref name="VCLComObject" visibility="public">
              </propertyref>
              <propertyref name="Observers" visibility="public">
              </propertyref>
              <propertyref name="Name" visibility="published">
              </propertyref>
              <propertyref name="Tag" visibility="published">
              </propertyref>
              <ancestor name="TPersistent" namespace="System.Classes">
                <methodref name="AssignError" visibility="private">
                </methodref>
                <methodref name="AssignTo" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="DefineProperties" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="GetOwner" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor override">
                </methodref>
                <methodref name="Assign" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="GetNamePath" visibility="public" procflags="dynamic">
                </methodref>
                <ancestor name="TObject" namespace="System">
                  <methodref name="Create" visibility="public" procflags="constructor">
                  </methodref>
                  <methodref name="Free" visibility="public">
                  </methodref>
                  <methodref name="DisposeOf" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="InitInstance" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="CleanupInstance" visibility="public">
                  </methodref>
                  <methodref name="ClassType" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="ClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassNameIs" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassParent" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="ClassInfo" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InstanceSize" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InheritsFrom" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="QualifiedClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="GetInterface" visibility="public">
                  </methodref>
                  <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="UnitName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="UnitScope" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="Equals" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="GetHashCode" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="ToString" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="SafeCallException" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Dispatch" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="NewInstance" visibility="public" procflags="class virtual">
                  </methodref>
                  <methodref name="FreeInstance" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                  </methodref>
                  <methodref name="GetDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <propertyref name="Disposed" visibility="protected">
                  </propertyref>
                </ancestor>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <procedure name="CustomTextChanged" visibility="protected" procflags="override" file="FMX.Media.pas" line="530">
      <devnotes><summary>
Updates the value of the Text property to be the value of the CustomText property or, if CustomText is an empty string, to be the default text of the action: &quot;Stop&quot;.
TMediaPlayerStop calls CustomTextChanged when you change the value of the MediaPlayer property of your action, and when the action updates.
</summary></devnotes></procedure>
      <function name="Update" visibility="public" procflags="override" file="FMX.Media.pas" line="532">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
Provides an opportunity to execute centralized code when an application is idle.
FMX.Media.TMediaPlayerStop.Update inherits from System.Classes.TBasicAction.Update. All content below this line refers to System.Classes.TBasicAction.Update.
Provides an opportunity to execute centralized code when an application is idle.
Update triggers the OnUpdate event handler. Update returns True if an event handler was found, False otherwise. When the application is idle, the OnUpdate event occurs for every action. This provides an opportunity for applications to execute centralized code for enabling and disabling, checking and unchecking, and so on.
</summary></devnotes></function>
      <procedure name="ExecuteTarget" visibility="public" procflags="override" file="FMX.Media.pas" line="533">
        <parameters>
          <parameter name="Target" type="TObject"/>
        </parameters>
      <devnotes><summary>
Executes the action on the media player of the MediaPlayer property. The specified Target is ignored.
</summary></devnotes></procedure>
      <property name="MediaPlayer" visibility="published" read="FMediaPlayer" write="SetMediaPlayer" type="TMediaPlayer" hoisted="true" file="FMX.Media.pas" line="535"/>
    </members>
  </class>
  <class name="TMediaPlayerPlayPause" file="FMX.Media.pas" line="542">
    
    <ancestor name="TCustomMediaPlayerAction" namespace="FMX.Media">
      <methodref name="SetMediaPlayer" visibility="private"/>
      <methodref name="Notification" visibility="protected" procflags="override"/>
      <methodref name="Create" visibility="public" procflags="constructor override">
      </methodref>
      <methodref name="HandlesTarget" visibility="public" procflags="override"/>
      <methodref name="Update" visibility="public" procflags="override"/>
      <propertyref name="MediaPlayer" visibility="public">
      </propertyref>
      <propertyref name="CustomText" visibility="published"/>
      <propertyref name="ImageIndex" visibility="published"/>
      <propertyref name="ShortCut" visibility="published"/>
      <propertyref name="SecondaryShortCuts" visibility="published"/>
      <propertyref name="Visible" visibility="published"/>
      <propertyref name="UnsupportedArchitectures" visibility="published"/>
      <propertyref name="OnUpdate" visibility="published"/>
      <ancestor name="TCustomAction" namespace="FMX.ActnList">
        <methodref name="GetText" visibility="private" procflags="inline">
        </methodref>
        <methodref name="SetText" visibility="private" procflags="inline">
        </methodref>
        <methodref name="GetCustomActionList" visibility="private">
        </methodref>
        <methodref name="SetCustomActionList" visibility="private">
        </methodref>
        <methodref name="ReaderCaptionProc" visibility="private">
        </methodref>
        <methodref name="WriterCaptionProc" visibility="private">
        </methodref>
        <methodref name="ReaderImageIndexProc" visibility="private">
        </methodref>
        <methodref name="WriterImageIndexProc" visibility="private">
        </methodref>
        <methodref name="SetUnsupportedArchitectures" visibility="private">
        </methodref>
        <methodref name="SetUnsupportedPlatforms" visibility="private">
        </methodref>
        <methodref name="SetCustomText" visibility="private">
        </methodref>
        <methodref name="SetHideIfUnsupportedInterface" visibility="private">
        </methodref>
        <methodref name="UpdateSupported" visibility="protected">
        </methodref>
        <methodref name="IsSupportedInterface" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CreateShortCutList" visibility="protected" procflags="override">
        </methodref>
        <methodref name="DefineProperties" visibility="protected" procflags="override">
        </methodref>
        <methodref name="SetTarget" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetEnabled" visibility="protected" procflags="override">
        </methodref>
        <methodref name="SetVisible" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Loaded" visibility="protected" procflags="override">
        </methodref>
        <methodref name="CustomTextChanged" visibility="protected" procflags="virtual">
        </methodref>
        <propertyref name="CustomText" visibility="protected">
        </propertyref>
        <methodref name="Create" visibility="public" procflags="constructor override">
        </methodref>
        <methodref name="Execute" visibility="public" procflags="override">
        </methodref>
        <methodref name="Update" visibility="public" procflags="override">
        </methodref>
        <methodref name="IsDialogKey" visibility="public">
        </methodref>
        <propertyref name="Text" visibility="public">
        </propertyref>
        <propertyref name="Caption" visibility="public">
        </propertyref>
        <propertyref name="ActionList" visibility="public">
        </propertyref>
        <propertyref name="HideIfUnsupportedInterface" visibility="public">
        </propertyref>
        <propertyref name="ShortCutPressed" visibility="public">
        </propertyref>
        <propertyref name="Target" visibility="public">
        </propertyref>
        <propertyref name="UnsupportedArchitectures" visibility="public">
        </propertyref>
        <propertyref name="UnsupportedPlatforms" visibility="public">
        </propertyref>
        <propertyref name="Supported" visibility="public">
        </propertyref>
        <ancestor name="TContainedAction" namespace="System.Actions">
          <methodref name="GetIndex" visibility="private">
          </methodref>
          <methodref name="SetIndex" visibility="private">
          </methodref>
          <methodref name="SetCategory" visibility="private">
          </methodref>
          <methodref name="GetSecondaryShortCuts" visibility="private">
          </methodref>
          <methodref name="SetSecondaryShortCuts" visibility="private">
          </methodref>
          <methodref name="IsSecondaryShortCutsStored" visibility="private">
          </methodref>
          <methodref name="SetActionList" visibility="private">
          </methodref>
          <methodref name="ReadState" visibility="protected" procflags="override">
          </methodref>
          <methodref name="SecondaryShortCutsCreated" visibility="protected">
          </methodref>
          <methodref name="CreateShortCutList" visibility="protected" procflags="virtual">
          </methodref>
          <propertyref name="SavedEnabledState" visibility="protected">
          </propertyref>
          <methodref name="AssignTo" visibility="protected" procflags="override">
          </methodref>
          <methodref name="HandleShortCut" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetAutoCheck" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetCaption" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetName" visibility="protected" procflags="override">
          </methodref>
          <methodref name="SetChecked" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetEnabled" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetGroupIndex" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetHelpContext" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetHelpKeyword" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetHelpType" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetHint" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetVisible" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetShortCut" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetImageIndex" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetStatusAction" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="Create" visibility="public" procflags="constructor override">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="GetParentComponent" visibility="public" procflags="override">
          </methodref>
          <methodref name="HasParent" visibility="public" procflags="override">
          </methodref>
          <methodref name="SetParentComponent" visibility="public" procflags="override">
          </methodref>
          <propertyref name="ActionList" visibility="public">
          </propertyref>
          <methodref name="Suspended" visibility="public" procflags="override">
          </methodref>
          <propertyref name="Index" visibility="public">
          </propertyref>
          <propertyref name="DisableIfNoHandler" visibility="public">
          </propertyref>
          <propertyref name="AutoCheck" visibility="public">
          </propertyref>
          <propertyref name="Caption" visibility="public">
          </propertyref>
          <propertyref name="Checked" visibility="public">
          </propertyref>
          <propertyref name="Enabled" visibility="public">
          </propertyref>
          <propertyref name="GroupIndex" visibility="public">
          </propertyref>
          <propertyref name="HelpContext" visibility="public">
          </propertyref>
          <propertyref name="HelpKeyword" visibility="public">
          </propertyref>
          <propertyref name="HelpType" visibility="public">
          </propertyref>
          <propertyref name="Hint" visibility="public">
          </propertyref>
          <propertyref name="Visible" visibility="public">
          </propertyref>
          <propertyref name="ShortCut" visibility="public">
          </propertyref>
          <propertyref name="SecondaryShortCuts" visibility="public">
          </propertyref>
          <propertyref name="ImageIndex" visibility="public">
          </propertyref>
          <methodref name="DoHint" visibility="public" procflags="dynamic">
          </methodref>
          <eventref name="OnHint" visibility="public">
          </eventref>
          <propertyref name="StatusAction" visibility="public">
          </propertyref>
          <propertyref name="Category" visibility="published">
          </propertyref>
          <ancestor name="TBasicAction" namespace="System.Classes">
            <methodref name="GetClientCount" visibility="private">
            </methodref>
            <methodref name="GetClient" visibility="private">
            </methodref>
            <methodref name="SetActionComponent" visibility="private">
            </methodref>
            <methodref name="Change" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetOnExecute" visibility="protected" procflags="virtual">
            </methodref>
            <eventref name="OnChange" visibility="protected">
            </eventref>
            <methodref name="Notification" visibility="protected" procflags="override">
            </methodref>
            <propertyref name="ClientCount" visibility="protected">
            </propertyref>
            <propertyref name="Clients" visibility="protected">
            </propertyref>
            <methodref name="RegisterChanges" visibility="protected">
            </methodref>
            <methodref name="UnRegisterChanges" visibility="protected">
            </methodref>
            <methodref name="Create" visibility="public" procflags="constructor override">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor override">
            </methodref>
            <methodref name="Suspended" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="HandlesTarget" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="UpdateTarget" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="ExecuteTarget" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Execute" visibility="public" procflags="dynamic">
            </methodref>
            <methodref name="Update" visibility="public" procflags="virtual">
            </methodref>
            <propertyref name="ActionComponent" visibility="public">
            </propertyref>
            <eventref name="OnExecute" visibility="public">
            </eventref>
            <eventref name="OnUpdate" visibility="public">
            </eventref>
            <ancestor name="TComponent" namespace="System.Classes">
              <interfaces>
                <implements name="IInterfaceComponentReference"/>
                <implements name="IInterface"/>
              </interfaces>
              <methodref name="GetComObject" visibility="private">
              </methodref>
              <methodref name="GetComponent" visibility="private">
              </methodref>
              <methodref name="GetComponentCount" visibility="private">
              </methodref>
              <methodref name="GetComponentIndex" visibility="private">
              </methodref>
              <methodref name="Insert" visibility="private">
              </methodref>
              <methodref name="ReadLeft" visibility="private">
              </methodref>
              <methodref name="ReadTop" visibility="private">
              </methodref>
              <methodref name="Remove" visibility="private">
              </methodref>
              <methodref name="RemoveNotification" visibility="private">
              </methodref>
              <methodref name="SetComponentIndex" visibility="private">
              </methodref>
              <methodref name="SetReference" visibility="private">
              </methodref>
              <methodref name="WriteLeft" visibility="private">
              </methodref>
              <methodref name="WriteTop" visibility="private">
              </methodref>
              <methodref name="IntfGetComponent" visibility="private">
              </methodref>
              <methodref name="DoGetDeltaStreams" visibility="private">
              </methodref>
              <methodref name="ReadDeltaStream" visibility="private">
              </methodref>
              <methodref name="ReadDeltaState" visibility="private">
              </methodref>
              <methodref name="FindSortedComponent" visibility="private">
              </methodref>
              <methodref name="AddSortedComponent" visibility="private">
              </methodref>
              <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
              </methodref>
              <methodref name="Create@" visibility="class private" procflags="class constructor noself">
              </methodref>
              <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ChangeName" visibility="protected">
              </methodref>
              <methodref name="DefineProperties" visibility="protected" procflags="override">
              </methodref>
              <methodref name="GetChildren" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="GetOwner" visibility="protected" procflags="override">
              </methodref>
              <methodref name="Loaded" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Notification" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="ReadState" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="CanObserve" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetObservers" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetAncestor" visibility="protected">
              </methodref>
              <methodref name="SetDesigning" visibility="protected">
              </methodref>
              <methodref name="SetInline" visibility="protected">
              </methodref>
              <methodref name="SetDesignInstance" visibility="protected">
              </methodref>
              <methodref name="SetName" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="Updating" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="Updated" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
              </methodref>
              <methodref name="ValidateRename" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="WriteState" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="RemoveFreeNotifications" visibility="protected">
              </methodref>
              <methodref name="QueryInterface" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="_AddRef" visibility="protected">
              </methodref>
              <methodref name="_Release" visibility="protected">
              </methodref>
              <methodref name="GetTypeInfoCount" visibility="protected">
              </methodref>
              <methodref name="GetTypeInfo" visibility="protected">
              </methodref>
              <methodref name="GetIDsOfNames" visibility="protected">
              </methodref>
              <methodref name="Invoke" visibility="protected">
              </methodref>
              <eventref name="OnGetDeltaStreams" visibility="protected">
              </eventref>
              <methodref name="Create" visibility="public" procflags="constructor virtual">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor override">
              </methodref>
              <methodref name="BeforeDestruction" visibility="public" procflags="override">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="EndInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="EndInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="EndFunctionInvoke" visibility="public">
              </methodref>
              <methodref name="DestroyComponents" visibility="public">
              </methodref>
              <methodref name="Destroying" visibility="public">
              </methodref>
              <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
              </methodref>
              <methodref name="FindComponent" visibility="public">
              </methodref>
              <methodref name="FreeNotification" visibility="public">
              </methodref>
              <methodref name="RemoveFreeNotification" visibility="public">
              </methodref>
              <methodref name="FreeOnRelease" visibility="public">
              </methodref>
              <methodref name="GetEnumerator" visibility="public" procflags="inline">
              </methodref>
              <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
              </methodref>
              <methodref name="GetNamePath" visibility="public" procflags="override">
              </methodref>
              <methodref name="HasParent" visibility="public" procflags="dynamic">
              </methodref>
              <methodref name="InsertComponent" visibility="public">
              </methodref>
              <methodref name="RemoveComponent" visibility="public">
              </methodref>
              <methodref name="SetSubComponent" visibility="public">
              </methodref>
              <methodref name="SafeCallException" visibility="public" procflags="override">
              </methodref>
              <methodref name="UpdateAction" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="IsImplementorOf" visibility="public">
              </methodref>
              <methodref name="ReferenceInterface" visibility="public">
              </methodref>
              <propertyref name="ComObject" visibility="public">
              </propertyref>
              <propertyref name="Components" visibility="public">
              </propertyref>
              <propertyref name="ComponentCount" visibility="public">
              </propertyref>
              <propertyref name="ComponentIndex" visibility="public">
              </propertyref>
              <propertyref name="ComponentState" visibility="public">
              </propertyref>
              <propertyref name="ComponentStyle" visibility="public">
              </propertyref>
              <propertyref name="DesignInfo" visibility="public">
              </propertyref>
              <propertyref name="Owner" visibility="public">
              </propertyref>
              <propertyref name="VCLComObject" visibility="public">
              </propertyref>
              <propertyref name="Observers" visibility="public">
              </propertyref>
              <propertyref name="Name" visibility="published">
              </propertyref>
              <propertyref name="Tag" visibility="published">
              </propertyref>
              <ancestor name="TPersistent" namespace="System.Classes">
                <methodref name="AssignError" visibility="private">
                </methodref>
                <methodref name="AssignTo" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="DefineProperties" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="GetOwner" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor override">
                </methodref>
                <methodref name="Assign" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="GetNamePath" visibility="public" procflags="dynamic">
                </methodref>
                <ancestor name="TObject" namespace="System">
                  <methodref name="Create" visibility="public" procflags="constructor">
                  </methodref>
                  <methodref name="Free" visibility="public">
                  </methodref>
                  <methodref name="DisposeOf" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="InitInstance" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="CleanupInstance" visibility="public">
                  </methodref>
                  <methodref name="ClassType" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="ClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassNameIs" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassParent" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="ClassInfo" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InstanceSize" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InheritsFrom" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="QualifiedClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="GetInterface" visibility="public">
                  </methodref>
                  <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="UnitName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="UnitScope" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="Equals" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="GetHashCode" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="ToString" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="SafeCallException" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Dispatch" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="NewInstance" visibility="public" procflags="class virtual">
                  </methodref>
                  <methodref name="FreeInstance" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                  </methodref>
                  <methodref name="GetDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <propertyref name="Disposed" visibility="protected">
                  </propertyref>
                </ancestor>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <procedure name="CustomTextChanged" visibility="protected" procflags="override" file="FMX.Media.pas" line="544">
      <devnotes><summary>
Updates the value of the Text property to be the value of the CustomText property or, if CustomText is an empty string, to be the default text of the action: &quot;Pause&quot; if the state of the media player is Playing, or &quot;Play&quot; otherwise.
TMediaPlayerPlayPause calls CustomTextChanged when you change the value of the MediaPlayer property of your action, and when the action updates.
</summary></devnotes></procedure>
      <function name="Update" visibility="public" procflags="override" file="FMX.Media.pas" line="546">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
Provides an opportunity to execute centralized code when an application is idle.
FMX.Media.TMediaPlayerPlayPause.Update inherits from System.Classes.TBasicAction.Update. All content below this line refers to System.Classes.TBasicAction.Update.
Provides an opportunity to execute centralized code when an application is idle.
Update triggers the OnUpdate event handler. Update returns True if an event handler was found, False otherwise. When the application is idle, the OnUpdate event occurs for every action. This provides an opportunity for applications to execute centralized code for enabling and disabling, checking and unchecking, and so on.
</summary></devnotes></function>
      <procedure name="ExecuteTarget" visibility="public" procflags="override" file="FMX.Media.pas" line="547">
        <parameters>
          <parameter name="Target" type="TObject"/>
        </parameters>
      <devnotes><summary>
Executes the action on the media player of the MediaPlayer property. The specified Target is ignored.
</summary></devnotes></procedure>
      <property name="MediaPlayer" visibility="published" read="FMediaPlayer" write="SetMediaPlayer" type="TMediaPlayer" hoisted="true" file="FMX.Media.pas" line="549"/>
    </members>
  </class>
  <class name="TMediaPlayerValue" file="FMX.Media.pas" line="554">
    
    <ancestor name="TCustomValueRangeAction" namespace="FMX.StdActns">
      <methodref name="GetValueRange" visibility="private">
      </methodref>
      <methodref name="SetValueRange" visibility="private">
      </methodref>
      <methodref name="CreateValueRange" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="Loaded" visibility="protected" procflags="override">
      </methodref>
      <methodref name="Create" visibility="public" procflags="constructor override">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor override">
      </methodref>
      <propertyref name="ValueRange" visibility="public">
      </propertyref>
      <ancestor name="TCustomControlAction" namespace="FMX.Controls">
        <methodref name="SetPopupMenu" visibility="private">
        </methodref>
        <methodref name="Notification" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Create" visibility="public" procflags="constructor override">
        </methodref>
        <propertyref name="PopupMenu" visibility="public">
        </propertyref>
        <ancestor name="TCustomAction" namespace="FMX.ActnList">
          <methodref name="GetText" visibility="private" procflags="inline">
          </methodref>
          <methodref name="SetText" visibility="private" procflags="inline">
          </methodref>
          <methodref name="GetCustomActionList" visibility="private">
          </methodref>
          <methodref name="SetCustomActionList" visibility="private">
          </methodref>
          <methodref name="ReaderCaptionProc" visibility="private">
          </methodref>
          <methodref name="WriterCaptionProc" visibility="private">
          </methodref>
          <methodref name="ReaderImageIndexProc" visibility="private">
          </methodref>
          <methodref name="WriterImageIndexProc" visibility="private">
          </methodref>
          <methodref name="SetUnsupportedArchitectures" visibility="private">
          </methodref>
          <methodref name="SetUnsupportedPlatforms" visibility="private">
          </methodref>
          <methodref name="SetCustomText" visibility="private">
          </methodref>
          <methodref name="SetHideIfUnsupportedInterface" visibility="private">
          </methodref>
          <methodref name="UpdateSupported" visibility="protected">
          </methodref>
          <methodref name="IsSupportedInterface" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="CreateShortCutList" visibility="protected" procflags="override">
          </methodref>
          <methodref name="DefineProperties" visibility="protected" procflags="override">
          </methodref>
          <methodref name="SetTarget" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetEnabled" visibility="protected" procflags="override">
          </methodref>
          <methodref name="SetVisible" visibility="protected" procflags="override">
          </methodref>
          <methodref name="Loaded" visibility="protected" procflags="override">
          </methodref>
          <methodref name="CustomTextChanged" visibility="protected" procflags="virtual">
          </methodref>
          <propertyref name="CustomText" visibility="protected">
          </propertyref>
          <methodref name="Create" visibility="public" procflags="constructor override">
          </methodref>
          <methodref name="Execute" visibility="public" procflags="override">
          </methodref>
          <methodref name="Update" visibility="public" procflags="override">
          </methodref>
          <methodref name="IsDialogKey" visibility="public">
          </methodref>
          <propertyref name="Text" visibility="public">
          </propertyref>
          <propertyref name="Caption" visibility="public">
          </propertyref>
          <propertyref name="ActionList" visibility="public">
          </propertyref>
          <propertyref name="HideIfUnsupportedInterface" visibility="public">
          </propertyref>
          <propertyref name="ShortCutPressed" visibility="public">
          </propertyref>
          <propertyref name="Target" visibility="public">
          </propertyref>
          <propertyref name="UnsupportedArchitectures" visibility="public">
          </propertyref>
          <propertyref name="UnsupportedPlatforms" visibility="public">
          </propertyref>
          <propertyref name="Supported" visibility="public">
          </propertyref>
          <ancestor name="TContainedAction" namespace="System.Actions">
            <methodref name="GetIndex" visibility="private">
            </methodref>
            <methodref name="SetIndex" visibility="private">
            </methodref>
            <methodref name="SetCategory" visibility="private">
            </methodref>
            <methodref name="GetSecondaryShortCuts" visibility="private">
            </methodref>
            <methodref name="SetSecondaryShortCuts" visibility="private">
            </methodref>
            <methodref name="IsSecondaryShortCutsStored" visibility="private">
            </methodref>
            <methodref name="SetActionList" visibility="private">
            </methodref>
            <methodref name="ReadState" visibility="protected" procflags="override">
            </methodref>
            <methodref name="SecondaryShortCutsCreated" visibility="protected">
            </methodref>
            <methodref name="CreateShortCutList" visibility="protected" procflags="virtual">
            </methodref>
            <propertyref name="SavedEnabledState" visibility="protected">
            </propertyref>
            <methodref name="AssignTo" visibility="protected" procflags="override">
            </methodref>
            <methodref name="HandleShortCut" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetAutoCheck" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetCaption" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetName" visibility="protected" procflags="override">
            </methodref>
            <methodref name="SetChecked" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetEnabled" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetGroupIndex" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetHelpContext" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetHelpKeyword" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetHelpType" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetHint" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetVisible" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetShortCut" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetImageIndex" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetStatusAction" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Create" visibility="public" procflags="constructor override">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor override">
            </methodref>
            <methodref name="GetParentComponent" visibility="public" procflags="override">
            </methodref>
            <methodref name="HasParent" visibility="public" procflags="override">
            </methodref>
            <methodref name="SetParentComponent" visibility="public" procflags="override">
            </methodref>
            <propertyref name="ActionList" visibility="public">
            </propertyref>
            <methodref name="Suspended" visibility="public" procflags="override">
            </methodref>
            <propertyref name="Index" visibility="public">
            </propertyref>
            <propertyref name="DisableIfNoHandler" visibility="public">
            </propertyref>
            <propertyref name="AutoCheck" visibility="public">
            </propertyref>
            <propertyref name="Caption" visibility="public">
            </propertyref>
            <propertyref name="Checked" visibility="public">
            </propertyref>
            <propertyref name="Enabled" visibility="public">
            </propertyref>
            <propertyref name="GroupIndex" visibility="public">
            </propertyref>
            <propertyref name="HelpContext" visibility="public">
            </propertyref>
            <propertyref name="HelpKeyword" visibility="public">
            </propertyref>
            <propertyref name="HelpType" visibility="public">
            </propertyref>
            <propertyref name="Hint" visibility="public">
            </propertyref>
            <propertyref name="Visible" visibility="public">
            </propertyref>
            <propertyref name="ShortCut" visibility="public">
            </propertyref>
            <propertyref name="SecondaryShortCuts" visibility="public">
            </propertyref>
            <propertyref name="ImageIndex" visibility="public">
            </propertyref>
            <methodref name="DoHint" visibility="public" procflags="dynamic">
            </methodref>
            <eventref name="OnHint" visibility="public">
            </eventref>
            <propertyref name="StatusAction" visibility="public">
            </propertyref>
            <propertyref name="Category" visibility="published">
            </propertyref>
            <ancestor name="TBasicAction" namespace="System.Classes">
              <methodref name="GetClientCount" visibility="private">
              </methodref>
              <methodref name="GetClient" visibility="private">
              </methodref>
              <methodref name="SetActionComponent" visibility="private">
              </methodref>
              <methodref name="Change" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetOnExecute" visibility="protected" procflags="virtual">
              </methodref>
              <eventref name="OnChange" visibility="protected">
              </eventref>
              <methodref name="Notification" visibility="protected" procflags="override">
              </methodref>
              <propertyref name="ClientCount" visibility="protected">
              </propertyref>
              <propertyref name="Clients" visibility="protected">
              </propertyref>
              <methodref name="RegisterChanges" visibility="protected">
              </methodref>
              <methodref name="UnRegisterChanges" visibility="protected">
              </methodref>
              <methodref name="Create" visibility="public" procflags="constructor override">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor override">
              </methodref>
              <methodref name="Suspended" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="HandlesTarget" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="UpdateTarget" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="ExecuteTarget" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="Execute" visibility="public" procflags="dynamic">
              </methodref>
              <methodref name="Update" visibility="public" procflags="virtual">
              </methodref>
              <propertyref name="ActionComponent" visibility="public">
              </propertyref>
              <eventref name="OnExecute" visibility="public">
              </eventref>
              <eventref name="OnUpdate" visibility="public">
              </eventref>
              <ancestor name="TComponent" namespace="System.Classes">
                <interfaces>
                  <implements name="IInterfaceComponentReference"/>
                  <implements name="IInterface"/>
                </interfaces>
                <methodref name="GetComObject" visibility="private">
                </methodref>
                <methodref name="GetComponent" visibility="private">
                </methodref>
                <methodref name="GetComponentCount" visibility="private">
                </methodref>
                <methodref name="GetComponentIndex" visibility="private">
                </methodref>
                <methodref name="Insert" visibility="private">
                </methodref>
                <methodref name="ReadLeft" visibility="private">
                </methodref>
                <methodref name="ReadTop" visibility="private">
                </methodref>
                <methodref name="Remove" visibility="private">
                </methodref>
                <methodref name="RemoveNotification" visibility="private">
                </methodref>
                <methodref name="SetComponentIndex" visibility="private">
                </methodref>
                <methodref name="SetReference" visibility="private">
                </methodref>
                <methodref name="WriteLeft" visibility="private">
                </methodref>
                <methodref name="WriteTop" visibility="private">
                </methodref>
                <methodref name="IntfGetComponent" visibility="private">
                </methodref>
                <methodref name="DoGetDeltaStreams" visibility="private">
                </methodref>
                <methodref name="ReadDeltaStream" visibility="private">
                </methodref>
                <methodref name="ReadDeltaState" visibility="private">
                </methodref>
                <methodref name="FindSortedComponent" visibility="private">
                </methodref>
                <methodref name="AddSortedComponent" visibility="private">
                </methodref>
                <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
                </methodref>
                <methodref name="Create@" visibility="class private" procflags="class constructor noself">
                </methodref>
                <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="ChangeName" visibility="protected">
                </methodref>
                <methodref name="DefineProperties" visibility="protected" procflags="override">
                </methodref>
                <methodref name="GetChildren" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="GetOwner" visibility="protected" procflags="override">
                </methodref>
                <methodref name="Loaded" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="Notification" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="ReadState" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="CanObserve" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="GetObservers" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="SetAncestor" visibility="protected">
                </methodref>
                <methodref name="SetDesigning" visibility="protected">
                </methodref>
                <methodref name="SetInline" visibility="protected">
                </methodref>
                <methodref name="SetDesignInstance" visibility="protected">
                </methodref>
                <methodref name="SetName" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="Updating" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="Updated" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
                </methodref>
                <methodref name="ValidateRename" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="WriteState" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="RemoveFreeNotifications" visibility="protected">
                </methodref>
                <methodref name="QueryInterface" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="_AddRef" visibility="protected">
                </methodref>
                <methodref name="_Release" visibility="protected">
                </methodref>
                <methodref name="GetTypeInfoCount" visibility="protected">
                </methodref>
                <methodref name="GetTypeInfo" visibility="protected">
                </methodref>
                <methodref name="GetIDsOfNames" visibility="protected">
                </methodref>
                <methodref name="Invoke" visibility="protected">
                </methodref>
                <eventref name="OnGetDeltaStreams" visibility="protected">
                </eventref>
                <methodref name="Create" visibility="public" procflags="constructor virtual">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor override">
                </methodref>
                <methodref name="BeforeDestruction" visibility="public" procflags="override">
                </methodref>
                <methodref name="BeginInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="BeginInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="BeginInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="BeginInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="BeginInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="BeginInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="BeginInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="BeginInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="EndInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="EndInvoke" visibility="public" procflags="overload">
                </methodref>
                <methodref name="EndFunctionInvoke" visibility="public">
                </methodref>
                <methodref name="DestroyComponents" visibility="public">
                </methodref>
                <methodref name="Destroying" visibility="public">
                </methodref>
                <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
                </methodref>
                <methodref name="FindComponent" visibility="public">
                </methodref>
                <methodref name="FreeNotification" visibility="public">
                </methodref>
                <methodref name="RemoveFreeNotification" visibility="public">
                </methodref>
                <methodref name="FreeOnRelease" visibility="public">
                </methodref>
                <methodref name="GetEnumerator" visibility="public" procflags="inline">
                </methodref>
                <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
                </methodref>
                <methodref name="GetNamePath" visibility="public" procflags="override">
                </methodref>
                <methodref name="HasParent" visibility="public" procflags="dynamic">
                </methodref>
                <methodref name="InsertComponent" visibility="public">
                </methodref>
                <methodref name="RemoveComponent" visibility="public">
                </methodref>
                <methodref name="SetSubComponent" visibility="public">
                </methodref>
                <methodref name="SafeCallException" visibility="public" procflags="override">
                </methodref>
                <methodref name="UpdateAction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="IsImplementorOf" visibility="public">
                </methodref>
                <methodref name="ReferenceInterface" visibility="public">
                </methodref>
                <propertyref name="ComObject" visibility="public">
                </propertyref>
                <propertyref name="Components" visibility="public">
                </propertyref>
                <propertyref name="ComponentCount" visibility="public">
                </propertyref>
                <propertyref name="ComponentIndex" visibility="public">
                </propertyref>
                <propertyref name="ComponentState" visibility="public">
                </propertyref>
                <propertyref name="ComponentStyle" visibility="public">
                </propertyref>
                <propertyref name="DesignInfo" visibility="public">
                </propertyref>
                <propertyref name="Owner" visibility="public">
                </propertyref>
                <propertyref name="VCLComObject" visibility="public">
                </propertyref>
                <propertyref name="Observers" visibility="public">
                </propertyref>
                <propertyref name="Name" visibility="published">
                </propertyref>
                <propertyref name="Tag" visibility="published">
                </propertyref>
                <ancestor name="TPersistent" namespace="System.Classes">
                  <methodref name="AssignError" visibility="private">
                  </methodref>
                  <methodref name="AssignTo" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="DefineProperties" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="GetOwner" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="Destroy" visibility="public" procflags="destructor override">
                  </methodref>
                  <methodref name="Assign" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="GetNamePath" visibility="public" procflags="dynamic">
                  </methodref>
                  <ancestor name="TObject" namespace="System">
                    <methodref name="Create" visibility="public" procflags="constructor">
                    </methodref>
                    <methodref name="Free" visibility="public">
                    </methodref>
                    <methodref name="DisposeOf" visibility="public" procflags="inline">
                    </methodref>
                    <methodref name="InitInstance" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="CleanupInstance" visibility="public">
                    </methodref>
                    <methodref name="ClassType" visibility="public" procflags="inline">
                    </methodref>
                    <methodref name="ClassName" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="ClassNameIs" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="ClassParent" visibility="public" procflags="class inline">
                    </methodref>
                    <methodref name="ClassInfo" visibility="public" procflags="class inline">
                    </methodref>
                    <methodref name="InstanceSize" visibility="public" procflags="class inline">
                    </methodref>
                    <methodref name="InheritsFrom" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="MethodAddress" visibility="public" procflags="class overload">
                    </methodref>
                    <methodref name="MethodAddress" visibility="public" procflags="class overload">
                    </methodref>
                    <methodref name="MethodName" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="QualifiedClassName" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="FieldAddress" visibility="public" procflags="overload">
                    </methodref>
                    <methodref name="FieldAddress" visibility="public" procflags="overload">
                    </methodref>
                    <methodref name="GetInterface" visibility="public">
                    </methodref>
                    <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                    </methodref>
                    <methodref name="UnitName" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="UnitScope" visibility="public" procflags="class">
                    </methodref>
                    <methodref name="Equals" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="GetHashCode" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="ToString" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="SafeCallException" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="Dispatch" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="NewInstance" visibility="public" procflags="class virtual">
                    </methodref>
                    <methodref name="FreeInstance" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                    </methodref>
                    <methodref name="GetDisposed" visibility="protected" procflags="inline">
                    </methodref>
                    <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                    </methodref>
                    <propertyref name="Disposed" visibility="protected">
                    </propertyref>
                  </ancestor>
                </ancestor>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <enum name="TState" visibility="public" alias="FMX.Media.TState" file="FMX.Media.pas" line="556">
        <element value="0" name="Normal" file="FMX.Media.pas" line="556"/>
        <element value="1" name="ActionUpdating" file="FMX.Media.pas" line="556"/>
        <element value="2" name="ValueUpdating" file="FMX.Media.pas" line="556"/>
      </enum>
      <field name="FMediaPlayer" type="TMediaPlayer" visibility="private" size="4" offset="200" file="FMX.Media.pas" line="558">
        <attributes>
          <attribute name="TObject"/>
        </attributes>
      </field>
      <field name="FState" type="TMediaPlayerValue.TState" visibility="private" size="1" offset="204" file="FMX.Media.pas" line="559"/>
      <procedure name="SetMediaPlayer" visibility="private" file="FMX.Media.pas" line="560">
        <parameters>
          <parameter name="Value" type="TMediaPlayer" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="Notification" visibility="protected" procflags="override" file="FMX.Media.pas" line="562">
        <parameters>
          <parameter name="AComponent" type="TComponent"/>
          <parameter name="Operation" type="TOperation"/>
        </parameters>
      <devnotes><summary>
Responds when components are created or destroyed.
FMX.Media.TMediaPlayerValue.Notification inherits from System.Classes.TBasicAction.Notification. All content below this line refers to System.Classes.TBasicAction.Notification.
Responds when components are created or destroyed.
Do not call the Notification method in an application. Notification is called automatically when the component specified by AComponent is about to be inserted or removed, as specified by Operation. 
TBasicAction overrides the System.Classes.TComponent.Notification method. Notification checks whether the component specified by AComponent is the same as the component stored in the ActionComponent property and whether it is about to be freed. If so, Notification sets the ActionComponent property to nil (Delphi) or NULL (C++).
</summary></devnotes></procedure>
      <function name="CreateValueRange" visibility="protected" procflags="override" file="FMX.Media.pas" line="563">
        <parameters>
          <retval type="TCustomValueRange"/>
        </parameters>
      <devnotes><summary>
Method inherited from TCustomValueRangeAction that TMediaPlayerValue implements to provide a custom instance of a TCustomValueRange subclass to hold the value range that the action handles.
</summary></devnotes></function>
      <property name="State" visibility="protected" read="FState" type="TMediaPlayerValue.TState" file="FMX.Media.pas" line="566">
        <devnotes><summary>
State of the value.
The state of the value may be any of the following:

Normal, which is the default state.
ActionUpdating, the action is being updated.
ValueUpdating, the value is being updated.</summary></devnotes>
      </property>
      <procedure name="UpdateValueAction" visibility="protected" procflags="virtual" file="FMX.Media.pas" line="569">
        <devnotes><summary>
This virtual protected method is called when the value of the action must be updated after a change of the equivalent value in the media player.
</summary></devnotes>
      </procedure>
      <procedure name="UpdateValuePlayer" visibility="protected" procflags="virtual" file="FMX.Media.pas" line="572">
        <devnotes><summary>
This virtual protected method is called when the equivalent value in the media player must be updated after a change of the value of the action.
</summary></devnotes>
      </procedure>
      <constructor name="Create" visibility="public" file="FMX.Media.pas" line="575">
        <devnotes><summary>
Creates an instance of TMediaPlayerValue.
</summary></devnotes>
        <parameters>
          <parameter name="AOwner" type="TComponent"/>
        </parameters>
      </constructor>
      <function name="HandlesTarget" visibility="public" procflags="override" file="FMX.Media.pas" line="576">
        <parameters>
          <parameter name="Target" type="TObject"/>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
Whether Target is appropriate for the action (True) or not (False).
HandlesTarget is always False.


</summary></devnotes></function>
      <function name="Update" visibility="public" procflags="override" file="FMX.Media.pas" line="577">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
Provides an opportunity to execute centralized code when an application is idle.
FMX.Media.TMediaPlayerValue.Update inherits from System.Classes.TBasicAction.Update. All content below this line refers to System.Classes.TBasicAction.Update.
Provides an opportunity to execute centralized code when an application is idle.
Update triggers the OnUpdate event handler. Update returns True if an event handler was found, False otherwise. When the application is idle, the OnUpdate event occurs for every action. This provides an opportunity for applications to execute centralized code for enabling and disabling, checking and unchecking, and so on.
</summary></devnotes></function>
      <property name="MediaPlayer" visibility="public" read="FMediaPlayer" write="SetMediaPlayer" type="TMediaPlayer" file="FMX.Media.pas" line="579">
        <devnotes><summary>
Instance of TMediaPlayer that is target of the value.
</summary></devnotes>
      </property>
      <property name="CustomText" visibility="published" read="FCustomText" write="SetCustomText" type="string" default="0" hoisted="true" file="FMX.Media.pas" line="581"/>
      <property name="ImageIndex" visibility="published" read="FImageIndex" write="SetImageIndex" type="TImageIndex" default="-1" hoisted="true" file="FMX.Media.pas" line="582"/>
      <property name="ShortCut" visibility="published" read="FShortCut" write="SetShortCut" type="TShortCut" default="0" hoisted="true" file="FMX.Media.pas" line="583"/>
      <property name="SecondaryShortCuts" visibility="published" read="GetSecondaryShortCuts" write="SetSecondaryShortCuts" stored="IsSecondaryShortCutsStored" type="TCustomShortCutList" hoisted="true" file="FMX.Media.pas" line="584"/>
      <property name="Visible" visibility="published" read="FVisible" write="SetVisible" type="Boolean" default="1" hoisted="true" file="FMX.Media.pas" line="585"/>
      <property name="UnsupportedArchitectures" visibility="published" read="FUnsupportedArchitectures" write="SetUnsupportedArchitectures" type="TArchitectures" default="0" hoisted="true" file="FMX.Media.pas" line="586"/>
      <event name="OnUpdate" visibility="published" read="FOnUpdate" write="FOnUpdate" type="TNotifyEvent" hoisted="true" file="FMX.Media.pas" line="587"/>
    </members>
  </class>
  <class name="TMediaPlayerCurrentTime" file="FMX.Media.pas" line="598">
    
    <ancestor name="TMediaPlayerValue" namespace="FMX.Media">
      <methodref name="SetMediaPlayer" visibility="private"/>
      <methodref name="Notification" visibility="protected" procflags="override"/>
      <methodref name="CreateValueRange" visibility="protected" procflags="override"/>
      <propertyref name="State" visibility="protected">
      </propertyref>
      <methodref name="UpdateValueAction" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="UpdateValuePlayer" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="Create" visibility="public" procflags="constructor override">
      </methodref>
      <methodref name="HandlesTarget" visibility="public" procflags="override"/>
      <methodref name="Update" visibility="public" procflags="override"/>
      <propertyref name="MediaPlayer" visibility="public">
      </propertyref>
      <propertyref name="CustomText" visibility="published"/>
      <propertyref name="ImageIndex" visibility="published"/>
      <propertyref name="ShortCut" visibility="published"/>
      <propertyref name="SecondaryShortCuts" visibility="published"/>
      <propertyref name="Visible" visibility="published"/>
      <propertyref name="UnsupportedArchitectures" visibility="published"/>
      <propertyref name="OnUpdate" visibility="published"/>
      <ancestor name="TCustomValueRangeAction" namespace="FMX.StdActns">
        <methodref name="GetValueRange" visibility="private">
        </methodref>
        <methodref name="SetValueRange" visibility="private">
        </methodref>
        <methodref name="CreateValueRange" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Loaded" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Create" visibility="public" procflags="constructor override">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor override">
        </methodref>
        <propertyref name="ValueRange" visibility="public">
        </propertyref>
        <ancestor name="TCustomControlAction" namespace="FMX.Controls">
          <methodref name="SetPopupMenu" visibility="private">
          </methodref>
          <methodref name="Notification" visibility="protected" procflags="override">
          </methodref>
          <methodref name="Create" visibility="public" procflags="constructor override">
          </methodref>
          <propertyref name="PopupMenu" visibility="public">
          </propertyref>
          <ancestor name="TCustomAction" namespace="FMX.ActnList">
            <methodref name="GetText" visibility="private" procflags="inline">
            </methodref>
            <methodref name="SetText" visibility="private" procflags="inline">
            </methodref>
            <methodref name="GetCustomActionList" visibility="private">
            </methodref>
            <methodref name="SetCustomActionList" visibility="private">
            </methodref>
            <methodref name="ReaderCaptionProc" visibility="private">
            </methodref>
            <methodref name="WriterCaptionProc" visibility="private">
            </methodref>
            <methodref name="ReaderImageIndexProc" visibility="private">
            </methodref>
            <methodref name="WriterImageIndexProc" visibility="private">
            </methodref>
            <methodref name="SetUnsupportedArchitectures" visibility="private">
            </methodref>
            <methodref name="SetUnsupportedPlatforms" visibility="private">
            </methodref>
            <methodref name="SetCustomText" visibility="private">
            </methodref>
            <methodref name="SetHideIfUnsupportedInterface" visibility="private">
            </methodref>
            <methodref name="UpdateSupported" visibility="protected">
            </methodref>
            <methodref name="IsSupportedInterface" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="CreateShortCutList" visibility="protected" procflags="override">
            </methodref>
            <methodref name="DefineProperties" visibility="protected" procflags="override">
            </methodref>
            <methodref name="SetTarget" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetEnabled" visibility="protected" procflags="override">
            </methodref>
            <methodref name="SetVisible" visibility="protected" procflags="override">
            </methodref>
            <methodref name="Loaded" visibility="protected" procflags="override">
            </methodref>
            <methodref name="CustomTextChanged" visibility="protected" procflags="virtual">
            </methodref>
            <propertyref name="CustomText" visibility="protected">
            </propertyref>
            <methodref name="Create" visibility="public" procflags="constructor override">
            </methodref>
            <methodref name="Execute" visibility="public" procflags="override">
            </methodref>
            <methodref name="Update" visibility="public" procflags="override">
            </methodref>
            <methodref name="IsDialogKey" visibility="public">
            </methodref>
            <propertyref name="Text" visibility="public">
            </propertyref>
            <propertyref name="Caption" visibility="public">
            </propertyref>
            <propertyref name="ActionList" visibility="public">
            </propertyref>
            <propertyref name="HideIfUnsupportedInterface" visibility="public">
            </propertyref>
            <propertyref name="ShortCutPressed" visibility="public">
            </propertyref>
            <propertyref name="Target" visibility="public">
            </propertyref>
            <propertyref name="UnsupportedArchitectures" visibility="public">
            </propertyref>
            <propertyref name="UnsupportedPlatforms" visibility="public">
            </propertyref>
            <propertyref name="Supported" visibility="public">
            </propertyref>
            <ancestor name="TContainedAction" namespace="System.Actions">
              <methodref name="GetIndex" visibility="private">
              </methodref>
              <methodref name="SetIndex" visibility="private">
              </methodref>
              <methodref name="SetCategory" visibility="private">
              </methodref>
              <methodref name="GetSecondaryShortCuts" visibility="private">
              </methodref>
              <methodref name="SetSecondaryShortCuts" visibility="private">
              </methodref>
              <methodref name="IsSecondaryShortCutsStored" visibility="private">
              </methodref>
              <methodref name="SetActionList" visibility="private">
              </methodref>
              <methodref name="ReadState" visibility="protected" procflags="override">
              </methodref>
              <methodref name="SecondaryShortCutsCreated" visibility="protected">
              </methodref>
              <methodref name="CreateShortCutList" visibility="protected" procflags="virtual">
              </methodref>
              <propertyref name="SavedEnabledState" visibility="protected">
              </propertyref>
              <methodref name="AssignTo" visibility="protected" procflags="override">
              </methodref>
              <methodref name="HandleShortCut" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetAutoCheck" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetCaption" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetName" visibility="protected" procflags="override">
              </methodref>
              <methodref name="SetChecked" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetEnabled" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetGroupIndex" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetHelpContext" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetHelpKeyword" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetHelpType" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetHint" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetVisible" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetShortCut" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetImageIndex" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetStatusAction" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Create" visibility="public" procflags="constructor override">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor override">
              </methodref>
              <methodref name="GetParentComponent" visibility="public" procflags="override">
              </methodref>
              <methodref name="HasParent" visibility="public" procflags="override">
              </methodref>
              <methodref name="SetParentComponent" visibility="public" procflags="override">
              </methodref>
              <propertyref name="ActionList" visibility="public">
              </propertyref>
              <methodref name="Suspended" visibility="public" procflags="override">
              </methodref>
              <propertyref name="Index" visibility="public">
              </propertyref>
              <propertyref name="DisableIfNoHandler" visibility="public">
              </propertyref>
              <propertyref name="AutoCheck" visibility="public">
              </propertyref>
              <propertyref name="Caption" visibility="public">
              </propertyref>
              <propertyref name="Checked" visibility="public">
              </propertyref>
              <propertyref name="Enabled" visibility="public">
              </propertyref>
              <propertyref name="GroupIndex" visibility="public">
              </propertyref>
              <propertyref name="HelpContext" visibility="public">
              </propertyref>
              <propertyref name="HelpKeyword" visibility="public">
              </propertyref>
              <propertyref name="HelpType" visibility="public">
              </propertyref>
              <propertyref name="Hint" visibility="public">
              </propertyref>
              <propertyref name="Visible" visibility="public">
              </propertyref>
              <propertyref name="ShortCut" visibility="public">
              </propertyref>
              <propertyref name="SecondaryShortCuts" visibility="public">
              </propertyref>
              <propertyref name="ImageIndex" visibility="public">
              </propertyref>
              <methodref name="DoHint" visibility="public" procflags="dynamic">
              </methodref>
              <eventref name="OnHint" visibility="public">
              </eventref>
              <propertyref name="StatusAction" visibility="public">
              </propertyref>
              <propertyref name="Category" visibility="published">
              </propertyref>
              <ancestor name="TBasicAction" namespace="System.Classes">
                <methodref name="GetClientCount" visibility="private">
                </methodref>
                <methodref name="GetClient" visibility="private">
                </methodref>
                <methodref name="SetActionComponent" visibility="private">
                </methodref>
                <methodref name="Change" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="SetOnExecute" visibility="protected" procflags="virtual">
                </methodref>
                <eventref name="OnChange" visibility="protected">
                </eventref>
                <methodref name="Notification" visibility="protected" procflags="override">
                </methodref>
                <propertyref name="ClientCount" visibility="protected">
                </propertyref>
                <propertyref name="Clients" visibility="protected">
                </propertyref>
                <methodref name="RegisterChanges" visibility="protected">
                </methodref>
                <methodref name="UnRegisterChanges" visibility="protected">
                </methodref>
                <methodref name="Create" visibility="public" procflags="constructor override">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor override">
                </methodref>
                <methodref name="Suspended" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="HandlesTarget" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="UpdateTarget" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="ExecuteTarget" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Execute" visibility="public" procflags="dynamic">
                </methodref>
                <methodref name="Update" visibility="public" procflags="virtual">
                </methodref>
                <propertyref name="ActionComponent" visibility="public">
                </propertyref>
                <eventref name="OnExecute" visibility="public">
                </eventref>
                <eventref name="OnUpdate" visibility="public">
                </eventref>
                <ancestor name="TComponent" namespace="System.Classes">
                  <interfaces>
                    <implements name="IInterfaceComponentReference"/>
                    <implements name="IInterface"/>
                  </interfaces>
                  <methodref name="GetComObject" visibility="private">
                  </methodref>
                  <methodref name="GetComponent" visibility="private">
                  </methodref>
                  <methodref name="GetComponentCount" visibility="private">
                  </methodref>
                  <methodref name="GetComponentIndex" visibility="private">
                  </methodref>
                  <methodref name="Insert" visibility="private">
                  </methodref>
                  <methodref name="ReadLeft" visibility="private">
                  </methodref>
                  <methodref name="ReadTop" visibility="private">
                  </methodref>
                  <methodref name="Remove" visibility="private">
                  </methodref>
                  <methodref name="RemoveNotification" visibility="private">
                  </methodref>
                  <methodref name="SetComponentIndex" visibility="private">
                  </methodref>
                  <methodref name="SetReference" visibility="private">
                  </methodref>
                  <methodref name="WriteLeft" visibility="private">
                  </methodref>
                  <methodref name="WriteTop" visibility="private">
                  </methodref>
                  <methodref name="IntfGetComponent" visibility="private">
                  </methodref>
                  <methodref name="DoGetDeltaStreams" visibility="private">
                  </methodref>
                  <methodref name="ReadDeltaStream" visibility="private">
                  </methodref>
                  <methodref name="ReadDeltaState" visibility="private">
                  </methodref>
                  <methodref name="FindSortedComponent" visibility="private">
                  </methodref>
                  <methodref name="AddSortedComponent" visibility="private">
                  </methodref>
                  <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
                  </methodref>
                  <methodref name="Create@" visibility="class private" procflags="class constructor noself">
                  </methodref>
                  <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="ChangeName" visibility="protected">
                  </methodref>
                  <methodref name="DefineProperties" visibility="protected" procflags="override">
                  </methodref>
                  <methodref name="GetChildren" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="GetOwner" visibility="protected" procflags="override">
                  </methodref>
                  <methodref name="Loaded" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="Notification" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="ReadState" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="CanObserve" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="GetObservers" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="SetAncestor" visibility="protected">
                  </methodref>
                  <methodref name="SetDesigning" visibility="protected">
                  </methodref>
                  <methodref name="SetInline" visibility="protected">
                  </methodref>
                  <methodref name="SetDesignInstance" visibility="protected">
                  </methodref>
                  <methodref name="SetName" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="Updating" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="Updated" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
                  </methodref>
                  <methodref name="ValidateRename" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="WriteState" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="RemoveFreeNotifications" visibility="protected">
                  </methodref>
                  <methodref name="QueryInterface" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="_AddRef" visibility="protected">
                  </methodref>
                  <methodref name="_Release" visibility="protected">
                  </methodref>
                  <methodref name="GetTypeInfoCount" visibility="protected">
                  </methodref>
                  <methodref name="GetTypeInfo" visibility="protected">
                  </methodref>
                  <methodref name="GetIDsOfNames" visibility="protected">
                  </methodref>
                  <methodref name="Invoke" visibility="protected">
                  </methodref>
                  <eventref name="OnGetDeltaStreams" visibility="protected">
                  </eventref>
                  <methodref name="Create" visibility="public" procflags="constructor virtual">
                  </methodref>
                  <methodref name="Destroy" visibility="public" procflags="destructor override">
                  </methodref>
                  <methodref name="BeforeDestruction" visibility="public" procflags="override">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="EndInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="EndInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="EndFunctionInvoke" visibility="public">
                  </methodref>
                  <methodref name="DestroyComponents" visibility="public">
                  </methodref>
                  <methodref name="Destroying" visibility="public">
                  </methodref>
                  <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
                  </methodref>
                  <methodref name="FindComponent" visibility="public">
                  </methodref>
                  <methodref name="FreeNotification" visibility="public">
                  </methodref>
                  <methodref name="RemoveFreeNotification" visibility="public">
                  </methodref>
                  <methodref name="FreeOnRelease" visibility="public">
                  </methodref>
                  <methodref name="GetEnumerator" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
                  </methodref>
                  <methodref name="GetNamePath" visibility="public" procflags="override">
                  </methodref>
                  <methodref name="HasParent" visibility="public" procflags="dynamic">
                  </methodref>
                  <methodref name="InsertComponent" visibility="public">
                  </methodref>
                  <methodref name="RemoveComponent" visibility="public">
                  </methodref>
                  <methodref name="SetSubComponent" visibility="public">
                  </methodref>
                  <methodref name="SafeCallException" visibility="public" procflags="override">
                  </methodref>
                  <methodref name="UpdateAction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="IsImplementorOf" visibility="public">
                  </methodref>
                  <methodref name="ReferenceInterface" visibility="public">
                  </methodref>
                  <propertyref name="ComObject" visibility="public">
                  </propertyref>
                  <propertyref name="Components" visibility="public">
                  </propertyref>
                  <propertyref name="ComponentCount" visibility="public">
                  </propertyref>
                  <propertyref name="ComponentIndex" visibility="public">
                  </propertyref>
                  <propertyref name="ComponentState" visibility="public">
                  </propertyref>
                  <propertyref name="ComponentStyle" visibility="public">
                  </propertyref>
                  <propertyref name="DesignInfo" visibility="public">
                  </propertyref>
                  <propertyref name="Owner" visibility="public">
                  </propertyref>
                  <propertyref name="VCLComObject" visibility="public">
                  </propertyref>
                  <propertyref name="Observers" visibility="public">
                  </propertyref>
                  <propertyref name="Name" visibility="published">
                  </propertyref>
                  <propertyref name="Tag" visibility="published">
                  </propertyref>
                  <ancestor name="TPersistent" namespace="System.Classes">
                    <methodref name="AssignError" visibility="private">
                    </methodref>
                    <methodref name="AssignTo" visibility="protected" procflags="virtual">
                    </methodref>
                    <methodref name="DefineProperties" visibility="protected" procflags="virtual">
                    </methodref>
                    <methodref name="GetOwner" visibility="protected" procflags="dynamic">
                    </methodref>
                    <methodref name="Destroy" visibility="public" procflags="destructor override">
                    </methodref>
                    <methodref name="Assign" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="GetNamePath" visibility="public" procflags="dynamic">
                    </methodref>
                    <ancestor name="TObject" namespace="System">
                      <methodref name="Create" visibility="public" procflags="constructor">
                      </methodref>
                      <methodref name="Free" visibility="public">
                      </methodref>
                      <methodref name="DisposeOf" visibility="public" procflags="inline">
                      </methodref>
                      <methodref name="InitInstance" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="CleanupInstance" visibility="public">
                      </methodref>
                      <methodref name="ClassType" visibility="public" procflags="inline">
                      </methodref>
                      <methodref name="ClassName" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="ClassNameIs" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="ClassParent" visibility="public" procflags="class inline">
                      </methodref>
                      <methodref name="ClassInfo" visibility="public" procflags="class inline">
                      </methodref>
                      <methodref name="InstanceSize" visibility="public" procflags="class inline">
                      </methodref>
                      <methodref name="InheritsFrom" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="MethodAddress" visibility="public" procflags="class overload">
                      </methodref>
                      <methodref name="MethodAddress" visibility="public" procflags="class overload">
                      </methodref>
                      <methodref name="MethodName" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="QualifiedClassName" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="FieldAddress" visibility="public" procflags="overload">
                      </methodref>
                      <methodref name="FieldAddress" visibility="public" procflags="overload">
                      </methodref>
                      <methodref name="GetInterface" visibility="public">
                      </methodref>
                      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                      </methodref>
                      <methodref name="UnitName" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="UnitScope" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="Equals" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="GetHashCode" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="ToString" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="SafeCallException" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="Dispatch" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="NewInstance" visibility="public" procflags="class virtual">
                      </methodref>
                      <methodref name="FreeInstance" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                      </methodref>
                      <methodref name="GetDisposed" visibility="protected" procflags="inline">
                      </methodref>
                      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                      </methodref>
                      <propertyref name="Disposed" visibility="protected">
                      </propertyref>
                    </ancestor>
                  </ancestor>
                </ancestor>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <function name="CreateValueRange" visibility="protected" procflags="override" file="FMX.Media.pas" line="600">
        <parameters>
          <retval type="TCustomValueRange"/>
        </parameters>
      <devnotes><summary>
Method inherited from TCustomValueRangeAction that TMediaPlayerValue implements to provide a custom instance of a TCustomValueRange subclass to hold the value range that the action handles.
FMX.Media.TMediaPlayerCurrentTime.CreateValueRange inherits from FMX.Media.TMediaPlayerValue.CreateValueRange. All content below this line refers to FMX.Media.TMediaPlayerValue.CreateValueRange.
Method inherited from TCustomValueRangeAction that TMediaPlayerValue implements to provide a custom instance of a TCustomValueRange subclass to hold the value range that the action handles.

 See Also
FMX.StdActns.TCustomValueRangeAction
FMX.StdActns.TCustomValueRange

</summary></devnotes></function>
      <procedure name="UpdateValueAction" visibility="protected" procflags="override" file="FMX.Media.pas" line="601">
      <devnotes><summary>
This virtual protected method is called when the value of the action must be updated after a change of the equivalent value in the media player.
FMX.Media.TMediaPlayerCurrentTime.UpdateValueAction inherits from FMX.Media.TMediaPlayerValue.UpdateValueAction. All content below this line refers to FMX.Media.TMediaPlayerValue.UpdateValueAction.
This virtual protected method is called when the value of the action must be updated after a change of the equivalent value in the media player.
</summary></devnotes></procedure>
      <procedure name="UpdateValuePlayer" visibility="protected" procflags="override" file="FMX.Media.pas" line="602">
      <devnotes><summary>
This virtual protected method is called when the equivalent value in the media player must be updated after a change of the value of the action.
FMX.Media.TMediaPlayerCurrentTime.UpdateValuePlayer inherits from FMX.Media.TMediaPlayerValue.UpdateValuePlayer. All content below this line refers to FMX.Media.TMediaPlayerValue.UpdateValuePlayer.
This virtual protected method is called when the equivalent value in the media player must be updated after a change of the value of the action.
</summary></devnotes></procedure>
      <procedure name="CustomTextChanged" visibility="protected" procflags="override" file="FMX.Media.pas" line="603">
      <devnotes><summary>
Updates the value of the Text property to be the value of the CustomText property or, if CustomText is an empty string, to be the default text of the action, which is the current time of the media player. For example: &quot;00:12:34&quot;.
If you define a value for CustomText, you may include time specifiers in your value, which TMediaPlayerCurrentTime replaces by actual time values based on the current time of the media player. For a list of time specifiers, see FormatDateTime.
</summary></devnotes></procedure>
      <property name="MediaPlayer" visibility="published" read="FMediaPlayer" write="SetMediaPlayer" type="TMediaPlayer" hoisted="true" file="FMX.Media.pas" line="605"/>
    </members>
  </class>
  <class name="TMediaPlayerVolume" file="FMX.Media.pas" line="610">
    
    <ancestor name="TMediaPlayerValue" namespace="FMX.Media">
      <methodref name="SetMediaPlayer" visibility="private"/>
      <methodref name="Notification" visibility="protected" procflags="override"/>
      <methodref name="CreateValueRange" visibility="protected" procflags="override"/>
      <propertyref name="State" visibility="protected">
      </propertyref>
      <methodref name="UpdateValueAction" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="UpdateValuePlayer" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="Create" visibility="public" procflags="constructor override">
      </methodref>
      <methodref name="HandlesTarget" visibility="public" procflags="override"/>
      <methodref name="Update" visibility="public" procflags="override"/>
      <propertyref name="MediaPlayer" visibility="public">
      </propertyref>
      <propertyref name="CustomText" visibility="published"/>
      <propertyref name="ImageIndex" visibility="published"/>
      <propertyref name="ShortCut" visibility="published"/>
      <propertyref name="SecondaryShortCuts" visibility="published"/>
      <propertyref name="Visible" visibility="published"/>
      <propertyref name="UnsupportedArchitectures" visibility="published"/>
      <propertyref name="OnUpdate" visibility="published"/>
      <ancestor name="TCustomValueRangeAction" namespace="FMX.StdActns">
        <methodref name="GetValueRange" visibility="private">
        </methodref>
        <methodref name="SetValueRange" visibility="private">
        </methodref>
        <methodref name="CreateValueRange" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Loaded" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Create" visibility="public" procflags="constructor override">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor override">
        </methodref>
        <propertyref name="ValueRange" visibility="public">
        </propertyref>
        <ancestor name="TCustomControlAction" namespace="FMX.Controls">
          <methodref name="SetPopupMenu" visibility="private">
          </methodref>
          <methodref name="Notification" visibility="protected" procflags="override">
          </methodref>
          <methodref name="Create" visibility="public" procflags="constructor override">
          </methodref>
          <propertyref name="PopupMenu" visibility="public">
          </propertyref>
          <ancestor name="TCustomAction" namespace="FMX.ActnList">
            <methodref name="GetText" visibility="private" procflags="inline">
            </methodref>
            <methodref name="SetText" visibility="private" procflags="inline">
            </methodref>
            <methodref name="GetCustomActionList" visibility="private">
            </methodref>
            <methodref name="SetCustomActionList" visibility="private">
            </methodref>
            <methodref name="ReaderCaptionProc" visibility="private">
            </methodref>
            <methodref name="WriterCaptionProc" visibility="private">
            </methodref>
            <methodref name="ReaderImageIndexProc" visibility="private">
            </methodref>
            <methodref name="WriterImageIndexProc" visibility="private">
            </methodref>
            <methodref name="SetUnsupportedArchitectures" visibility="private">
            </methodref>
            <methodref name="SetUnsupportedPlatforms" visibility="private">
            </methodref>
            <methodref name="SetCustomText" visibility="private">
            </methodref>
            <methodref name="SetHideIfUnsupportedInterface" visibility="private">
            </methodref>
            <methodref name="UpdateSupported" visibility="protected">
            </methodref>
            <methodref name="IsSupportedInterface" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="CreateShortCutList" visibility="protected" procflags="override">
            </methodref>
            <methodref name="DefineProperties" visibility="protected" procflags="override">
            </methodref>
            <methodref name="SetTarget" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetEnabled" visibility="protected" procflags="override">
            </methodref>
            <methodref name="SetVisible" visibility="protected" procflags="override">
            </methodref>
            <methodref name="Loaded" visibility="protected" procflags="override">
            </methodref>
            <methodref name="CustomTextChanged" visibility="protected" procflags="virtual">
            </methodref>
            <propertyref name="CustomText" visibility="protected">
            </propertyref>
            <methodref name="Create" visibility="public" procflags="constructor override">
            </methodref>
            <methodref name="Execute" visibility="public" procflags="override">
            </methodref>
            <methodref name="Update" visibility="public" procflags="override">
            </methodref>
            <methodref name="IsDialogKey" visibility="public">
            </methodref>
            <propertyref name="Text" visibility="public">
            </propertyref>
            <propertyref name="Caption" visibility="public">
            </propertyref>
            <propertyref name="ActionList" visibility="public">
            </propertyref>
            <propertyref name="HideIfUnsupportedInterface" visibility="public">
            </propertyref>
            <propertyref name="ShortCutPressed" visibility="public">
            </propertyref>
            <propertyref name="Target" visibility="public">
            </propertyref>
            <propertyref name="UnsupportedArchitectures" visibility="public">
            </propertyref>
            <propertyref name="UnsupportedPlatforms" visibility="public">
            </propertyref>
            <propertyref name="Supported" visibility="public">
            </propertyref>
            <ancestor name="TContainedAction" namespace="System.Actions">
              <methodref name="GetIndex" visibility="private">
              </methodref>
              <methodref name="SetIndex" visibility="private">
              </methodref>
              <methodref name="SetCategory" visibility="private">
              </methodref>
              <methodref name="GetSecondaryShortCuts" visibility="private">
              </methodref>
              <methodref name="SetSecondaryShortCuts" visibility="private">
              </methodref>
              <methodref name="IsSecondaryShortCutsStored" visibility="private">
              </methodref>
              <methodref name="SetActionList" visibility="private">
              </methodref>
              <methodref name="ReadState" visibility="protected" procflags="override">
              </methodref>
              <methodref name="SecondaryShortCutsCreated" visibility="protected">
              </methodref>
              <methodref name="CreateShortCutList" visibility="protected" procflags="virtual">
              </methodref>
              <propertyref name="SavedEnabledState" visibility="protected">
              </propertyref>
              <methodref name="AssignTo" visibility="protected" procflags="override">
              </methodref>
              <methodref name="HandleShortCut" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetAutoCheck" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetCaption" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetName" visibility="protected" procflags="override">
              </methodref>
              <methodref name="SetChecked" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetEnabled" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetGroupIndex" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetHelpContext" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetHelpKeyword" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetHelpType" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetHint" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetVisible" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetShortCut" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetImageIndex" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetStatusAction" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Create" visibility="public" procflags="constructor override">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor override">
              </methodref>
              <methodref name="GetParentComponent" visibility="public" procflags="override">
              </methodref>
              <methodref name="HasParent" visibility="public" procflags="override">
              </methodref>
              <methodref name="SetParentComponent" visibility="public" procflags="override">
              </methodref>
              <propertyref name="ActionList" visibility="public">
              </propertyref>
              <methodref name="Suspended" visibility="public" procflags="override">
              </methodref>
              <propertyref name="Index" visibility="public">
              </propertyref>
              <propertyref name="DisableIfNoHandler" visibility="public">
              </propertyref>
              <propertyref name="AutoCheck" visibility="public">
              </propertyref>
              <propertyref name="Caption" visibility="public">
              </propertyref>
              <propertyref name="Checked" visibility="public">
              </propertyref>
              <propertyref name="Enabled" visibility="public">
              </propertyref>
              <propertyref name="GroupIndex" visibility="public">
              </propertyref>
              <propertyref name="HelpContext" visibility="public">
              </propertyref>
              <propertyref name="HelpKeyword" visibility="public">
              </propertyref>
              <propertyref name="HelpType" visibility="public">
              </propertyref>
              <propertyref name="Hint" visibility="public">
              </propertyref>
              <propertyref name="Visible" visibility="public">
              </propertyref>
              <propertyref name="ShortCut" visibility="public">
              </propertyref>
              <propertyref name="SecondaryShortCuts" visibility="public">
              </propertyref>
              <propertyref name="ImageIndex" visibility="public">
              </propertyref>
              <methodref name="DoHint" visibility="public" procflags="dynamic">
              </methodref>
              <eventref name="OnHint" visibility="public">
              </eventref>
              <propertyref name="StatusAction" visibility="public">
              </propertyref>
              <propertyref name="Category" visibility="published">
              </propertyref>
              <ancestor name="TBasicAction" namespace="System.Classes">
                <methodref name="GetClientCount" visibility="private">
                </methodref>
                <methodref name="GetClient" visibility="private">
                </methodref>
                <methodref name="SetActionComponent" visibility="private">
                </methodref>
                <methodref name="Change" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="SetOnExecute" visibility="protected" procflags="virtual">
                </methodref>
                <eventref name="OnChange" visibility="protected">
                </eventref>
                <methodref name="Notification" visibility="protected" procflags="override">
                </methodref>
                <propertyref name="ClientCount" visibility="protected">
                </propertyref>
                <propertyref name="Clients" visibility="protected">
                </propertyref>
                <methodref name="RegisterChanges" visibility="protected">
                </methodref>
                <methodref name="UnRegisterChanges" visibility="protected">
                </methodref>
                <methodref name="Create" visibility="public" procflags="constructor override">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor override">
                </methodref>
                <methodref name="Suspended" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="HandlesTarget" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="UpdateTarget" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="ExecuteTarget" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Execute" visibility="public" procflags="dynamic">
                </methodref>
                <methodref name="Update" visibility="public" procflags="virtual">
                </methodref>
                <propertyref name="ActionComponent" visibility="public">
                </propertyref>
                <eventref name="OnExecute" visibility="public">
                </eventref>
                <eventref name="OnUpdate" visibility="public">
                </eventref>
                <ancestor name="TComponent" namespace="System.Classes">
                  <interfaces>
                    <implements name="IInterfaceComponentReference"/>
                    <implements name="IInterface"/>
                  </interfaces>
                  <methodref name="GetComObject" visibility="private">
                  </methodref>
                  <methodref name="GetComponent" visibility="private">
                  </methodref>
                  <methodref name="GetComponentCount" visibility="private">
                  </methodref>
                  <methodref name="GetComponentIndex" visibility="private">
                  </methodref>
                  <methodref name="Insert" visibility="private">
                  </methodref>
                  <methodref name="ReadLeft" visibility="private">
                  </methodref>
                  <methodref name="ReadTop" visibility="private">
                  </methodref>
                  <methodref name="Remove" visibility="private">
                  </methodref>
                  <methodref name="RemoveNotification" visibility="private">
                  </methodref>
                  <methodref name="SetComponentIndex" visibility="private">
                  </methodref>
                  <methodref name="SetReference" visibility="private">
                  </methodref>
                  <methodref name="WriteLeft" visibility="private">
                  </methodref>
                  <methodref name="WriteTop" visibility="private">
                  </methodref>
                  <methodref name="IntfGetComponent" visibility="private">
                  </methodref>
                  <methodref name="DoGetDeltaStreams" visibility="private">
                  </methodref>
                  <methodref name="ReadDeltaStream" visibility="private">
                  </methodref>
                  <methodref name="ReadDeltaState" visibility="private">
                  </methodref>
                  <methodref name="FindSortedComponent" visibility="private">
                  </methodref>
                  <methodref name="AddSortedComponent" visibility="private">
                  </methodref>
                  <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
                  </methodref>
                  <methodref name="Create@" visibility="class private" procflags="class constructor noself">
                  </methodref>
                  <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="ChangeName" visibility="protected">
                  </methodref>
                  <methodref name="DefineProperties" visibility="protected" procflags="override">
                  </methodref>
                  <methodref name="GetChildren" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="GetOwner" visibility="protected" procflags="override">
                  </methodref>
                  <methodref name="Loaded" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="Notification" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="ReadState" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="CanObserve" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="GetObservers" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="SetAncestor" visibility="protected">
                  </methodref>
                  <methodref name="SetDesigning" visibility="protected">
                  </methodref>
                  <methodref name="SetInline" visibility="protected">
                  </methodref>
                  <methodref name="SetDesignInstance" visibility="protected">
                  </methodref>
                  <methodref name="SetName" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="Updating" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="Updated" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
                  </methodref>
                  <methodref name="ValidateRename" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
                  </methodref>
                  <methodref name="WriteState" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="RemoveFreeNotifications" visibility="protected">
                  </methodref>
                  <methodref name="QueryInterface" visibility="protected" procflags="virtual">
                  </methodref>
                  <methodref name="_AddRef" visibility="protected">
                  </methodref>
                  <methodref name="_Release" visibility="protected">
                  </methodref>
                  <methodref name="GetTypeInfoCount" visibility="protected">
                  </methodref>
                  <methodref name="GetTypeInfo" visibility="protected">
                  </methodref>
                  <methodref name="GetIDsOfNames" visibility="protected">
                  </methodref>
                  <methodref name="Invoke" visibility="protected">
                  </methodref>
                  <eventref name="OnGetDeltaStreams" visibility="protected">
                  </eventref>
                  <methodref name="Create" visibility="public" procflags="constructor virtual">
                  </methodref>
                  <methodref name="Destroy" visibility="public" procflags="destructor override">
                  </methodref>
                  <methodref name="BeforeDestruction" visibility="public" procflags="override">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="BeginInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="EndInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="EndInvoke" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="EndFunctionInvoke" visibility="public">
                  </methodref>
                  <methodref name="DestroyComponents" visibility="public">
                  </methodref>
                  <methodref name="Destroying" visibility="public">
                  </methodref>
                  <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
                  </methodref>
                  <methodref name="FindComponent" visibility="public">
                  </methodref>
                  <methodref name="FreeNotification" visibility="public">
                  </methodref>
                  <methodref name="RemoveFreeNotification" visibility="public">
                  </methodref>
                  <methodref name="FreeOnRelease" visibility="public">
                  </methodref>
                  <methodref name="GetEnumerator" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
                  </methodref>
                  <methodref name="GetNamePath" visibility="public" procflags="override">
                  </methodref>
                  <methodref name="HasParent" visibility="public" procflags="dynamic">
                  </methodref>
                  <methodref name="InsertComponent" visibility="public">
                  </methodref>
                  <methodref name="RemoveComponent" visibility="public">
                  </methodref>
                  <methodref name="SetSubComponent" visibility="public">
                  </methodref>
                  <methodref name="SafeCallException" visibility="public" procflags="override">
                  </methodref>
                  <methodref name="UpdateAction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="IsImplementorOf" visibility="public">
                  </methodref>
                  <methodref name="ReferenceInterface" visibility="public">
                  </methodref>
                  <propertyref name="ComObject" visibility="public">
                  </propertyref>
                  <propertyref name="Components" visibility="public">
                  </propertyref>
                  <propertyref name="ComponentCount" visibility="public">
                  </propertyref>
                  <propertyref name="ComponentIndex" visibility="public">
                  </propertyref>
                  <propertyref name="ComponentState" visibility="public">
                  </propertyref>
                  <propertyref name="ComponentStyle" visibility="public">
                  </propertyref>
                  <propertyref name="DesignInfo" visibility="public">
                  </propertyref>
                  <propertyref name="Owner" visibility="public">
                  </propertyref>
                  <propertyref name="VCLComObject" visibility="public">
                  </propertyref>
                  <propertyref name="Observers" visibility="public">
                  </propertyref>
                  <propertyref name="Name" visibility="published">
                  </propertyref>
                  <propertyref name="Tag" visibility="published">
                  </propertyref>
                  <ancestor name="TPersistent" namespace="System.Classes">
                    <methodref name="AssignError" visibility="private">
                    </methodref>
                    <methodref name="AssignTo" visibility="protected" procflags="virtual">
                    </methodref>
                    <methodref name="DefineProperties" visibility="protected" procflags="virtual">
                    </methodref>
                    <methodref name="GetOwner" visibility="protected" procflags="dynamic">
                    </methodref>
                    <methodref name="Destroy" visibility="public" procflags="destructor override">
                    </methodref>
                    <methodref name="Assign" visibility="public" procflags="virtual">
                    </methodref>
                    <methodref name="GetNamePath" visibility="public" procflags="dynamic">
                    </methodref>
                    <ancestor name="TObject" namespace="System">
                      <methodref name="Create" visibility="public" procflags="constructor">
                      </methodref>
                      <methodref name="Free" visibility="public">
                      </methodref>
                      <methodref name="DisposeOf" visibility="public" procflags="inline">
                      </methodref>
                      <methodref name="InitInstance" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="CleanupInstance" visibility="public">
                      </methodref>
                      <methodref name="ClassType" visibility="public" procflags="inline">
                      </methodref>
                      <methodref name="ClassName" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="ClassNameIs" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="ClassParent" visibility="public" procflags="class inline">
                      </methodref>
                      <methodref name="ClassInfo" visibility="public" procflags="class inline">
                      </methodref>
                      <methodref name="InstanceSize" visibility="public" procflags="class inline">
                      </methodref>
                      <methodref name="InheritsFrom" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="MethodAddress" visibility="public" procflags="class overload">
                      </methodref>
                      <methodref name="MethodAddress" visibility="public" procflags="class overload">
                      </methodref>
                      <methodref name="MethodName" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="QualifiedClassName" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="FieldAddress" visibility="public" procflags="overload">
                      </methodref>
                      <methodref name="FieldAddress" visibility="public" procflags="overload">
                      </methodref>
                      <methodref name="GetInterface" visibility="public">
                      </methodref>
                      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                      </methodref>
                      <methodref name="UnitName" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="UnitScope" visibility="public" procflags="class">
                      </methodref>
                      <methodref name="Equals" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="GetHashCode" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="ToString" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="SafeCallException" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="Dispatch" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="NewInstance" visibility="public" procflags="class virtual">
                      </methodref>
                      <methodref name="FreeInstance" visibility="public" procflags="virtual">
                      </methodref>
                      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                      </methodref>
                      <methodref name="GetDisposed" visibility="protected" procflags="inline">
                      </methodref>
                      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                      </methodref>
                      <propertyref name="Disposed" visibility="protected">
                      </propertyref>
                    </ancestor>
                  </ancestor>
                </ancestor>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <const name="PrecentCount" visibility="private" type="Integer" file="FMX.Media.pas" line="612">
        <value>
          $64
        </value>
      </const>
      <function name="CreateValueRange" visibility="protected" procflags="override" file="FMX.Media.pas" line="614">
        <parameters>
          <retval type="TCustomValueRange"/>
        </parameters>
      <devnotes><summary>
Method inherited from TCustomValueRangeAction that TMediaPlayerValue implements to provide a custom instance of a TCustomValueRange subclass to hold the value range that the action handles.
FMX.Media.TMediaPlayerVolume.CreateValueRange inherits from FMX.Media.TMediaPlayerValue.CreateValueRange. All content below this line refers to FMX.Media.TMediaPlayerValue.CreateValueRange.
Method inherited from TCustomValueRangeAction that TMediaPlayerValue implements to provide a custom instance of a TCustomValueRange subclass to hold the value range that the action handles.

 See Also
FMX.StdActns.TCustomValueRangeAction
FMX.StdActns.TCustomValueRange

</summary></devnotes></function>
      <procedure name="UpdateValueAction" visibility="protected" procflags="override" file="FMX.Media.pas" line="615">
      <devnotes><summary>
This virtual protected method is called when the value of the action must be updated after a change of the equivalent value in the media player.
FMX.Media.TMediaPlayerVolume.UpdateValueAction inherits from FMX.Media.TMediaPlayerValue.UpdateValueAction. All content below this line refers to FMX.Media.TMediaPlayerValue.UpdateValueAction.
This virtual protected method is called when the value of the action must be updated after a change of the equivalent value in the media player.
</summary></devnotes></procedure>
      <procedure name="UpdateValuePlayer" visibility="protected" procflags="override" file="FMX.Media.pas" line="616">
      <devnotes><summary>
This virtual protected method is called when the equivalent value in the media player must be updated after a change of the value of the action.
FMX.Media.TMediaPlayerVolume.UpdateValuePlayer inherits from FMX.Media.TMediaPlayerValue.UpdateValuePlayer. All content below this line refers to FMX.Media.TMediaPlayerValue.UpdateValuePlayer.
This virtual protected method is called when the equivalent value in the media player must be updated after a change of the value of the action.
</summary></devnotes></procedure>
      <procedure name="CustomTextChanged" visibility="protected" procflags="override" file="FMX.Media.pas" line="617">
      <devnotes><summary>
Updates the value of the Text property to be the value of the CustomText property or, if CustomText is an empty string, to be the default text of the action, which is the volume of the media player in percentage. For example: &quot;74%&quot;.
If you define a value for CustomText, your string must be a format string ready for a single, floating-point value (f). For example: %f%%.
</summary></devnotes></procedure>
      <property name="MediaPlayer" visibility="published" read="FMediaPlayer" write="SetMediaPlayer" type="TMediaPlayer" hoisted="true" file="FMX.Media.pas" line="619"/>
    </members>
  </class>
</namespace>