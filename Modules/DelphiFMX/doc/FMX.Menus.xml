<?xml version="1.0" ?><namespace name="FMX.Menus" platform="Win32">
  <class name="TStartMenuLoopMessage" file="FMX.Menus.pas" line="22">
    
    <members>
      <field name="FRoot" type="IRoot" visibility="private" size="4" offset="4" file="FMX.Menus.pas" line="24"/>
      <constructor name="Create" visibility="public" file="FMX.Menus.pas" line="26">
        <parameters>
          <parameter name="ARoot" type="IRoot" paramflags="const"/>
        </parameters>
      </constructor>
      <property name="Root" visibility="public" read="FRoot" type="IRoot" file="FMX.Menus.pas" line="27"/>
    </members>
  </class>
  <interface name="IMenuView" GUID="{C211C5EA-789A-48C3-9739-900782101C51}" ancestor="IControl" file="FMX.Menus.pas" line="36">
    <devnotes>
       <summary>For internal use only.</summary>
    </devnotes>
    <function name="GetLoop" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="38">
      <parameters>
        <retval type="Boolean"/>
      </parameters>
    </function>
    <procedure name="SetLoop" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="39">
      <parameters>
        <parameter name="Value" type="Boolean" paramflags="const"/>
      </parameters>
    </procedure>
    <function name="GetParentView" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="40">
      <parameters>
        <retval type="IMenuView">
          <devnotes>
             <summary>For internal use only.</summary>
          </devnotes>
        </retval>
      </parameters>
    </function>
    <procedure name="SetParentView" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="41">
      <parameters>
        <parameter name="Value" type="IMenuView" paramflags="const"/>
      </parameters>
    </procedure>
    <function name="GetChildView" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="42">
      <parameters>
        <retval type="IMenuView">
          <devnotes>
             <summary>For internal use only.</summary>
          </devnotes>
        </retval>
      </parameters>
    </function>
    <procedure name="SetChildView" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="43">
      <parameters>
        <parameter name="Value" type="IMenuView" paramflags="const"/>
      </parameters>
    </procedure>
    <function name="GetSelected" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="44">
      <parameters>
        <retval type="TMenuItem">
          <devnotes>
             <summary> This class describe the role and functionality of a menu item.
              This object is used to populate different types of menus defined in FMX:
              main menu, menu bar, popup menu.
             </summary>
          </devnotes>
        </retval>
      </parameters>
    </function>
    <procedure name="SetSelected" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="45">
      <parameters>
        <parameter name="Value" type="TMenuItem" paramflags="const"/>
      </parameters>
    </procedure>
    <function name="GetIsMenuBar" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="46">
      <parameters>
        <retval type="Boolean"/>
      </parameters>
    </function>
    <function name="GetItemsCount" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="47">
      <parameters>
        <retval type="Integer"/>
      </parameters>
    </function>
    <function name="GetItem" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="48">
      <parameters>
        <parameter name="AIndex" type="Integer" paramflags="const"/>
        <retval type="TFmxObject"/>
      </parameters>
    </function>
    <property name="IsMenuBar" visibility="public" read="GetIsMenuBar" type="Boolean" file="FMX.Menus.pas" line="50"/>
    <property name="Loop" visibility="public" read="GetLoop" write="SetLoop" type="Boolean" file="FMX.Menus.pas" line="51"/>
    <property name="ParentView" visibility="public" read="GetParentView" write="SetParentView" type="IMenuView" file="FMX.Menus.pas" line="52"/>
    <property name="ChildView" visibility="public" read="GetChildView" write="SetChildView" type="IMenuView" file="FMX.Menus.pas" line="53"/>
    <property name="Selected" visibility="public" read="GetSelected" write="SetSelected" type="TMenuItem" file="FMX.Menus.pas" line="54"/>
  </interface>
  <interface name="IFMXMenuService" GUID="{8338685D-26BB-4421-AE54-1DC8456DC2A0}" ancestor="IInterface" file="FMX.Menus.pas" line="57">
    <procedure name="StartMenuLoop" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="59">
      <parameters>
        <parameter name="AView" type="IMenuView" paramflags="const"/>
      </parameters>
    </procedure>
    <function name="ShortCutToText" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="60">
      <parameters>
        <parameter name="ShortCut" type="TShortCut"/>
        <retval type="string"/>
      </parameters>
    </function>
    <procedure name="ShortCutToKey" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="61">
      <parameters>
        <parameter name="ShortCut" type="TShortCut"/>
        <parameter name="Key" type="Word" paramflags="var"/>
        <parameter name="Shift" type="TShiftState" paramflags="var"/>
      </parameters>
    </procedure>
    <function name="TextToShortCut" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="62">
      <parameters>
        <parameter name="Text" type="string"/>
        <retval type="Integer"/>
      </parameters>
    </function>
    <procedure name="CreateOSMenu" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="63">
      <parameters>
        <parameter name="AForm" type="TCommonCustomForm"/>
        <parameter name="AMenu" type="IItemsContainer" paramflags="const"/>
      </parameters>
    </procedure>
    <procedure name="UpdateMenuItem" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="64">
      <parameters>
        <parameter name="AItem" type="IItemsContainer" paramflags="const"/>
        <parameter name="AChange" type="TMenuItemChanges"/>
      </parameters>
    </procedure>
    <procedure name="DestroyMenuItem" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="65">
      <parameters>
        <parameter name="AItem" type="IItemsContainer" paramflags="const"/>
      </parameters>
    </procedure>
    <function name="IsMenuBarOnWindowBorder" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="66">
      <parameters>
        <retval type="Boolean"/>
      </parameters>
    </function>
    <procedure name="UpdateMenuBar" visibility="public" procflags="abstract virtual" file="FMX.Menus.pas" line="67">
    </procedure>
  </interface>
  <class name="TMenuItemBitmap" file="FMX.Menus.pas" line="70">
    
    <members>
      <field name="FMenuItem" type="TMenuItem" visibility="private" size="4" offset="48" file="FMX.Menus.pas" line="72"/>
      <procedure name="DoChange" visibility="protected" procflags="override" file="FMX.Menus.pas" line="74">
      </procedure>
      <property name="MenuItem" visibility="public" read="FMenuItem" type="TMenuItem" file="FMX.Menus.pas" line="76"/>
    </members>
  </class>
  <class name="TMenuItem" file="FMX.Menus.pas" line="84">
    
    <ancestor name="TTextControl" namespace="FMX.Controls">
      <interfaces>
        <implements name="IAcceleratorKeyReceiver"/>
        <implements name="ICaption"/>
        <implements name="ITextSettings"/>
      </interfaces>
      <methodref name="GetFont" visibility="private"/>
      <methodref name="GetText" visibility="private"/>
      <methodref name="TextStored" visibility="private"/>
      <methodref name="SetFont" visibility="private"/>
      <methodref name="GetTextAlign" visibility="private"/>
      <methodref name="SetTextAlign" visibility="private"/>
      <methodref name="GetVertTextAlign" visibility="private"/>
      <methodref name="SetVertTextAlign" visibility="private"/>
      <methodref name="GetWordWrap" visibility="private"/>
      <methodref name="SetWordWrap" visibility="private"/>
      <methodref name="GetFontColor" visibility="private"/>
      <methodref name="SetFontColor" visibility="private"/>
      <methodref name="GetTrimming" visibility="private"/>
      <methodref name="SetTrimming" visibility="private"/>
      <methodref name="SetPrefixStyle" visibility="private"/>
      <methodref name="GetDefaultTextSettings" visibility="private"/>
      <methodref name="GetTextSettings" visibility="private"/>
      <methodref name="GetStyledSettings" visibility="private"/>
      <methodref name="GetResultingTextSettings" visibility="private"/>
      <methodref name="DoRootChanging" visibility="protected" procflags="override">
      </methodref>
      <methodref name="DoFilterControlText" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DefineProperties" visibility="protected" procflags="override"/>
      <methodref name="ApplyStyle" visibility="protected" procflags="override"/>
      <methodref name="FreeStyle" visibility="protected" procflags="override"/>
      <methodref name="DoStyleChanged" visibility="protected" procflags="override"/>
      <methodref name="SetText" visibility="protected" procflags="virtual"/>
      <methodref name="SetTextInternal" visibility="protected" procflags="virtual"/>
      <methodref name="SetName" visibility="protected" procflags="override"/>
      <methodref name="GetData" visibility="protected" procflags="override"/>
      <methodref name="SetData" visibility="protected" procflags="override"/>
      <methodref name="ActionChange" visibility="protected" procflags="override"/>
      <methodref name="Loaded" visibility="protected" procflags="override"/>
      <methodref name="FindTextObject" visibility="protected" procflags="virtual"/>
      <methodref name="UpdateTextObject" visibility="protected"/>
      <propertyref name="TextObject" visibility="protected"/>
      <methodref name="DoTextChanged" visibility="protected" procflags="virtual"/>
      <methodref name="DoEndUpdate" visibility="protected" procflags="override"/>
      <methodref name="CalcTextObjectSize" visibility="protected"/>
      <methodref name="SetTextSettings" visibility="protected" procflags="virtual"/>
      <methodref name="SetStyledSettings" visibility="protected" procflags="virtual"/>
      <methodref name="DoChanged" visibility="protected" procflags="virtual"/>
      <methodref name="StyledSettingsStored" visibility="protected" procflags="virtual"/>
      <methodref name="GetTextSettingsClass" visibility="protected" procflags="virtual"/>
      <methodref name="TriggerAcceleratorKey" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="CanTriggerAcceleratorKey" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetAcceleratorChar" visibility="protected">
      </methodref>
      <methodref name="GetAcceleratorCharIndex" visibility="protected">
      </methodref>
      <methodref name="Create" visibility="public" procflags="constructor overload override"/>
      <methodref name="Destroy" visibility="public" procflags="destructor override"/>
      <methodref name="AfterConstruction" visibility="public" procflags="override"/>
      <methodref name="ToString" visibility="public" procflags="override"/>
      <propertyref name="Text" visibility="public"/>
      <propertyref name="DefaultTextSettings" visibility="public"/>
      <propertyref name="TextSettings" visibility="public"/>
      <propertyref name="StyledSettings" visibility="public"/>
      <propertyref name="ResultingTextSettings" visibility="public"/>
      <methodref name="Change" visibility="public"/>
      <propertyref name="Font" visibility="public"/>
      <propertyref name="FontColor" visibility="public"/>
      <propertyref name="VertTextAlign" visibility="public"/>
      <propertyref name="TextAlign" visibility="public"/>
      <propertyref name="WordWrap" visibility="public"/>
      <propertyref name="Trimming" visibility="public"/>
      <propertyref name="PrefixStyle" visibility="public">
      </propertyref>
      <ancestor name="TStyledControl" namespace="FMX.Controls">
        <methodref name="GetStyleData" visibility="class private"/>
        <methodref name="SetStyleData" visibility="class private"/>
        <methodref name="SetStyleLookup" visibility="class private"/>
        <methodref name="ScaleChangedHandler" visibility="class private"/>
        <methodref name="StyleChangedHandler" visibility="class private"/>
        <methodref name="InternalFreeStyle" visibility="private"/>
        <methodref name="SearchInto" visibility="protected" procflags="override"/>
        <methodref name="GetBackIndex" visibility="protected" procflags="override"/>
        <methodref name="IsHelpContextStored" visibility="protected"/>
        <methodref name="SetHelpContext" visibility="protected"/>
        <methodref name="SetHelpKeyword" visibility="protected"/>
        <methodref name="Notification" visibility="protected" procflags="override"/>
        <methodref name="DoSetSize" visibility="protected" procflags="override"/>
        <methodref name="DoApplyStyleLookup" visibility="protected" procflags="virtual"/>
        <methodref name="StyleDataChanged" visibility="protected" procflags="virtual"/>
        <methodref name="RequestStyleData" visibility="protected" procflags="virtual"/>
        <methodref name="Painting" visibility="protected" procflags="override"/>
        <methodref name="ApplyStyle" visibility="protected" procflags="virtual"/>
        <methodref name="FreeStyle" visibility="protected" procflags="virtual"/>
        <methodref name="GetStyleContext" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetDefaultStyleLookupName" visibility="protected" procflags="virtual"/>
        <methodref name="GetParentClassStyleLookupName" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoEnter" visibility="protected" procflags="override"/>
        <methodref name="Disappear" visibility="protected" procflags="override"/>
        <methodref name="AdjustSize" visibility="protected" procflags="virtual"/>
        <methodref name="AdjustFixedSize" visibility="protected" procflags="virtual"/>
        <methodref name="ChooseAdjustType" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DoStyleChanged" visibility="protected" procflags="virtual"/>
        <methodref name="StyleLookupChanged" visibility="protected" procflags="virtual"/>
        <methodref name="RecycleResourceLink" visibility="protected"/>
        <methodref name="KillResourceLink" visibility="protected"/>
        <methodref name="DoDeleteChildren" visibility="protected" procflags="override"/>
        <methodref name="GenerateStyleName" visibility="protected">
        </methodref>
        <methodref name="GetStyleObject" visibility="protected" procflags="overload virtual"/>
        <methodref name="GetStyleObject" visibility="protected" procflags="overload virtual"/>
        <methodref name="SetAdjustSizeValue" visibility="protected" procflags="virtual"/>
        <methodref name="SetAdjustType" visibility="protected" procflags="virtual"/>
        <methodref name="GetResourceLink" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetResourceControl" visibility="protected">
        </methodref>
        <propertyref name="IsNeedStyleLookup" visibility="protected"/>
        <propertyref name="ResourceLink" visibility="protected"/>
        <propertyref name="ResourceControl" visibility="protected"/>
        <methodref name="GetAdjustSizeValue" visibility="protected" procflags="override"/>
        <methodref name="GetAdjustType" visibility="protected" procflags="override"/>
        <methodref name="Create" visibility="public" procflags="constructor overload override"/>
        <methodref name="BeforeDestruction" visibility="public" procflags="override"/>
        <methodref name="Destroy" visibility="public" procflags="destructor override"/>
        <propertyref name="AdjustType" visibility="public"/>
        <propertyref name="AdjustSizeValue" visibility="public"/>
        <propertyref name="StyleState" visibility="public">
        </propertyref>
        <methodref name="RecalcSize" visibility="public" procflags="override"/>
        <methodref name="FindStyleResource" visibility="public" procflags="overload override"/>
        <methodref name="FindStyleResource" visibility="public" procflags="overload">
        </methodref>
        <methodref name="FindAndCloneStyleResource" visibility="public">
        </methodref>
        <methodref name="SetNewScene" visibility="public" procflags="override"/>
        <methodref name="ApplyStyleLookup" visibility="public" procflags="virtual"/>
        <methodref name="NeedStyleLookup" visibility="public" procflags="virtual"/>
        <methodref name="Inflate" visibility="public" procflags="virtual"/>
        <methodref name="PrepareForPaint" visibility="public" procflags="override"/>
        <methodref name="StartTriggerAnimation" visibility="public" procflags="override"/>
        <methodref name="StartTriggerAnimationWait" visibility="public" procflags="override"/>
        <propertyref name="AutoTranslate" visibility="public"/>
        <propertyref name="DefaultStyleLookupName" visibility="public"/>
        <propertyref name="ParentClassStyleLookupName" visibility="public">
        </propertyref>
        <propertyref name="HelpType" visibility="public"/>
        <propertyref name="HelpKeyword" visibility="public"/>
        <propertyref name="HelpContext" visibility="public"/>
        <propertyref name="StylesData" visibility="public"/>
        <propertyref name="StyleLookup" visibility="public"/>
        <propertyref name="LoadableStyle" visibility="public">
        </propertyref>
        <methodref name="LookupStyleObject" visibility="public" procflags="class">
        </methodref>
        <ancestor name="TControl" namespace="FMX.Controls">
          <interfaces>
            <implements name="ITriggerEffect"/>
            <implements name="ITriggerAnimation"/>
            <implements name="ITabStopController"/>
            <implements name="IGestureControl"/>
            <implements name="IEffectContainer"/>
            <implements name="IAlignableObject"/>
            <implements name="IRotatedControl"/>
            <implements name="IAlignRoot"/>
            <implements name="IContainerObject"/>
            <implements name="IControl"/>
          </interfaces>
          <methodref name="AddToEffectsList" visibility="class private"/>
          <methodref name="RemoveFromEffectsList" visibility="class private"/>
          <methodref name="GetInvertAbsoluteMatrix" visibility="class private"/>
          <methodref name="SetPosition" visibility="class private"/>
          <methodref name="SetHitTest" visibility="class private"/>
          <methodref name="SetClipChildren" visibility="class private"/>
          <methodref name="GetCanvas" visibility="class private" procflags="inline"/>
          <methodref name="SetLocked" visibility="class private"/>
          <methodref name="SetTempCanvas" visibility="class private"/>
          <methodref name="SetOpacity" visibility="class private"/>
          <methodref name="IsOpacityStored" visibility="class private"/>
          <methodref name="SetCursor" visibility="class private"/>
          <methodref name="RefreshInheritedCursor" visibility="class private"/>
          <methodref name="RefreshInheritedCursorForChildren" visibility="class private"/>
          <methodref name="GetAbsoluteWidth" visibility="class private"/>
          <methodref name="GetAbsoluteHeight" visibility="class private"/>
          <methodref name="IsAnchorsStored" visibility="class private"/>
          <methodref name="GetEnabled" visibility="class private"/>
          <methodref name="GetCursor" visibility="class private"/>
          <methodref name="GetInheritedCursor" visibility="class private"/>
          <methodref name="GetAbsoluteHasEffect" visibility="class private"/>
          <methodref name="GetAbsoluteHasDisablePaintEffect" visibility="class private"/>
          <methodref name="GetAbsoluteHasAfterPaintEffect" visibility="class private"/>
          <methodref name="PaddingChangedHandler" visibility="class private" procflags="overload"/>
          <methodref name="MarginsChanged" visibility="class private"/>
          <methodref name="MatrixChanged" visibility="class private"/>
          <methodref name="SizeChanged" visibility="class private"/>
          <methodref name="GetControlsCount" visibility="class private"/>
          <methodref name="OnClickStored" visibility="class private"/>
          <methodref name="IsPopupMenuStored" visibility="class private"/>
          <methodref name="RequestAlign" visibility="class private"/>
          <methodref name="SetMinClipHeight" visibility="class private"/>
          <methodref name="SetMinClipWidth" visibility="class private"/>
          <methodref name="UpdateSmallSizeControl" visibility="class private"/>
          <methodref name="Create@" visibility="class private" procflags="class constructor noself"/>
          <methodref name="Destroy@" visibility="class private" procflags="class destructor noself"/>
          <methodref name="SetOnClick" visibility="class private"/>
          <methodref name="GetIsFocused" visibility="class private"/>
          <methodref name="SetPadding" visibility="class private"/>
          <methodref name="SetMargins" visibility="class private"/>
          <methodref name="SetTouchTargetExpansion" visibility="class private"/>
          <methodref name="InternalSizeChanged" visibility="class private"/>
          <methodref name="ReadFixedWidth" visibility="class private"/>
          <methodref name="WriteFixedWidth" visibility="class private"/>
          <methodref name="ReadFixedHeight" visibility="class private"/>
          <methodref name="WriteFixedHeight" visibility="class private"/>
          <methodref name="ReadDesignVisible" visibility="class private"/>
          <methodref name="ReadHint" visibility="class private"/>
          <methodref name="ReadShowHint" visibility="class private"/>
          <methodref name="DisabledOpacityStored" visibility="class private"/>
          <methodref name="SetDisabledOpacity" visibility="class private"/>
          <methodref name="GetAxisAlignedRect" visibility="class private"/>
          <methodref name="GetRotationAngle" visibility="class private"/>
          <methodref name="GetRotationCenter" visibility="class private"/>
          <methodref name="GetScale" visibility="class private"/>
          <methodref name="SetRotationAngle" visibility="class private"/>
          <methodref name="SetRotationCenter" visibility="class private"/>
          <methodref name="SetScale" visibility="class private"/>
          <methodref name="GetTabOrder" visibility="class private"/>
          <methodref name="SetTabOrder" visibility="class private"/>
          <methodref name="GetTabStop" visibility="class private"/>
          <methodref name="SetTabStop" visibility="class private"/>
          <methodref name="SetDisableDisappear" visibility="class private"/>
          <methodref name="GetDisableDisappear" visibility="class private"/>
          <methodref name="UpdateParentProperties" visibility="class private"/>
          <methodref name="CreateTouchManagerIfRequired" visibility="private"/>
          <methodref name="GetTouchManager" visibility="private"/>
          <methodref name="SetTouchManager" visibility="private"/>
          <methodref name="IsShowHintStored" visibility="private"/>
          <methodref name="SetParentShowHint" visibility="private"/>
          <methodref name="SetShowHint" visibility="private"/>
          <methodref name="GetAbsoluteClipRect" visibility="private"/>
          <methodref name="HintStored" visibility="private"/>
          <methodref name="RepaintJointArea" visibility="class protected"/>
          <methodref name="DoAbsoluteChanged" visibility="protected" procflags="virtual"/>
          <methodref name="CheckHitTest" visibility="protected" procflags="virtual"/>
          <methodref name="SetInPaintTo" visibility="protected"/>
          <methodref name="EndUpdateNoChanges" visibility="protected"/>
          <methodref name="SetHint" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetEnabled" visibility="protected" procflags="virtual"/>
          <methodref name="Loaded" visibility="protected" procflags="override"/>
          <methodref name="Updated" visibility="protected" procflags="override"/>
          <methodref name="DefineProperties" visibility="protected" procflags="override"/>
          <methodref name="Notification" visibility="protected" procflags="override"/>
          <methodref name="ParentChanged" visibility="protected" procflags="override"/>
          <methodref name="ChangeOrder" visibility="protected" procflags="override"/>
          <methodref name="ChangeChildren" visibility="protected" procflags="override"/>
          <methodref name="SetVisible" visibility="protected" procflags="virtual"/>
          <methodref name="DoSetWidth" visibility="protected" procflags="virtual" symflags="deprecated">
          </methodref>
          <methodref name="DoSetHeight" visibility="protected" procflags="virtual" symflags="deprecated">
          </methodref>
          <methodref name="DoSetSize" visibility="protected" procflags="virtual"/>
          <methodref name="HandleSizeChanged" visibility="protected" procflags="virtual"/>
          <methodref name="DoMatrixChanged" visibility="protected" procflags="virtual"/>
          <methodref name="SetHeight" visibility="protected" procflags="virtual"/>
          <methodref name="SetWidth" visibility="protected" procflags="virtual"/>
          <methodref name="SetSize" visibility="protected" procflags="overload virtual"/>
          <methodref name="SetSize" visibility="protected" procflags="overload virtual"/>
          <methodref name="GetAbsoluteRect" visibility="protected" procflags="virtual"/>
          <methodref name="GetChildrenMatrix" visibility="protected" procflags="virtual"/>
          <methodref name="GetAbsoluteScale" visibility="protected" procflags="virtual"/>
          <methodref name="GetParentedRect" visibility="protected" procflags="virtual" symflags="deprecated">
          </methodref>
          <methodref name="GetClipRect" visibility="protected" procflags="virtual"/>
          <methodref name="GetEffectsRect" visibility="protected" procflags="virtual"/>
          <methodref name="GetAbsoluteEnabled" visibility="protected" procflags="virtual"/>
          <methodref name="GetChildrenRect" visibility="protected" procflags="virtual"/>
          <methodref name="GetLocalRect" visibility="protected" procflags="virtual"/>
          <methodref name="GetBoundsRect" visibility="protected" procflags="virtual"/>
          <methodref name="SetBoundsRect" visibility="protected" procflags="virtual"/>
          <methodref name="IsHeightStored" visibility="protected" procflags="virtual" symflags="deprecated">
          </methodref>
          <methodref name="IsWidthStored" visibility="protected" procflags="virtual" symflags="deprecated">
          </methodref>
          <methodref name="IsPositionStored" visibility="protected" procflags="virtual"/>
          <methodref name="IsSizeStored" visibility="protected" procflags="virtual"/>
          <methodref name="SetPopupMenu" visibility="protected"/>
          <methodref name="GetAbsoluteMatrix" visibility="protected" procflags="virtual"/>
          <methodref name="GetHasClipParent" visibility="protected"/>
          <methodref name="GetUpdateRect" visibility="protected"/>
          <methodref name="DoGetUpdateRect" visibility="protected" procflags="virtual"/>
          <methodref name="GetAbsoluteOpacity" visibility="protected" procflags="virtual"/>
          <methodref name="BeginAutoDrag" visibility="protected" procflags="virtual"/>
          <methodref name="Capture" visibility="protected"/>
          <methodref name="ReleaseCapture" visibility="protected"/>
          <propertyref name="EnableExecuteAction" visibility="protected"/>
          <methodref name="Click" visibility="protected" procflags="virtual"/>
          <methodref name="DblClick" visibility="protected" procflags="virtual"/>
          <methodref name="MouseDown" visibility="protected" procflags="virtual"/>
          <methodref name="MouseMove" visibility="protected" procflags="virtual"/>
          <methodref name="MouseUp" visibility="protected" procflags="virtual"/>
          <methodref name="MouseWheel" visibility="protected" procflags="virtual"/>
          <methodref name="MouseClick" visibility="protected" procflags="virtual"/>
          <methodref name="KeyDown" visibility="protected" procflags="virtual"/>
          <methodref name="KeyUp" visibility="protected" procflags="virtual"/>
          <methodref name="DialogKey" visibility="protected" procflags="virtual"/>
          <methodref name="AfterDialogKey" visibility="protected" procflags="virtual"/>
          <methodref name="ShowContextMenu" visibility="protected" procflags="virtual"/>
          <methodref name="DragEnter" visibility="protected" procflags="virtual"/>
          <methodref name="DragOver" visibility="protected" procflags="virtual"/>
          <methodref name="DragDrop" visibility="protected" procflags="virtual"/>
          <methodref name="DragLeave" visibility="protected" procflags="virtual"/>
          <methodref name="DragEnd" visibility="protected" procflags="virtual"/>
          <methodref name="GetDefaultTouchTargetExpansion" visibility="protected" procflags="virtual"/>
          <methodref name="GetCanFocus" visibility="protected" procflags="virtual"/>
          <methodref name="GetCanParentFocus" visibility="protected" procflags="virtual"/>
          <methodref name="EnterChildren" visibility="protected" procflags="virtual"/>
          <methodref name="ExitChildren" visibility="protected" procflags="virtual"/>
          <methodref name="GetParentedVisible" visibility="protected" procflags="virtual"/>
          <methodref name="NeedUpdateEffects" visibility="protected"/>
          <methodref name="BeforeEffectEnabledChanged" visibility="protected"/>
          <methodref name="EffectEnabledChanged" visibility="protected"/>
          <methodref name="Realign" visibility="protected"/>
          <methodref name="ChildrenAlignChanged" visibility="protected"/>
          <methodref name="GetAlign" visibility="protected"/>
          <methodref name="SetAlign" visibility="protected" procflags="virtual"/>
          <methodref name="GetAnchors" visibility="protected"/>
          <methodref name="SetAnchors" visibility="protected" procflags="virtual"/>
          <methodref name="GetMargins" visibility="protected"/>
          <methodref name="GetPadding" visibility="protected"/>
          <methodref name="GetWidth" visibility="protected" procflags="virtual"/>
          <methodref name="GetHeight" visibility="protected" procflags="virtual"/>
          <methodref name="GetLeft" visibility="protected" procflags="virtual"/>
          <methodref name="GetTop" visibility="protected" procflags="virtual"/>
          <methodref name="GetAllowAlign" visibility="protected"/>
          <methodref name="GetAnchorRules" visibility="protected"/>
          <methodref name="GetAnchorOrigin" visibility="protected"/>
          <methodref name="GetOriginalParentSize" visibility="protected"/>
          <methodref name="GetAnchorMove" visibility="protected"/>
          <methodref name="SetAnchorMove" visibility="protected"/>
          <methodref name="GetAdjustSizeValue" visibility="protected" procflags="virtual"/>
          <methodref name="GetAdjustType" visibility="protected" procflags="virtual"/>
          <methodref name="GetContainerWidth" visibility="protected"/>
          <methodref name="GetContainerHeight" visibility="protected"/>
          <methodref name="GetObject" visibility="protected"/>
          <methodref name="GetParent" visibility="protected"/>
          <methodref name="GetVisible" visibility="protected"/>
          <methodref name="GetDesignInteractive" visibility="protected"/>
          <methodref name="GetPopupMenu" visibility="protected"/>
          <methodref name="DoEnter" visibility="protected" procflags="virtual"/>
          <methodref name="DoExit" visibility="protected" procflags="virtual"/>
          <methodref name="DoActivate" visibility="protected" procflags="virtual"/>
          <methodref name="DoDeactivate" visibility="protected" procflags="virtual"/>
          <methodref name="DoMouseEnter" visibility="protected" procflags="virtual"/>
          <methodref name="DoMouseLeave" visibility="protected" procflags="virtual"/>
          <methodref name="CheckForAllowFocus" visibility="protected"/>
          <methodref name="GetDragMode" visibility="protected" procflags="virtual"/>
          <methodref name="SetDragMode" visibility="protected" procflags="virtual"/>
          <methodref name="GetLocked" visibility="protected"/>
          <methodref name="GetHitTest" visibility="protected"/>
          <methodref name="GetAcceptsControls" visibility="protected"/>
          <methodref name="SetAcceptsControls" visibility="protected"/>
          <methodref name="FindTarget" visibility="protected" procflags="virtual"/>
          <methodref name="ObjectAtPoint" visibility="protected" procflags="virtual"/>
          <methodref name="HasHint" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetHintString" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetHintObject" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="CanShowHint" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="BroadcastGesture" visibility="protected"/>
          <methodref name="CMGesture" visibility="protected" procflags="virtual"/>
          <methodref name="TouchManager" visibility="protected"/>
          <methodref name="GetFirstControlWithGesture" visibility="protected" procflags="virtual"/>
          <methodref name="GetFirstControlWithGestureEngine" visibility="protected"/>
          <methodref name="GetListOfInteractiveGestures" visibility="protected"/>
          <methodref name="Tap" visibility="protected" procflags="virtual"/>
          <methodref name="GetFirstVisibleObjectIndex" visibility="protected" procflags="virtual"/>
          <methodref name="GetLastVisibleObjectIndex" visibility="protected" procflags="virtual"/>
          <methodref name="GetDefaultSize" visibility="protected" procflags="virtual"/>
          <methodref name="FillTextFlags" visibility="protected" procflags="virtual"/>
          <methodref name="ApplyEffect" visibility="protected" procflags="virtual"/>
          <methodref name="PaintInternal" visibility="protected"/>
          <methodref name="SupportsPaintStage" visibility="protected" procflags="virtual"/>
          <methodref name="CanRepaint" visibility="protected" procflags="virtual"/>
          <methodref name="RepaintRect" visibility="protected"/>
          <methodref name="PaintChildren" visibility="protected" procflags="virtual"/>
          <methodref name="Painting" visibility="protected" procflags="virtual"/>
          <methodref name="Paint" visibility="protected" procflags="virtual"/>
          <methodref name="DoPaint" visibility="protected" procflags="virtual"/>
          <methodref name="AfterPaint" visibility="protected" procflags="virtual"/>
          <methodref name="DrawDesignBorder" visibility="protected"/>
          <methodref name="DoRealign" visibility="protected" procflags="virtual"/>
          <methodref name="DoBeginUpdate" visibility="protected" procflags="virtual"/>
          <methodref name="DoEndUpdate" visibility="protected" procflags="virtual"/>
          <methodref name="Move" visibility="protected" procflags="virtual"/>
          <methodref name="Resize" visibility="protected" procflags="virtual"/>
          <methodref name="DoResized" visibility="protected" procflags="virtual"/>
          <methodref name="Disappear" visibility="protected" procflags="virtual"/>
          <methodref name="Show" visibility="protected" procflags="virtual"/>
          <methodref name="Hide" visibility="protected" procflags="virtual"/>
          <methodref name="AncestorVisibleChanged" visibility="protected" procflags="virtual"/>
          <methodref name="AncestorParentChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="ClipChildrenChanged" visibility="protected" procflags="virtual"/>
          <methodref name="HitTestChanged" visibility="protected" procflags="virtual"/>
          <methodref name="PaddingChanged" visibility="protected" procflags="overload virtual">
          </methodref>
          <propertyref name="MinClipWidth" visibility="protected"/>
          <propertyref name="MinClipHeight" visibility="protected"/>
          <propertyref name="SmallSizeControl" visibility="protected"/>
          <methodref name="DoAddObject" visibility="protected" procflags="override"/>
          <methodref name="DoInsertObject" visibility="protected" procflags="override"/>
          <methodref name="DoRemoveObject" visibility="protected" procflags="override"/>
          <methodref name="DoDeleteChildren" visibility="protected" procflags="override"/>
          <propertyref name="PaintStage" visibility="protected"/>
          <propertyref name="TempCanvas" visibility="protected"/>
          <methodref name="SetLeft" visibility="protected"/>
          <methodref name="SetTop" visibility="protected"/>
          <methodref name="UpdateExplicitBounds" visibility="protected"/>
          <methodref name="UpdateAnchorRules" visibility="protected"/>
          <propertyref name="Left" visibility="protected"/>
          <propertyref name="Top" visibility="protected"/>
          <propertyref name="ExplicitLeft" visibility="protected"/>
          <propertyref name="ExplicitTop" visibility="protected"/>
          <propertyref name="ExplicitWidth" visibility="protected"/>
          <propertyref name="ExplicitHeight" visibility="protected"/>
          <methodref name="GetActionLinkClass" visibility="protected" procflags="override"/>
          <methodref name="ActionChange" visibility="protected" procflags="override"/>
          <methodref name="EnabledStored" visibility="protected" procflags="virtual"/>
          <methodref name="VisibleStored" visibility="protected" procflags="virtual"/>
          <methodref name="EnabledChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="VisibleChanged" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="IsControlRectEmpty" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetControls" visibility="protected"/>
          <methodref name="DoGesture" visibility="protected" procflags="virtual"/>
          <methodref name="GetTabStopController" visibility="protected" procflags="virtual"/>
          <methodref name="GetTabListClass" visibility="protected" procflags="virtual"/>
          <propertyref name="DoubleClick" visibility="protected"/>
          <propertyref name="RotationAngle" visibility="protected"/>
          <propertyref name="RotationCenter" visibility="protected"/>
          <propertyref name="Scale" visibility="protected"/>
          <propertyref name="DisabledOpacity" visibility="protected"/>
          <propertyref name="ParentContent" visibility="protected"/>
          <propertyref name="ParentShowHint" visibility="protected">
          </propertyref>
          <methodref name="Create" visibility="public" procflags="constructor override"/>
          <methodref name="Destroy" visibility="public" procflags="destructor override"/>
          <methodref name="SetNewScene" visibility="public" procflags="virtual"/>
          <methodref name="SetBounds" visibility="public" procflags="virtual"/>
          <methodref name="AbsoluteToLocal" visibility="public" procflags="overload virtual">
          </methodref>
          <methodref name="AbsoluteToLocal" visibility="public" procflags="overload">
          </methodref>
          <methodref name="LocalToAbsolute" visibility="public" procflags="overload virtual">
          </methodref>
          <methodref name="LocalToAbsolute" visibility="public" procflags="overload">
          </methodref>
          <methodref name="ScreenToLocal" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="LocalToScreen" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="ConvertLocalPointFrom" visibility="public">
          </methodref>
          <methodref name="ConvertLocalPointTo" visibility="public">
          </methodref>
          <methodref name="AbsoluteToLocalVector" visibility="public" procflags="virtual"/>
          <methodref name="LocalToAbsoluteVector" visibility="public" procflags="virtual"/>
          <methodref name="PointInObject" visibility="public" procflags="virtual"/>
          <methodref name="PointInObjectLocal" visibility="public" procflags="virtual"/>
          <methodref name="MakeScreenshot" visibility="public"/>
          <methodref name="BeginUpdate" visibility="public" procflags="virtual"/>
          <methodref name="IsUpdating" visibility="public" procflags="virtual"/>
          <methodref name="EndUpdate" visibility="public" procflags="virtual"/>
          <methodref name="RecalcAbsoluteNow" visibility="public"/>
          <methodref name="RecalcUpdateRect" visibility="public" procflags="virtual"/>
          <methodref name="RecalcOpacity" visibility="public" procflags="virtual"/>
          <methodref name="RecalcAbsolute" visibility="public" procflags="virtual"/>
          <methodref name="RecalcEnabled" visibility="public" procflags="virtual"/>
          <methodref name="RecalcHasEffect" visibility="public" procflags="virtual"/>
          <methodref name="RecalcHasClipParent" visibility="public" procflags="virtual"/>
          <methodref name="PrepareForPaint" visibility="public" procflags="virtual"/>
          <methodref name="RecalcSize" visibility="public" procflags="virtual"/>
          <methodref name="UpdateEffects" visibility="public"/>
          <methodref name="ApplyTriggerEffect" visibility="public" procflags="virtual"/>
          <methodref name="StartTriggerAnimation" visibility="public" procflags="virtual"/>
          <methodref name="StartTriggerAnimationWait" visibility="public" procflags="virtual"/>
          <methodref name="SetFocus" visibility="public"/>
          <methodref name="ResetFocus" visibility="public"/>
          <methodref name="PaintTo" visibility="public">
          </methodref>
          <methodref name="Repaint" visibility="public"/>
          <methodref name="InvalidateRect" visibility="public"/>
          <methodref name="Lock" visibility="public"/>
          <propertyref name="AbsoluteMatrix" visibility="public"/>
          <propertyref name="AbsoluteOpacity" visibility="public"/>
          <propertyref name="AbsoluteWidth" visibility="public"/>
          <propertyref name="AbsoluteHeight" visibility="public"/>
          <propertyref name="AbsoluteScale" visibility="public"/>
          <propertyref name="AbsoluteEnabled" visibility="public"/>
          <propertyref name="AbsoluteRect" visibility="public"/>
          <propertyref name="AbsoluteClipRect" visibility="public">
          </propertyref>
          <propertyref name="AxisAlignedRect" visibility="public"/>
          <propertyref name="ApplyingEffect" visibility="public">
          </propertyref>
          <propertyref name="HasEffect" visibility="public"/>
          <propertyref name="HasDisablePaintEffect" visibility="public"/>
          <propertyref name="HasAfterPaintEffect" visibility="public"/>
          <propertyref name="HasClipParent" visibility="public"/>
          <propertyref name="ChildrenRect" visibility="public"/>
          <propertyref name="DefaultSize" visibility="public"/>
          <propertyref name="FixedSize" visibility="public"/>
          <propertyref name="InvertAbsoluteMatrix" visibility="public"/>
          <propertyref name="InPaintTo" visibility="public"/>
          <propertyref name="LocalRect" visibility="public"/>
          <propertyref name="Pressed" visibility="public"/>
          <propertyref name="PressedPosition" visibility="public">
          </propertyref>
          <propertyref name="UpdateRect" visibility="public"/>
          <propertyref name="BoundsRect" visibility="public"/>
          <propertyref name="ParentedRect" visibility="public"/>
          <propertyref name="ParentedVisible" visibility="public"/>
          <propertyref name="ClipRect" visibility="public"/>
          <propertyref name="Canvas" visibility="public"/>
          <propertyref name="Controls" visibility="public"/>
          <propertyref name="ControlsCount" visibility="public"/>
          <propertyref name="ParentControl" visibility="public"/>
          <propertyref name="Scene" visibility="public"/>
          <propertyref name="AutoCapture" visibility="public"/>
          <propertyref name="CanFocus" visibility="public"/>
          <propertyref name="CanParentFocus" visibility="public"/>
          <propertyref name="DisableFocusEffect" visibility="public"/>
          <propertyref name="IsInflated" visibility="public"/>
          <methodref name="EnumControls" visibility="public" procflags="overload"/>
          <methodref name="EnumControls" visibility="public" procflags="overload" symflags="deprecated">
          </methodref>
          <methodref name="GetTabList" visibility="public" procflags="virtual"/>
          <methodref name="ShowInDesigner" visibility="public" procflags="virtual"/>
          <methodref name="ShouldTestMouseHits" visibility="public" procflags="virtual">
          </methodref>
          <propertyref name="IsMouseOver" visibility="public"/>
          <propertyref name="IsDragOver" visibility="public"/>
          <propertyref name="IsFocused" visibility="public"/>
          <propertyref name="IsVisible" visibility="public"/>
          <propertyref name="Align" visibility="public"/>
          <propertyref name="Anchors" visibility="public"/>
          <propertyref name="Cursor" visibility="public"/>
          <propertyref name="InheritedCursor" visibility="public"/>
          <propertyref name="DragMode" visibility="public"/>
          <propertyref name="EnableDragHighlight" visibility="public"/>
          <propertyref name="Enabled" visibility="public"/>
          <propertyref name="Position" visibility="public"/>
          <propertyref name="Locked" visibility="public"/>
          <propertyref name="Width" visibility="public"/>
          <propertyref name="Height" visibility="public"/>
          <propertyref name="Size" visibility="public"/>
          <propertyref name="Padding" visibility="public"/>
          <propertyref name="Margins" visibility="public"/>
          <propertyref name="Opacity" visibility="public"/>
          <propertyref name="ClipChildren" visibility="public"/>
          <propertyref name="ClipParent" visibility="public"/>
          <propertyref name="HitTest" visibility="public"/>
          <propertyref name="PopupMenu" visibility="public"/>
          <propertyref name="TabOrder" visibility="public"/>
          <propertyref name="Visible" visibility="public"/>
          <eventref name="CustomSceneAddRect" visibility="public"/>
          <eventref name="OnDragEnter" visibility="public"/>
          <eventref name="OnDragLeave" visibility="public"/>
          <eventref name="OnDragOver" visibility="public"/>
          <eventref name="OnDragDrop" visibility="public"/>
          <eventref name="OnDragEnd" visibility="public"/>
          <eventref name="OnKeyDown" visibility="public"/>
          <eventref name="OnKeyUp" visibility="public"/>
          <eventref name="OnClick" visibility="public"/>
          <eventref name="OnDblClick" visibility="public"/>
          <eventref name="OnCanFocus" visibility="public"/>
          <eventref name="OnEnter" visibility="public"/>
          <eventref name="OnExit" visibility="public"/>
          <eventref name="OnMouseDown" visibility="public"/>
          <eventref name="OnMouseMove" visibility="public"/>
          <eventref name="OnMouseUp" visibility="public"/>
          <eventref name="OnMouseWheel" visibility="public"/>
          <eventref name="OnMouseEnter" visibility="public"/>
          <eventref name="OnMouseLeave" visibility="public"/>
          <eventref name="OnPainting" visibility="public"/>
          <eventref name="OnPaint" visibility="public"/>
          <eventref name="OnResize" visibility="public"/>
          <eventref name="OnResized" visibility="public"/>
          <eventref name="OnActivate" visibility="public"/>
          <eventref name="OnDeactivate" visibility="public"/>
          <eventref name="OnApplyStyleLookup" visibility="public"/>
          <propertyref name="TouchTargetExpansion" visibility="public"/>
          <propertyref name="TabStop" visibility="public"/>
          <propertyref name="DisableDisappear" visibility="public"/>
          <propertyref name="ShowHint" visibility="public">
          </propertyref>
          <propertyref name="Hint" visibility="public">
          </propertyref>
          <propertyref name="Touch" visibility="published"/>
          <eventref name="OnGesture" visibility="published"/>
          <eventref name="OnTap" visibility="published"/>
          <ancestor name="TFmxObject" namespace="FMX.Types">
            <interfaces>
              <implements name="IActionClient"/>
              <implements name="IFreeNotification"/>
            </interfaces>
            <methodref name="SetStyleName" visibility="private"/>
            <methodref name="SetStored" visibility="private"/>
            <methodref name="GetChildrenCount" visibility="private" procflags="inline"/>
            <methodref name="GetIndexOfChild" visibility="private"/>
            <methodref name="SetIndexOfChild" visibility="private"/>
            <methodref name="SetIndex" visibility="private"/>
            <methodref name="GetActionRoot" visibility="private"/>
            <methodref name="GetActionClient" visibility="private" procflags="inline"/>
            <methodref name="SetActionClient" visibility="private"/>
            <methodref name="GetAction" visibility="private"/>
            <methodref name="SetAction" visibility="private"/>
            <methodref name="GetIndex" visibility="private"/>
            <methodref name="Create@" visibility="class private" procflags="class constructor noself"/>
            <methodref name="Destroy@" visibility="class private" procflags="class destructor noself"/>
            <methodref name="CreateChildrenList" visibility="protected" procflags="virtual"/>
            <methodref name="ResetChildrenIndicesSpan" visibility="protected"/>
            <methodref name="ResetChildrenIndices" visibility="protected"/>
            <methodref name="GetBackIndex" visibility="protected" procflags="virtual"/>
            <methodref name="DefineProperties" visibility="protected" procflags="override"/>
            <methodref name="IgnoreBindingName" visibility="protected"/>
            <methodref name="GetChildren" visibility="protected" procflags="override"/>
            <methodref name="SetParentComponent" visibility="protected" procflags="override"/>
            <methodref name="Notification" visibility="protected" procflags="override"/>
            <methodref name="GetActionLinkClass" visibility="protected" procflags="virtual"/>
            <methodref name="InitiateAction" visibility="protected" procflags="virtual"/>
            <methodref name="DoActionChange" visibility="protected" procflags="virtual"/>
            <methodref name="ActionChange" visibility="protected" procflags="virtual"/>
            <methodref name="DoActionClientChanged" visibility="protected" procflags="virtual"/>
            <propertyref name="ActionLink" visibility="protected"/>
            <propertyref name="Action" visibility="protected"/>
            <propertyref name="StyleIndexer" visibility="protected"/>
            <methodref name="GetParentComponent" visibility="public" procflags="override"/>
            <methodref name="HasParent" visibility="public" procflags="override"/>
            <methodref name="AddToResourcePool" visibility="protected" procflags="virtual"/>
            <methodref name="RemoveFromResourcePool" visibility="protected" procflags="virtual"/>
            <methodref name="SetParent" visibility="protected" procflags="virtual"/>
            <methodref name="DoRootChanging" visibility="protected" procflags="virtual"/>
            <methodref name="DoRootChanged" visibility="protected" procflags="virtual"/>
            <methodref name="ParentChanged" visibility="protected" procflags="virtual"/>
            <methodref name="ChangeOrder" visibility="protected" procflags="virtual"/>
            <methodref name="ChangeChildren" visibility="protected" procflags="virtual"/>
            <methodref name="DoAddObject" visibility="protected" procflags="virtual"/>
            <methodref name="DoInsertObject" visibility="protected" procflags="virtual"/>
            <methodref name="DoRemoveObject" visibility="protected" procflags="virtual"/>
            <methodref name="DoDeleteChildren" visibility="protected" procflags="virtual"/>
            <methodref name="SearchInto" visibility="protected" procflags="virtual"/>
            <methodref name="FreeNotification" visibility="protected" procflags="virtual"/>
            <methodref name="SupportsPlatformService" visibility="protected" procflags="virtual"/>
            <methodref name="GetData" visibility="protected" procflags="virtual"/>
            <methodref name="SetData" visibility="protected" procflags="virtual"/>
            <methodref name="IgnoreIntegerValue" visibility="protected"/>
            <methodref name="IgnoreFloatValue" visibility="protected"/>
            <methodref name="IgnoreBooleanValue" visibility="protected"/>
            <methodref name="IgnoreIdentValue" visibility="protected"/>
            <methodref name="Create" visibility="public" procflags="constructor override"/>
            <methodref name="Destroy" visibility="public" procflags="destructor override"/>
            <methodref name="BeforeDestruction" visibility="public" procflags="override"/>
            <methodref name="Release" visibility="public" procflags="virtual"/>
            <methodref name="Released" visibility="public" symflags="deprecated">
            </methodref>
            <methodref name="ObjectState" visibility="public" symflags="deprecated">
            </methodref>
            <methodref name="SetRoot" visibility="public"/>
            <methodref name="SetDesign" visibility="public"/>
            <methodref name="Clone" visibility="public"/>
            <methodref name="AddObject" visibility="public"/>
            <methodref name="InsertObject" visibility="public"/>
            <methodref name="RemoveObject" visibility="public" procflags="overload"/>
            <methodref name="RemoveObject" visibility="public" procflags="overload"/>
            <methodref name="ContainsObject" visibility="public" procflags="virtual"/>
            <methodref name="Exchange" visibility="public" procflags="virtual"/>
            <methodref name="DeleteChildren" visibility="public"/>
            <methodref name="IsChild" visibility="public" procflags="virtual"/>
            <methodref name="BringChildToFront" visibility="public"/>
            <methodref name="SendChildToBack" visibility="public"/>
            <methodref name="BringToFront" visibility="public" procflags="virtual"/>
            <methodref name="SendToBack" visibility="public" procflags="virtual"/>
            <methodref name="AddObjectsToList" visibility="public"/>
            <methodref name="Sort" visibility="public" procflags="virtual"/>
            <methodref name="EnumObjects" visibility="public">
            </methodref>
            <methodref name="AnimateFloat" visibility="public" symflags="deprecated">
            </methodref>
            <methodref name="AnimateFloatDelay" visibility="public" symflags="deprecated">
            </methodref>
            <methodref name="AnimateFloatWait" visibility="public" symflags="deprecated">
            </methodref>
            <methodref name="AnimateInt" visibility="public" symflags="deprecated">
            </methodref>
            <methodref name="AnimateIntWait" visibility="public" symflags="deprecated">
            </methodref>
            <methodref name="AnimateColor" visibility="public" symflags="deprecated">
            </methodref>
            <methodref name="StopPropertyAnimation" visibility="public"/>
            <methodref name="AddFreeNotify" visibility="public"/>
            <methodref name="RemoveFreeNotify" visibility="public"/>
            <methodref name="FindStyleResource" visibility="public" procflags="overload virtual"/>
            <propertyref name="Root" visibility="public"/>
            <propertyref name="Stored" visibility="public"/>
            <propertyref name="TagObject" visibility="public"/>
            <propertyref name="TagFloat" visibility="public"/>
            <propertyref name="TagString" visibility="public"/>
            <propertyref name="ChildrenCount" visibility="public"/>
            <propertyref name="Children" visibility="public"/>
            <propertyref name="Data" visibility="public"/>
            <propertyref name="Parent" visibility="public"/>
            <propertyref name="Index" visibility="public"/>
            <propertyref name="ActionClient" visibility="public"/>
            <propertyref name="StyleName" visibility="published"/>
            <ancestor name="TComponent" namespace="System.Classes">
              <interfaces>
                <implements name="IInterfaceComponentReference"/>
                <implements name="IInterface"/>
              </interfaces>
              <methodref name="GetComObject" visibility="private">
              </methodref>
              <methodref name="GetComponent" visibility="private">
              </methodref>
              <methodref name="GetComponentCount" visibility="private">
              </methodref>
              <methodref name="GetComponentIndex" visibility="private">
              </methodref>
              <methodref name="Insert" visibility="private">
              </methodref>
              <methodref name="ReadLeft" visibility="private">
              </methodref>
              <methodref name="ReadTop" visibility="private">
              </methodref>
              <methodref name="Remove" visibility="private">
              </methodref>
              <methodref name="RemoveNotification" visibility="private">
              </methodref>
              <methodref name="SetComponentIndex" visibility="private">
              </methodref>
              <methodref name="SetReference" visibility="private">
              </methodref>
              <methodref name="WriteLeft" visibility="private">
              </methodref>
              <methodref name="WriteTop" visibility="private">
              </methodref>
              <methodref name="IntfGetComponent" visibility="private">
              </methodref>
              <methodref name="DoGetDeltaStreams" visibility="private">
              </methodref>
              <methodref name="ReadDeltaStream" visibility="private">
              </methodref>
              <methodref name="ReadDeltaState" visibility="private">
              </methodref>
              <methodref name="FindSortedComponent" visibility="private">
              </methodref>
              <methodref name="AddSortedComponent" visibility="private">
              </methodref>
              <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
              </methodref>
              <methodref name="Create@" visibility="class private" procflags="class constructor noself">
              </methodref>
              <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ChangeName" visibility="protected">
              </methodref>
              <methodref name="DefineProperties" visibility="protected" procflags="override">
              </methodref>
              <methodref name="GetChildren" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="GetOwner" visibility="protected" procflags="override">
              </methodref>
              <methodref name="Loaded" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Notification" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="ReadState" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="CanObserve" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetObservers" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetAncestor" visibility="protected">
              </methodref>
              <methodref name="SetDesigning" visibility="protected">
              </methodref>
              <methodref name="SetInline" visibility="protected">
              </methodref>
              <methodref name="SetDesignInstance" visibility="protected">
              </methodref>
              <methodref name="SetName" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="Updating" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="Updated" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
              </methodref>
              <methodref name="ValidateRename" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="WriteState" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="RemoveFreeNotifications" visibility="protected">
              </methodref>
              <methodref name="QueryInterface" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="_AddRef" visibility="protected">
              </methodref>
              <methodref name="_Release" visibility="protected">
              </methodref>
              <methodref name="GetTypeInfoCount" visibility="protected">
              </methodref>
              <methodref name="GetTypeInfo" visibility="protected">
              </methodref>
              <methodref name="GetIDsOfNames" visibility="protected">
              </methodref>
              <methodref name="Invoke" visibility="protected">
              </methodref>
              <eventref name="OnGetDeltaStreams" visibility="protected">
              </eventref>
              <methodref name="Create" visibility="public" procflags="constructor virtual">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor override">
              </methodref>
              <methodref name="BeforeDestruction" visibility="public" procflags="override">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="BeginInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="EndInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="EndInvoke" visibility="public" procflags="overload">
              </methodref>
              <methodref name="EndFunctionInvoke" visibility="public">
              </methodref>
              <methodref name="DestroyComponents" visibility="public">
              </methodref>
              <methodref name="Destroying" visibility="public">
              </methodref>
              <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
              </methodref>
              <methodref name="FindComponent" visibility="public">
              </methodref>
              <methodref name="FreeNotification" visibility="public">
              </methodref>
              <methodref name="RemoveFreeNotification" visibility="public">
              </methodref>
              <methodref name="FreeOnRelease" visibility="public">
              </methodref>
              <methodref name="GetEnumerator" visibility="public" procflags="inline">
              </methodref>
              <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
              </methodref>
              <methodref name="GetNamePath" visibility="public" procflags="override">
              </methodref>
              <methodref name="HasParent" visibility="public" procflags="dynamic">
              </methodref>
              <methodref name="InsertComponent" visibility="public">
              </methodref>
              <methodref name="RemoveComponent" visibility="public">
              </methodref>
              <methodref name="SetSubComponent" visibility="public">
              </methodref>
              <methodref name="SafeCallException" visibility="public" procflags="override">
              </methodref>
              <methodref name="UpdateAction" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="IsImplementorOf" visibility="public">
              </methodref>
              <methodref name="ReferenceInterface" visibility="public">
              </methodref>
              <propertyref name="ComObject" visibility="public">
              </propertyref>
              <propertyref name="Components" visibility="public">
              </propertyref>
              <propertyref name="ComponentCount" visibility="public">
              </propertyref>
              <propertyref name="ComponentIndex" visibility="public">
              </propertyref>
              <propertyref name="ComponentState" visibility="public">
              </propertyref>
              <propertyref name="ComponentStyle" visibility="public">
              </propertyref>
              <propertyref name="DesignInfo" visibility="public">
              </propertyref>
              <propertyref name="Owner" visibility="public">
              </propertyref>
              <propertyref name="VCLComObject" visibility="public">
              </propertyref>
              <propertyref name="Observers" visibility="public">
              </propertyref>
              <propertyref name="Name" visibility="published">
              </propertyref>
              <propertyref name="Tag" visibility="published">
              </propertyref>
              <ancestor name="TPersistent" namespace="System.Classes">
                <methodref name="AssignError" visibility="private">
                </methodref>
                <methodref name="AssignTo" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="DefineProperties" visibility="protected" procflags="virtual">
                </methodref>
                <methodref name="GetOwner" visibility="protected" procflags="dynamic">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor override">
                </methodref>
                <methodref name="Assign" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="GetNamePath" visibility="public" procflags="dynamic">
                </methodref>
                <ancestor name="TObject" namespace="System">
                  <methodref name="Create" visibility="public" procflags="constructor">
                  </methodref>
                  <methodref name="Free" visibility="public">
                  </methodref>
                  <methodref name="DisposeOf" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="InitInstance" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="CleanupInstance" visibility="public">
                  </methodref>
                  <methodref name="ClassType" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="ClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassNameIs" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassParent" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="ClassInfo" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InstanceSize" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InheritsFrom" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="QualifiedClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="GetInterface" visibility="public">
                  </methodref>
                  <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="UnitName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="UnitScope" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="Equals" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="GetHashCode" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="ToString" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="SafeCallException" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Dispatch" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="NewInstance" visibility="public" procflags="class virtual">
                  </methodref>
                  <methodref name="FreeInstance" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                  </methodref>
                  <methodref name="GetDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <propertyref name="Disposed" visibility="protected">
                  </propertyref>
                </ancestor>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <interfaces>
      <implements name="IIsChecked"/>
      <implements name="IKeyShortcut"/>
      <implements name="IGlyph"/>
      <implements name="IGroupName"/>
      <implements name="INativeControl"/>
      <implements name="IItemsContainer"/>
    </interfaces>
    <members>
      <field name="FContent" type="TContent" visibility="private" size="4" offset="992" file="FMX.Menus.pas" line="86"/>
      <field name="FNoItemsContent" type="TFmxObject" visibility="private" size="4" offset="996" file="FMX.Menus.pas" line="87"/>
      <field name="FIsSelected" type="Boolean" visibility="private" size="1" offset="1000" file="FMX.Menus.pas" line="88"/>
      <field name="FPopupTimer" type="TTimer" visibility="private" size="4" offset="1004" file="FMX.Menus.pas" line="89"/>
      <field name="FShortCut" type="TShortCut" visibility="private" size="2" offset="1008" file="FMX.Menus.pas" line="90"/>
      <field name="FShortCutObject" type="TText" visibility="private" size="4" offset="1012" file="FMX.Menus.pas" line="91"/>
      <field name="FSubmarkObject" type="TControl" visibility="private" size="4" offset="1016" file="FMX.Menus.pas" line="92"/>
      <field name="FCheckmarkObject" type="TControl" visibility="private" size="4" offset="1020" file="FMX.Menus.pas" line="93"/>
      <field name="FCheckBackgroundObject" type="TControl" visibility="private" size="4" offset="1024" file="FMX.Menus.pas" line="94"/>
      <field name="FGlyphObject" type="TControl" visibility="private" size="4" offset="1028" file="FMX.Menus.pas" line="95"/>
      <field name="FOldGlyphObjectVisible" type="Boolean" visibility="private" size="1" offset="1032" file="FMX.Menus.pas" line="96"/>
      <field name="FOldGlyphAutoHide" type="Boolean" visibility="private" size="1" offset="1033" file="FMX.Menus.pas" line="97"/>
      <field name="FOldGlyphVisible" type="Boolean" visibility="private" size="1" offset="1034" file="FMX.Menus.pas" line="98"/>
      <field name="FOldCheckmarkVisible" type="Boolean" visibility="private" size="1" offset="1035" file="FMX.Menus.pas" line="99"/>
      <field name="FOldCheckmarkStyleVisible" type="Boolean" visibility="private" size="1" offset="1036" file="FMX.Menus.pas" line="100"/>
      <field name="FBitmapObject" type="TControl" visibility="private" size="4" offset="1040" file="FMX.Menus.pas" line="101"/>
      <field name="FOldBitmapVisible" type="Boolean" visibility="private" size="1" offset="1044" file="FMX.Menus.pas" line="102"/>
      <field name="FCheckMarkStyle" type="TControl" visibility="private" size="4" offset="1048" file="FMX.Menus.pas" line="103"/>
      <field name="FOldFShortCutVisible" type="Boolean" visibility="private" size="1" offset="1052" file="FMX.Menus.pas" line="104"/>
      <field name="FOldSubmarkVisible" type="Boolean" visibility="private" size="1" offset="1053" file="FMX.Menus.pas" line="105"/>
      <field name="FShown" type="Boolean" visibility="private" size="1" offset="1054" file="FMX.Menus.pas" line="106"/>
      <field name="FGlyph" type="TGlyph" visibility="private" size="4" offset="1056" file="FMX.Menus.pas" line="107"/>
      <field name="FHandle" type="NativeUInt" visibility="private" size="4" offset="1060" file="FMX.Menus.pas" line="108"/>
      <field name="FIsChecked" type="Boolean" visibility="private" size="1" offset="1064" file="FMX.Menus.pas" line="109"/>
      <field name="FBitmap" type="TBitmap" visibility="private" size="4" offset="1068" file="FMX.Menus.pas" line="110"/>
      <field name="FAutoCheck" type="Boolean" visibility="private" size="1" offset="1072" file="FMX.Menus.pas" line="111"/>
      <field name="FRadioItem" type="Boolean" visibility="private" size="1" offset="1073" file="FMX.Menus.pas" line="112"/>
      <field name="FGroupName" type="string" visibility="private" size="4" offset="1076" file="FMX.Menus.pas" line="113"/>
      <field name="FMenuService" type="IFMXMenuService" visibility="private" size="4" offset="1080" file="FMX.Menus.pas" line="114"/>
      <field name="FClickImmediately" type="Boolean" visibility="private" size="1" offset="1084" file="FMX.Menus.pas" line="115"/>
      <field name="FImageLink" type="TGlyphImageLink" visibility="private" size="4" offset="1088" file="FMX.Menus.pas" line="116"/>
      <field name="FImages" type="TCustomImageList" visibility="private" size="4" offset="1092" file="FMX.Menus.pas" line="117">
        <attributes>
          <attribute name="TObject"/>
        </attributes>
      </field>
      <field name="FSubMenuVisible" type="Boolean" visibility="private" size="1" offset="1096" file="FMX.Menus.pas" line="118"/>
      <field name="FImageOffset" type="Single" visibility="private" size="4" offset="1100" file="FMX.Menus.pas" line="119"/>
      <field name="FIsMenuBarItem" type="Boolean" visibility="private" size="1" offset="1104" file="FMX.Menus.pas" line="120"/>
      <field name="FIsMenuBarItemCached" type="Boolean" visibility="private" size="1" offset="1105" file="FMX.Menus.pas" line="121"/>
      <procedure name="SetIsSelected" visibility="private" file="FMX.Menus.pas" line="122">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetMenuView" visibility="private" file="FMX.Menus.pas" line="123">
        <parameters>
          <retval type="IMenuView">
            <devnotes>
               <summary>For internal use only.</summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <procedure name="DoPopupTimer" visibility="private" file="FMX.Menus.pas" line="124">
        <parameters>
          <parameter name="Sender" type="TObject"/>
        </parameters>
      </procedure>
      <procedure name="SetShortCut" visibility="private" file="FMX.Menus.pas" line="125">
        <parameters>
          <parameter name="Value" type="TShortCut" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetShortCut" visibility="private" file="FMX.Menus.pas" line="126">
        <parameters>
          <retval type="TShortCut"/>
        </parameters>
      </function>
      <function name="ShortCutStored" visibility="private" file="FMX.Menus.pas" line="127">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <procedure name="SetBitmap" visibility="private" file="FMX.Menus.pas" line="128">
        <parameters>
          <parameter name="Value" type="TBitmap" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="TurnSiblingsOff" visibility="private" file="FMX.Menus.pas" line="129">
      </procedure>
      <function name="GetRadioItem" visibility="private" file="FMX.Menus.pas" line="130">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <procedure name="SetRadioItem" visibility="private" file="FMX.Menus.pas" line="131">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetIsChecked" visibility="private" file="FMX.Menus.pas" line="132">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <procedure name="SetIsChecked" visibility="private" file="FMX.Menus.pas" line="133">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="IsCheckedStored" visibility="private" file="FMX.Menus.pas" line="134">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="GetGroupName" visibility="private" file="FMX.Menus.pas" line="135">
        <parameters>
          <retval type="string"/>
        </parameters>
      </function>
      <procedure name="SetGroupName" visibility="private" file="FMX.Menus.pas" line="136">
        <parameters>
          <parameter name="Value" type="string" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GroupNameStored" visibility="private" file="FMX.Menus.pas" line="137">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="GetGroupIndex" visibility="private" file="FMX.Menus.pas" line="138">
        <parameters>
          <retval type="Integer"/>
        </parameters>
      </function>
      <procedure name="SetGroupIndex" visibility="private" file="FMX.Menus.pas" line="139">
        <parameters>
          <parameter name="Value" type="Integer" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="UpdateGroup" visibility="private" file="FMX.Menus.pas" line="140">
        <parameters>
          <parameter name="Value" type="string" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="RadioItemStored" visibility="private" file="FMX.Menus.pas" line="141">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="GetAutoCheck" visibility="private" file="FMX.Menus.pas" line="142">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <procedure name="SetAutoCheck" visibility="private" file="FMX.Menus.pas" line="143">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="AutoCheckStored" visibility="private" file="FMX.Menus.pas" line="144">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <procedure name="AddNoItemObject" visibility="private" file="FMX.Menus.pas" line="145">
        <parameters>
          <parameter name="AObject" type="TFmxObject" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetHandle" visibility="private" file="FMX.Menus.pas" line="146">
        <parameters>
          <retval type="NativeUInt"/>
        </parameters>
      </function>
      <procedure name="SetHandle" visibility="private" file="FMX.Menus.pas" line="147">
        <parameters>
          <parameter name="Value" type="NativeUInt" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetHandleSupported" visibility="private" file="FMX.Menus.pas" line="148">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="GetItems" visibility="private" file="FMX.Menus.pas" line="149">
        <parameters>
          <parameter name="Index" type="Integer" paramflags="const"/>
          <retval type="TMenuItem">
            <devnotes>
               <summary> This class describe the role and functionality of a menu item.
                This object is used to populate different types of menus defined in FMX:
                main menu, menu bar, popup menu.
               </summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <procedure name="DoUpdateMenu" visibility="private" file="FMX.Menus.pas" line="150">
      </procedure>
      <procedure name="UpdateVisibleObjects" visibility="private" file="FMX.Menus.pas" line="151">
      </procedure>
      <function name="GetImages" visibility="private" file="FMX.Menus.pas" line="152">
        <parameters>
          <retval type="TCustomImageList">
            <devnotes>
               <summary> List of images. Base class that used in fire monkey without published properties </summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <procedure name="SetImages" visibility="private" file="FMX.Menus.pas" line="153">
        <parameters>
          <parameter name="Value" type="TCustomImageList" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetImageIndex" visibility="private" file="FMX.Menus.pas" line="155">
        <parameters>
          <retval type="TImageIndex"/>
        </parameters>
      </function>
      <procedure name="SetImageIndex" visibility="private" file="FMX.Menus.pas" line="156">
        <parameters>
          <parameter name="Value" type="TImageIndex" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetImageList" visibility="private" procflags="inline" file="FMX.Menus.pas" line="157">
        <parameters>
          <retval type="TBaseImageList"/>
        </parameters>
      </function>
      <procedure name="SetImageList" visibility="private" file="FMX.Menus.pas" line="158">
        <parameters>
          <parameter name="Value" type="TBaseImageList" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="HasOffsetOfGlyph" visibility="private" file="FMX.Menus.pas" line="161">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="HasOffsetOfBitmap" visibility="private" file="FMX.Menus.pas" line="162">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <procedure name="InitItem" visibility="private" file="FMX.Menus.pas" line="163">
        <parameters>
          <parameter name="CleanAutoHide" type="Boolean" paramflags="const"/>
          <parameter name="Left" type="Single" paramflags="const"/>
          <parameter name="Top" type="Single" paramflags="const"/>
          <parameter name="Width" type="Single" paramflags="const"/>
          <parameter name="Height" type="Single" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetParentMenuItem" visibility="private" file="FMX.Menus.pas" line="164">
        <parameters>
          <retval type="TMenuItem">
            <devnotes>
               <summary> This class describe the role and functionality of a menu item.
                This object is used to populate different types of menus defined in FMX:
                main menu, menu bar, popup menu.
               </summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <function name="GetMainMenu" visibility="private" file="FMX.Menus.pas" line="165">
        <parameters>
          <retval type="TMainMenu">
            <attributes>
              <attribute name="ComponentPlatformsAttribute"/>
            </attributes>
            <devnotes>
              <summary> This class implements the principal menu of an application. On
                Windows is situated on the most top level of the application form. On MAC
                this menu appear outside the application form in the main menu of the OS
                with respect to the application.
              </summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <function name="GetIsSeparator" visibility="private" file="FMX.Menus.pas" line="166">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="DoFilterControlText" visibility="protected" procflags="override" file="FMX.Menus.pas" line="169">
        <devnotes><summary>
Filters the string contained in the Text property.
FMX.Menus.TMenuItem.DoFilterControlText inherits from FMX.Controls.TTextControl.DoFilterControlText. All content below this line refers to FMX.Controls.TTextControl.DoFilterControlText.
Filters the string contained in the Text property.
For example, you can use DoFilterControlText to filter the ampersand symbol of the accelerator key character.
If the control is registered as an accelerator key receiver, you can override this method to do your own filtering to the accelerator keys.

 See Also
FMX.Controls.TTextControl.Text
Specifying Accelerator Keys

</summary></devnotes>
        <parameters>
          <parameter name="AText" type="string" paramflags="const"/>
          <retval type="string"/>
        </parameters>
      </function>
      <function name="CanTriggerAcceleratorKey" visibility="protected" procflags="override" file="FMX.Menus.pas" line="172">
        <devnotes><summary>
Determines whether the object reacts to the accelerator key or not.
FMX.Menus.TMenuItem.CanTriggerAcceleratorKey inherits from FMX.AcceleratorKey.IAcceleratorKeyReceiver.CanTriggerAcceleratorKey. All content below this line refers to FMX.AcceleratorKey.IAcceleratorKeyReceiver.CanTriggerAcceleratorKey.
Determines whether the object reacts to the accelerator key or not.
Use CanTriggerAcceleratorKey for objects that are not intended to react to the accelerator key, for example: a hidden tab page or a hidden submenu. The object triggers the action if CanTriggerAcceleratorKey is True. Otherwise, the object cannot trigger the action.

 See Also
FMX.AcceleratorKey.IAcceleratorKeyReceiver.TriggerAcceleratorKey

</summary></devnotes>
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <procedure name="DoAddObject" visibility="protected" procflags="override" file="FMX.Menus.pas" line="173">
        <parameters>
          <parameter name="AObject" type="TFmxObject" paramflags="const"/>
        </parameters>
      <devnotes><summary>


Adds the AObject object to the Children list of children attached to this parent object (self).
FMX.Menus.TMenuItem.DoAddObject inherits from FMX.Types.TFmxObject.DoAddObject. All content below this line refers to FMX.Types.TFmxObject.DoAddObject.
Adds the AObject object to the Children list of children attached to this parent object (self).
DoAddObject adds the object provided in the AObject parameter to the list of children stored in the Children property of this object (self). DoAddObject changes the parent of AObject to this object (self) and sets the root of AObject to the Root object of this object (self).
Descendant classes, like TCommonCustomForm and TControl, additionally handle tab stop lists keeping ordered lists of objects to which the user can tab. If such descendant class supports the ITabStopController interface and AObject is an object of a class supporting the IControl interface, then DoAddObject of this descendant adds AObject to the TabList tab stop lists of the (self) object. 
DoAddObject is internally called from AddObject.
</summary></devnotes></procedure>
      <procedure name="DoInsertObject" visibility="protected" procflags="override" file="FMX.Menus.pas" line="174">
        <parameters>
          <parameter name="Index" type="Integer"/>
          <parameter name="AObject" type="TFmxObject" paramflags="const"/>
        </parameters>
      <devnotes><summary>




Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <procedure name="MouseDown" visibility="protected" procflags="override" file="FMX.Menus.pas" line="175">
        <parameters>
          <parameter name="Button" type="TMouseButton"/>
          <parameter name="Shift" type="TShiftState"/>
          <parameter name="X" type="Single"/>
          <parameter name="Y" type="Single"/>
        </parameters>
      <devnotes><summary>
OnMouseDown event dispatcher.
In addition to FMX.Controls.TControl.MouseDown, if the left mouse button is clicked and the current TMenuItem object has a pop-up menu, MouseDown displays the pop-up menu.
</summary></devnotes></procedure>
      <procedure name="Click" visibility="protected" procflags="override" file="FMX.Menus.pas" line="176">
      <devnotes><summary>
Responds to the click of the left mouse button.
In addition to FMX.Controls.TControl.Click, Click triggers an OnMouseLeave and, if the AutoCheck property is True, negates the IsChecked property. 
</summary></devnotes></procedure>
      <procedure name="DefineProperties" visibility="protected" procflags="override" file="FMX.Menus.pas" line="177">
        <parameters>
          <parameter name="Filer" type="TFiler"/>
        </parameters>
      <devnotes><summary>






Designates methods for storing an object's unpublished data on a stream such as a form file.
FMX.Menus.TMenuItem.DefineProperties inherits from System.Classes.TComponent.DefineProperties. All content below this line refers to System.Classes.TComponent.DefineProperties.
Designates methods for storing an object's unpublished data on a stream such as a form file.
TComponent overrides the DefineProperties method defined in TPersistent to define &quot;fake&quot; Top and Left properties. These are defined so that components that are not controls can be manipulated at design time. However, the Top and Left properties are hidden, that is, they are not published, because only controls appear at run time.
DefineProperties is virtual; descendent classes can override it. When overriding DefineProperties, be aware that the Ancestor property of Filer might be set, and that this property can determine whether or not it is appropriate to write properties.
DefineProperties is called automatically as part of the component streaming system; do not call it directly.
</summary></devnotes></procedure>
      <procedure name="SetText" visibility="protected" procflags="override" file="FMX.Menus.pas" line="178">
        <parameters>
          <parameter name="Value" type="string" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Protected setter implementation for the Text property.
FMX.Menus.TMenuItem.SetText inherits from FMX.Controls.TTextControl.SetText. All content below this line refers to FMX.Controls.TTextControl.SetText.
Protected setter implementation for the Text property.
In descendants, override SetText to allow for further functionality when setting the text using the Text property.
Do not use SetText directly in applications. Use the Text property instead.
</summary></devnotes></procedure>
      <function name="EnterChildren" visibility="protected" procflags="override" file="FMX.Menus.pas" line="179">
        <parameters>
          <parameter name="AObject" type="IControl"/>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
Checks whether the input is taken by the control or by its parent.
FMX.Menus.TMenuItem.EnterChildren inherits from FMX.Controls.TControl.EnterChildren. All content below this line refers to FMX.Controls.TControl.EnterChildren.
Checks whether the input is taken by the control or by its parent.
EnterChildren returns True if the input is taken directly by the control's parent, and False otherwise. 
Usually, EnterChildren returns False. If the control is an item such as TListBoxItem, a TTreeViewItem, or TMenuItem, EnterChildren returns True.
</summary></devnotes></function>
      <procedure name="ActionChange" visibility="protected" procflags="override" file="FMX.Menus.pas" line="180">
        <parameters>
          <parameter name="Sender" type="TBasicAction"/>
          <parameter name="CheckDefaults" type="Boolean"/>
        </parameters>
      <devnotes><summary>
Specifies the behavior of a TMenuItem menu item when Action changes. 
ActionChange calls the inherited TTextControl.ActionChange method and then, depending on the CheckDefaults value,  ActionChange uses properties of the Sender action to set new values to the  
IsChecked and GroupName properties of TMenuItem. 
Do not call ActionChange explicitly in an application. It is for internal use.
</summary></devnotes></procedure>
      <function name="GetVisibleItemsCount" visibility="protected" file="FMX.Menus.pas" line="181">
        <parameters>
          <retval type="Integer"/>
        </parameters>
      <devnotes><summary>
Determines the number of child TMenuItems that have the Visible property set to True.
</summary></devnotes></function>
      <function name="GetDefaultStyleLookupName" visibility="protected" procflags="override" file="FMX.Menus.pas" line="182">
        <parameters>
          <retval type="string"/>
        </parameters>
      <devnotes><summary>
Protected getter implementation for the DefaultStyleLookupName property.
FMX.Menus.TMenuItem.GetDefaultStyleLookupName inherits from FMX.Controls.TStyledControl.GetDefaultStyleLookupName. All content below this line refers to FMX.Controls.TStyledControl.GetDefaultStyleLookupName.
Protected getter implementation for the DefaultStyleLookupName property.
When you Create a styled FireMonkey component by extending an existing component, override this method, if you want your component to inherit styles from the parent component. See Step 2 - Implement a Property to Specify the Format: Inheriting Styles of the Parent Component for more information and example code.
</summary></devnotes></function>
      <procedure name="Move" visibility="protected" procflags="override" file="FMX.Menus.pas" line="183">
      <devnotes><summary>
Realigns the parent of this TMenuItem. 
</summary></devnotes></procedure>
      <procedure name="Resize" visibility="protected" procflags="override" file="FMX.Menus.pas" line="184">
      <devnotes><summary>
OnResize event dispatcher. 
FMX.Menus.TMenuItem.Resize inherits from FMX.Controls.TControl.Resize. All content below this line refers to FMX.Controls.TControl.Resize.
OnResize event dispatcher. 
A control calls Resize when the dimensions of the control change.
Derived classes can override the protected Resize method to implement specific responses to control resizing.
</summary></devnotes></procedure>
      <procedure name="DoBitmapChanged" visibility="protected" procflags="virtual" file="FMX.Menus.pas" line="185">
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <function name="CalcVisibleObjectsItemSize" visibility="protected" file="FMX.Menus.pas" line="186">
        <parameters>
          <parameter name="ACanvas" type="TCanvas" paramflags="const"/>
          <parameter name="APointF" type="TPointF"/>
          <retval type="TPointF"/>
        </parameters>
      <devnotes><summary>
CalcVisibleObjectsItemSize determines the render size of this TMenuItem.
</summary></devnotes></function>
      <procedure name="ImagesChanged" visibility="protected" procflags="virtual" file="FMX.Menus.pas" line="190">
        <devnotes><summary>
Should be called when the component needs to redraw the image.
ImagesChanged should be called
when you change the Images reference to the TCustomImageList object or 
the object itself or when you change the ImageIndex property.
</summary></devnotes>
      </procedure>
      <function name="ImageIndexStored" visibility="protected" procflags="virtual" file="FMX.Menus.pas" line="193">
        <devnotes><summary>
Returns True when the ImageIndex property needs to be stored in the fmx-file.
</summary></devnotes>
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <procedure name="SetParent" visibility="protected" procflags="override" file="FMX.Menus.pas" line="194">
        <parameters>
          <parameter name="Value" type="TFmxObject" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Protected setter implementation for the Parent property.
FMX.Menus.TMenuItem.SetParent inherits from FMX.Types.TFmxObject.SetParent. All content below this line refers to FMX.Types.TFmxObject.SetParent.
Protected setter implementation for the Parent property.
</summary></devnotes></procedure>
      <procedure name="ParentChanged" visibility="protected" procflags="override" file="FMX.Menus.pas" line="195">
      <devnotes><summary>
Executed right after the value of the Parent property changes.
FMX.Menus.TMenuItem.ParentChanged inherits from FMX.Controls.TControl.ParentChanged. All content below this line refers to FMX.Controls.TControl.ParentChanged.
Executed right after the value of the Parent property changes.
The control does not execute ParentChanged if you assign Parent the same value that it already has.

 See Also
FMX.Controls.TControl.AncestorParentChanged
FMX.Controls.TControl.ClipChildrenChanged
FMX.Controls.TControl.EffectEnabledChanged
FMX.Controls.TControl.EnabledChanged
FMX.Controls.TControl.HandleSizeChanged
FMX.Controls.TControl.HitTestChanged
FMX.Controls.TControl.PaddingChanged
FMX.Controls.TControl.VisibleChanged
FMX.Controls.TControl.AncestorVisibleChanged
FMX.Controls.TControl.ChildrenAlignChanged

</summary></devnotes></procedure>
      <procedure name="ApplyStyle" visibility="protected" procflags="override" file="FMX.Menus.pas" line="197">
      <devnotes><summary>


Customizes styles in complex objects.
FMX.Menus.TMenuItem.ApplyStyle inherits from FMX.Controls.TStyledControl.ApplyStyle. All content below this line refers to FMX.Controls.TStyledControl.ApplyStyle.
Customizes styles in complex objects.
TStyledControl descendants override it to apply styles in concordance with their primitive components.      
Do not call ApplyStyle explicitly in an application. It is called by the ApplyStyleLookup method when object styles are updated.
For an example of an ApplyStyle implementation, see &quot;TCalloutPanel:Style Contracts&quot; in FireMonkey Component Design.
</summary></devnotes></procedure>
      <procedure name="FreeStyle" visibility="protected" procflags="override" file="FMX.Menus.pas" line="198">
      <devnotes><summary>
Frees the style of TStyledControl.
FMX.Menus.TMenuItem.FreeStyle inherits from FMX.Controls.TTextControl.FreeStyle. All content below this line refers to FMX.Controls.TTextControl.FreeStyle.
Frees the style of TStyledControl.
FreeStyle frees some TTextControl-specific style resources like TextObject and TextSettings, then calls the inherited TStyledControl.FreeStyle.
</summary></devnotes></procedure>
      <function name="GetItemsCount" visibility="protected" file="FMX.Menus.pas" line="200">
        <parameters>
          <retval type="Integer"/>
        </parameters>
      <devnotes><summary>
Returns the number of the visible TMenuItems from the Children property.
GetItemsCount determines and returns the number of the TMenuItem objects from the Children property, for which the Visible property is True.
</summary></devnotes></function>
      <function name="GetItem" visibility="protected" file="FMX.Menus.pas" line="201">
        <parameters>
          <parameter name="AIndex" type="Integer" paramflags="const"/>
          <retval type="TFmxObject"/>
        </parameters>
      <devnotes><summary>
Returns the specified TMenuItem child.
GetItem searches in the Children property for the TMenuItem object specified by the value of the AIndex parameter, and returns it.

Note: Only TMenuItem objects are taken into account when iterating through the Children property.</summary></devnotes></function>
      <procedure name="SetVisible" visibility="protected" procflags="override" file="FMX.Menus.pas" line="202">
        <parameters>
          <parameter name="AValue" type="Boolean" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Setter function for the Visible property.
In addition to FMX.Controls.TControl.SetVisible, SetVisible realigns the children of the Parent property so that, if Visible is False, the TMenuItem object is not displayed.
</summary></devnotes></procedure>
      <procedure name="SetEnabled" visibility="protected" procflags="override" file="FMX.Menus.pas" line="203">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Modifies the value of the Enabled property of this TMenuItem.
</summary></devnotes></procedure>
      <procedure name="DialogKey" visibility="protected" procflags="override" file="FMX.Menus.pas" line="204">
        <parameters>
          <parameter name="Key" type="Word" paramflags="var"/>
          <parameter name="Shift" type="TShiftState"/>
        </parameters>
      <devnotes><summary>
Processes a dialog key.
DialogKey is called during the message preprocessing to handle dialog characters. If the pressed keys match the ShortCut property, an OnClick event is triggered.
Do not call DialogKey in an application. It is for internal use only.
DialogKey processes the dialog key messages for each of the control's children.
</summary></devnotes></procedure>
      <function name="IsMenuBarItem" visibility="protected" file="FMX.Menus.pas" line="208">
        <devnotes><summary>
It determines if the item is child of TMenuBar control.
The appearance of these menu items differs from all the others. For example: the default style is menubaritemstyle.
</summary></devnotes>
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <property name="Handle" visibility="protected" read="GetHandle" write="SetHandle" type="NativeUInt" file="FMX.Menus.pas" line="210"><devnotes><summary>
Represents the FireMonkey-specific handle of the TMenuItem.
</summary></devnotes></property>
      <property name="ImageOffset" visibility="protected" read="FImageOffset" type="Single" default="0" file="FMX.Menus.pas" line="212">
        <devnotes><summary>
It is the additional text offset to the right, which is determined by the width of the picture.


</summary></devnotes>
      </property>
      <constructor name="Create" visibility="public" file="FMX.Menus.pas" line="214">
        <parameters>
          <parameter name="AOwner" type="TComponent"/>
        </parameters>
      <devnotes><summary>


Allocates memory and constructs a safely initialized instance of a component.
Allocates memory and constructs a safely initialized instance of a component.
FMX.Menus.TMenuItem.Create inherits from System.Classes.TComponent.Create. All content below this line refers to System.Classes.TComponent.Create.
Allocates memory and constructs a safely initialized instance of a component.
All objects have a Create method that constructs the object. TComponent redefines Create so that, for components, Create also:

Establishes the relationship of a component and its Owner, as indicated by the AOwner parameter.
Sets the ComponentStyle property to csInheritable, meaning that the component can be inherited by a descendent form type.
It is not necessary to explicitly create components added in the Form Designer. These components are created automatically when the application is run, and they are destroyed when the application is closed.
For components created programmatically, that is, not created in the Form Designer, call Create and pass in an owner component as the AOwner parameter. The owner disposes of the component when it is destroyed. If the component is not owned, then use Free when it needs to be destroyed.

Tip:  When passing in Self as the Owner parameter, consider what Self references. If a component creates another component in one of its methods, then Self refers to the first component and not the component being created, which is then owned by the first component.
Note:  The TComponent constructor is virtual in part to allow polymorphic instantiation of class references. This is critical to the streaming system and to the Form Designer. Do not forget to use the override directive when declaring a new component's Create constructor.</summary></devnotes></constructor>
      <destructor name="Destroy" visibility="public" file="FMX.Menus.pas" line="215">
        <parameters>
        </parameters>
      <devnotes><summary>


Disposes of the component and its owned components.
Disposes of the component and its owned components.
FMX.Menus.TMenuItem.Destroy inherits from System.Classes.TComponent.Destroy. All content below this line refers to System.Classes.TComponent.Destroy.
Disposes of the component and its owned components.
Do not call Destroy directly. Call Free instead. Free verifies that the component is not nil, and only then calls Destroy.
Never explicitly free a component in one of its own event handlers, nor free a component from the event handler of a component that it owns or contains.
To destroy a form, call its Release method. Release waits for all the form's event handlers and the event handlers of the form's components to finish executing before destroying the form.

Note: A form owns all the controls and nonvisual components that are placed on it in design mode. When it is freed, all of these components are automatically freed as well. By default, all forms are owned by the global Application object. When an application terminates, it frees the global Application object, which frees all forms. For objects that are not components, and for components created with a nil owner, be sure to call Free after finishing with the object; otherwise the memory allocated for the object will be lost until the application terminates.</summary></devnotes></destructor>
      <procedure name="Clear" visibility="public" file="FMX.Menus.pas" line="216">
      <devnotes><summary>
Clears this TMenuItem.
Clear removes all the children menu items of this menu item.
</summary></devnotes></procedure>
      <function name="CalcSize" visibility="public" file="FMX.Menus.pas" line="218">
        <parameters>
          <retval type="TPointF"/>
        </parameters>
      <devnotes><summary>
Calculates the size of a TMenuItem as a TPointF.
Use CalcSize to determine the size of a TMenuItem object as a TPointF.

Note: The Y value of the TPointF returned is 8 for a separator, and 23 for a regular TMenuItem.

</summary></devnotes></function>
      <function name="CalcRenderSize" visibility="public" file="FMX.Menus.pas" line="219">
        <parameters>
          <retval type="TPointF"/>
        </parameters>
      <devnotes><summary>
CalcRenderSize determines the render size of this TMenuItem as a TPointF. 
</summary></devnotes></function>
      <function name="CanBeClicked" visibility="public" file="FMX.Menus.pas" line="220">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></function>
      <property name="ParentMenuItem" visibility="public" read="GetParentMenuItem" type="TMenuItem" file="FMX.Menus.pas" line="222">
        <devnotes><summary>
It returns the parent menu item.


</summary></devnotes>
      </property>
      <property name="MainMenu" visibility="public" read="GetMainMenu" type="TMainMenu" file="FMX.Menus.pas" line="224">
        <devnotes><summary>
It returns the main menu to which the menu item is attached.


</summary></devnotes>
      </property>
      <procedure name="Popup" visibility="public" file="FMX.Menus.pas" line="226">
      <devnotes><summary>
Creates and displays the TMenuItem's pop-up menu.
Popup creates and displays a pop-up menu containing all the visible TMenuItem children of the current object.

Note: The TMenuItem children for which the Visible property is False are not displayed.</summary></devnotes></procedure>
      <procedure name="NeedPopup" visibility="public" file="FMX.Menus.pas" line="227">
      <devnotes><summary>
Displays the pop-up menu of the current TMenuItem object, after a short delay.
Use NeedPopup to display the pop-up menu of the current TMenuItem object, after a short delay.
</summary></devnotes></procedure>
      <function name="HavePopup" visibility="public" file="FMX.Menus.pas" line="228">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      <devnotes><summary>
Decides whether the current TMenuItem needs a pop-up menu.
A TMenuItem object needs a pop-up menu if at least one of the object's children is a TMenuItem.
</summary></devnotes></function>
      <property name="View" visibility="public" read="GetMenuView" type="IMenuView" file="FMX.Menus.pas" line="229"><devnotes><summary>
For internal use.
Do not use this property. It is for internal use.


</summary></devnotes></property>
      <property name="ItemsCount" visibility="public" read="GetItemsCount" type="Integer" file="FMX.Menus.pas" line="230"><devnotes><summary>
Represents the number of child TMenuItems of this menu item.
</summary></devnotes></property>
      <property name="Items[const AIndex]" visibility="public" read="GetItems" type="TMenuItem" file="FMX.Menus.pas" line="231"/>
      <property name="IsSelected" visibility="public" read="FIsSelected" write="SetIsSelected" type="Boolean" file="FMX.Menus.pas" line="232"><devnotes><summary>
Specifies whether the TMenuItem is selected. IsSelected is True if the TMenuItem is selected, and False otherwise.
</summary></devnotes></property>
      <property name="IsSeparator" visibility="public" read="GetIsSeparator" type="Boolean" file="FMX.Menus.pas" line="234">
        <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes>
      </property>
      <property name="Images" visibility="public" read="GetImages" type="TCustomImageList" file="FMX.Menus.pas" line="236">
        <devnotes><summary>
Defines the reference to a TCustomImageList list of images to be used to draw images on the component.
If the TCustomImageList list is empty, then Images is nil/null.
Call ImagesChanged when Images is changed.
</summary></devnotes>
      </property>
      <property name="Action" visibility="published" read="GetAction" write="SetAction" type="TBasicAction" hoisted="true" file="FMX.Menus.pas" line="238"/>
      <property name="Bitmap" visibility="published" read="FBitmap" write="SetBitmap" type="TBitmap" file="FMX.Menus.pas" line="239"><devnotes><summary>
A bitmap that is drawn on the TMenuItem menu item.
Use Bitmap to provide a custom image that appears next to the text of the TMenuItem.
Bitmap is an obsolete feature. We recommend to show images stored in a centralized collection of images. Such image is specified with the ImageIndex property from the image list specified with Images. If an image specified with ImageIndex and Images is not empty, the TMenuItem object shows this image. Otherwise, the TMenuItem object shows the image specified in  Bitmap.
</summary></devnotes></property>
      <property name="Enabled" visibility="published" read="FEnabled" write="SetEnabled" stored="EnabledStored" type="Boolean" hoisted="true" file="FMX.Menus.pas" line="240"/>
      <property name="Locked" visibility="published" read="FLocked" write="SetLocked" type="Boolean" default="0" hoisted="true" file="FMX.Menus.pas" line="241"/>
      <property name="Padding" visibility="published" read="GetPadding" write="SetPadding" type="TBounds" hoisted="true" file="FMX.Menus.pas" line="242"/>
      <property name="Opacity" visibility="published" read="FOpacity" write="SetOpacity" stored="IsOpacityStored" type="Single" hoisted="true" file="FMX.Menus.pas" line="243"/>
      <property name="Margins" visibility="published" read="GetMargins" write="SetMargins" type="TBounds" hoisted="true" file="FMX.Menus.pas" line="244"/>
      <property name="PopupMenu" visibility="published" read="FPopupMenu" write="SetPopupMenu" stored="IsPopupMenuStored" type="TCustomPopupMenu" hoisted="true" file="FMX.Menus.pas" line="245"/>
      <property name="AutoCheck" visibility="published" read="GetAutoCheck" write="SetAutoCheck" stored="AutoCheckStored" type="Boolean" default="0" file="FMX.Menus.pas" line="246"><devnotes><summary>
Controls whether the IsChecked property toggles when the TMenuItem is clicked.
Set the AutoCheck property to True if the toggling of the IsChecked property is desired when the  TMenuItem is clicked, and to False otherwise.
</summary></devnotes></property>
      <property name="GroupIndex" visibility="published" read="GetGroupIndex" write="SetGroupIndex" stored="GroupNameStored" type="Integer" default="0" file="FMX.Menus.pas" line="247"><devnotes><summary>
Identifies the group of TMenuItems to which this TMenuItem belongs.
A group of TMenuItems represents a set of TMenuItem objects belonging to the same pop-up menu, out of which only one TMenuItem, having the RadioItem property set to True, can be selected.

Note: TMenuItems belonging to different pop-up menus (that do not have the same value for the Parent property) can be simultaneously selected, even if their RadioItem property is True.
Note: By default, all TMenuItems belonging to the same pop-up menu have the same value for the GroupIndex property.</summary></devnotes></property>
      <property name="RadioItem" visibility="published" read="GetRadioItem" write="SetRadioItem" stored="RadioItemStored" type="Boolean" default="0" file="FMX.Menus.pas" line="248"><devnotes><summary>
Specifies whether the TMenuItem is mutually exclusive with other menu items in its group.
Use RadioItem to make the menu item behave like a radio button with a group of other menu items. The group of menu items is the set of all menu items in a pop-up menu that have the same value of GroupIndex. When RadioItem is True, only one menu item in the group that contains the menu item can be selected at a time. The single selected menu item in the group is indicated by a check mark beside its text.

Note: RadioItem does not work for the top-level items in a main menu. </summary></devnotes></property>
      <property name="IsChecked" visibility="published" read="FIsChecked" write="SetIsChecked" stored="IsCheckedStored" type="Boolean" default="0" file="FMX.Menus.pas" line="249"><devnotes><summary>
Specifies whether a check mark is displayed beside the text of the TMenuItem.
Use IsChecked to allow the TMenuItem to work like a check box. The menu item appears selected if IsChecked is True, and cleared otherwise.

Note: If AutoCheck is False, the menu item remains cleared even if IsChecked is True.</summary></devnotes></property>
      <property name="ShortCut" visibility="published" read="GetShortCut" write="SetShortCut" stored="ShortCutStored" type="TShortCut" file="FMX.Menus.pas" line="250"><devnotes><summary>
Shortcut that opens the menu item.
</summary></devnotes></property>
      <property name="StyleLookup" visibility="published" read="FStyleLookup" write="SetStyleLookup" type="string" default="0" hoisted="true" file="FMX.Menus.pas" line="251"/>
      <property name="Text" visibility="published" read="GetText" write="SetText" stored="TextStored" type="string" default="0" hoisted="true" file="FMX.Menus.pas" line="252"/>
      <property name="TouchTargetExpansion" visibility="published" read="FTouchTargetExpansion" write="SetTouchTargetExpansion" type="TBounds" hoisted="true" file="FMX.Menus.pas" line="253"/>
      <property name="Visible" visibility="published" read="FVisible" write="SetVisible" stored="VisibleStored" type="Boolean" default="1" hoisted="true" file="FMX.Menus.pas" line="254"/>
      <property name="ImageIndex" visibility="published" read="GetImageIndex" write="SetImageIndex" stored="ImageIndexStored" type="TImageIndex" file="FMX.Menus.pas" line="258">
        <devnotes><summary>
Defines the zero-based index enumerating images in the Images list of images.
If you use a non-existing ImageIndex value to access an image in the Images list, then no image is retrieved and no exception is raised. The usual default value is -1. Call ImagesChanged when ImageIndex is changed.
</summary></devnotes>
      </property>
      <event name="OnApplyStyleLookup" visibility="published" read="FOnApplyStyleLookup" write="FOnApplyStyleLookup" type="TNotifyEvent" hoisted="true" file="FMX.Menus.pas" line="260"/>
      <event name="OnClick" visibility="published" read="FOnClick" write="SetOnClick" stored="OnClickStored" type="TNotifyEvent" hoisted="true" file="FMX.Menus.pas" line="261"/>
    </members>
  </class>
  <class name="TPopupMenu" file="FMX.Menus.pas" line="270">
    
    <devnotes><summary>
Represents a pop-up menu.
Use TPopupMenu to describe a menu that appears only when the Popup procedure is called. TPopupMenu appears at the coordinates indicated by the parameters of the Popup procedure.
TPopupMenu is composed of TMenuItems. You can add menu items in several ways:

To add a menu item at design time, do any of the following:
Right-click the component and select Add Item from the context menu.
Double-click the component and click the Add Item button on the Items Designer.
Right-click the component, select Items Editor from the context menu, and then click the Add Item button.
To add a menu item at run time, use the AddObject procedure of TPopupMenu.</summary></devnotes>
    <ancestor name="TCustomPopupMenu" namespace="FMX.Types">
      <methodref name="DoPopup" visibility="protected" procflags="virtual"/>
      <eventref name="OnPopup" visibility="protected"/>
      <methodref name="Popup" visibility="public" procflags="abstract virtual"/>
      <propertyref name="PopupComponent" visibility="public"/>
      <ancestor name="TFmxObject" namespace="FMX.Types">
        <interfaces>
          <implements name="IActionClient"/>
          <implements name="IFreeNotification"/>
        </interfaces>
        <methodref name="SetStyleName" visibility="private"/>
        <methodref name="SetStored" visibility="private"/>
        <methodref name="GetChildrenCount" visibility="private" procflags="inline"/>
        <methodref name="GetIndexOfChild" visibility="private"/>
        <methodref name="SetIndexOfChild" visibility="private"/>
        <methodref name="SetIndex" visibility="private"/>
        <methodref name="GetActionRoot" visibility="private"/>
        <methodref name="GetActionClient" visibility="private" procflags="inline"/>
        <methodref name="SetActionClient" visibility="private"/>
        <methodref name="GetAction" visibility="private"/>
        <methodref name="SetAction" visibility="private"/>
        <methodref name="GetIndex" visibility="private"/>
        <methodref name="Create@" visibility="class private" procflags="class constructor noself"/>
        <methodref name="Destroy@" visibility="class private" procflags="class destructor noself"/>
        <methodref name="CreateChildrenList" visibility="protected" procflags="virtual"/>
        <methodref name="ResetChildrenIndicesSpan" visibility="protected"/>
        <methodref name="ResetChildrenIndices" visibility="protected"/>
        <methodref name="GetBackIndex" visibility="protected" procflags="virtual"/>
        <methodref name="DefineProperties" visibility="protected" procflags="override"/>
        <methodref name="IgnoreBindingName" visibility="protected"/>
        <methodref name="GetChildren" visibility="protected" procflags="override"/>
        <methodref name="SetParentComponent" visibility="protected" procflags="override"/>
        <methodref name="Notification" visibility="protected" procflags="override"/>
        <methodref name="GetActionLinkClass" visibility="protected" procflags="virtual"/>
        <methodref name="InitiateAction" visibility="protected" procflags="virtual"/>
        <methodref name="DoActionChange" visibility="protected" procflags="virtual"/>
        <methodref name="ActionChange" visibility="protected" procflags="virtual"/>
        <methodref name="DoActionClientChanged" visibility="protected" procflags="virtual"/>
        <propertyref name="ActionLink" visibility="protected"/>
        <propertyref name="Action" visibility="protected"/>
        <propertyref name="StyleIndexer" visibility="protected"/>
        <methodref name="GetParentComponent" visibility="public" procflags="override"/>
        <methodref name="HasParent" visibility="public" procflags="override"/>
        <methodref name="AddToResourcePool" visibility="protected" procflags="virtual"/>
        <methodref name="RemoveFromResourcePool" visibility="protected" procflags="virtual"/>
        <methodref name="SetParent" visibility="protected" procflags="virtual"/>
        <methodref name="DoRootChanging" visibility="protected" procflags="virtual"/>
        <methodref name="DoRootChanged" visibility="protected" procflags="virtual"/>
        <methodref name="ParentChanged" visibility="protected" procflags="virtual"/>
        <methodref name="ChangeOrder" visibility="protected" procflags="virtual"/>
        <methodref name="ChangeChildren" visibility="protected" procflags="virtual"/>
        <methodref name="DoAddObject" visibility="protected" procflags="virtual"/>
        <methodref name="DoInsertObject" visibility="protected" procflags="virtual"/>
        <methodref name="DoRemoveObject" visibility="protected" procflags="virtual"/>
        <methodref name="DoDeleteChildren" visibility="protected" procflags="virtual"/>
        <methodref name="SearchInto" visibility="protected" procflags="virtual"/>
        <methodref name="FreeNotification" visibility="protected" procflags="virtual"/>
        <methodref name="SupportsPlatformService" visibility="protected" procflags="virtual"/>
        <methodref name="GetData" visibility="protected" procflags="virtual"/>
        <methodref name="SetData" visibility="protected" procflags="virtual"/>
        <methodref name="IgnoreIntegerValue" visibility="protected"/>
        <methodref name="IgnoreFloatValue" visibility="protected"/>
        <methodref name="IgnoreBooleanValue" visibility="protected"/>
        <methodref name="IgnoreIdentValue" visibility="protected"/>
        <methodref name="Create" visibility="public" procflags="constructor override"/>
        <methodref name="Destroy" visibility="public" procflags="destructor override"/>
        <methodref name="BeforeDestruction" visibility="public" procflags="override"/>
        <methodref name="Release" visibility="public" procflags="virtual"/>
        <methodref name="Released" visibility="public" symflags="deprecated">
        </methodref>
        <methodref name="ObjectState" visibility="public" symflags="deprecated">
        </methodref>
        <methodref name="SetRoot" visibility="public"/>
        <methodref name="SetDesign" visibility="public"/>
        <methodref name="Clone" visibility="public"/>
        <methodref name="AddObject" visibility="public"/>
        <methodref name="InsertObject" visibility="public"/>
        <methodref name="RemoveObject" visibility="public" procflags="overload"/>
        <methodref name="RemoveObject" visibility="public" procflags="overload"/>
        <methodref name="ContainsObject" visibility="public" procflags="virtual"/>
        <methodref name="Exchange" visibility="public" procflags="virtual"/>
        <methodref name="DeleteChildren" visibility="public"/>
        <methodref name="IsChild" visibility="public" procflags="virtual"/>
        <methodref name="BringChildToFront" visibility="public"/>
        <methodref name="SendChildToBack" visibility="public"/>
        <methodref name="BringToFront" visibility="public" procflags="virtual"/>
        <methodref name="SendToBack" visibility="public" procflags="virtual"/>
        <methodref name="AddObjectsToList" visibility="public"/>
        <methodref name="Sort" visibility="public" procflags="virtual"/>
        <methodref name="EnumObjects" visibility="public">
        </methodref>
        <methodref name="AnimateFloat" visibility="public" symflags="deprecated">
        </methodref>
        <methodref name="AnimateFloatDelay" visibility="public" symflags="deprecated">
        </methodref>
        <methodref name="AnimateFloatWait" visibility="public" symflags="deprecated">
        </methodref>
        <methodref name="AnimateInt" visibility="public" symflags="deprecated">
        </methodref>
        <methodref name="AnimateIntWait" visibility="public" symflags="deprecated">
        </methodref>
        <methodref name="AnimateColor" visibility="public" symflags="deprecated">
        </methodref>
        <methodref name="StopPropertyAnimation" visibility="public"/>
        <methodref name="AddFreeNotify" visibility="public"/>
        <methodref name="RemoveFreeNotify" visibility="public"/>
        <methodref name="FindStyleResource" visibility="public" procflags="overload virtual"/>
        <propertyref name="Root" visibility="public"/>
        <propertyref name="Stored" visibility="public"/>
        <propertyref name="TagObject" visibility="public"/>
        <propertyref name="TagFloat" visibility="public"/>
        <propertyref name="TagString" visibility="public"/>
        <propertyref name="ChildrenCount" visibility="public"/>
        <propertyref name="Children" visibility="public"/>
        <propertyref name="Data" visibility="public"/>
        <propertyref name="Parent" visibility="public"/>
        <propertyref name="Index" visibility="public"/>
        <propertyref name="ActionClient" visibility="public"/>
        <propertyref name="StyleName" visibility="published"/>
        <ancestor name="TComponent" namespace="System.Classes">
          <interfaces>
            <implements name="IInterfaceComponentReference"/>
            <implements name="IInterface"/>
          </interfaces>
          <methodref name="GetComObject" visibility="private">
          </methodref>
          <methodref name="GetComponent" visibility="private">
          </methodref>
          <methodref name="GetComponentCount" visibility="private">
          </methodref>
          <methodref name="GetComponentIndex" visibility="private">
          </methodref>
          <methodref name="Insert" visibility="private">
          </methodref>
          <methodref name="ReadLeft" visibility="private">
          </methodref>
          <methodref name="ReadTop" visibility="private">
          </methodref>
          <methodref name="Remove" visibility="private">
          </methodref>
          <methodref name="RemoveNotification" visibility="private">
          </methodref>
          <methodref name="SetComponentIndex" visibility="private">
          </methodref>
          <methodref name="SetReference" visibility="private">
          </methodref>
          <methodref name="WriteLeft" visibility="private">
          </methodref>
          <methodref name="WriteTop" visibility="private">
          </methodref>
          <methodref name="IntfGetComponent" visibility="private">
          </methodref>
          <methodref name="DoGetDeltaStreams" visibility="private">
          </methodref>
          <methodref name="ReadDeltaStream" visibility="private">
          </methodref>
          <methodref name="ReadDeltaState" visibility="private">
          </methodref>
          <methodref name="FindSortedComponent" visibility="private">
          </methodref>
          <methodref name="AddSortedComponent" visibility="private">
          </methodref>
          <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
          </methodref>
          <methodref name="Create@" visibility="class private" procflags="class constructor noself">
          </methodref>
          <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="ChangeName" visibility="protected">
          </methodref>
          <methodref name="DefineProperties" visibility="protected" procflags="override">
          </methodref>
          <methodref name="GetChildren" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="GetOwner" visibility="protected" procflags="override">
          </methodref>
          <methodref name="Loaded" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="Notification" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="ReadState" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="CanObserve" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetObservers" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetAncestor" visibility="protected">
          </methodref>
          <methodref name="SetDesigning" visibility="protected">
          </methodref>
          <methodref name="SetInline" visibility="protected">
          </methodref>
          <methodref name="SetDesignInstance" visibility="protected">
          </methodref>
          <methodref name="SetName" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="Updating" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="Updated" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
          </methodref>
          <methodref name="ValidateRename" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="WriteState" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="RemoveFreeNotifications" visibility="protected">
          </methodref>
          <methodref name="QueryInterface" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="_AddRef" visibility="protected">
          </methodref>
          <methodref name="_Release" visibility="protected">
          </methodref>
          <methodref name="GetTypeInfoCount" visibility="protected">
          </methodref>
          <methodref name="GetTypeInfo" visibility="protected">
          </methodref>
          <methodref name="GetIDsOfNames" visibility="protected">
          </methodref>
          <methodref name="Invoke" visibility="protected">
          </methodref>
          <eventref name="OnGetDeltaStreams" visibility="protected">
          </eventref>
          <methodref name="Create" visibility="public" procflags="constructor virtual">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="BeforeDestruction" visibility="public" procflags="override">
          </methodref>
          <methodref name="BeginInvoke" visibility="public" procflags="overload">
          </methodref>
          <methodref name="BeginInvoke" visibility="public" procflags="overload">
          </methodref>
          <methodref name="BeginInvoke" visibility="public" procflags="overload">
          </methodref>
          <methodref name="BeginInvoke" visibility="public" procflags="overload">
          </methodref>
          <methodref name="BeginInvoke" visibility="public" procflags="overload">
          </methodref>
          <methodref name="BeginInvoke" visibility="public" procflags="overload">
          </methodref>
          <methodref name="BeginInvoke" visibility="public" procflags="overload">
          </methodref>
          <methodref name="BeginInvoke" visibility="public" procflags="overload">
          </methodref>
          <methodref name="EndInvoke" visibility="public" procflags="overload">
          </methodref>
          <methodref name="EndInvoke" visibility="public" procflags="overload">
          </methodref>
          <methodref name="EndFunctionInvoke" visibility="public">
          </methodref>
          <methodref name="DestroyComponents" visibility="public">
          </methodref>
          <methodref name="Destroying" visibility="public">
          </methodref>
          <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
          </methodref>
          <methodref name="FindComponent" visibility="public">
          </methodref>
          <methodref name="FreeNotification" visibility="public">
          </methodref>
          <methodref name="RemoveFreeNotification" visibility="public">
          </methodref>
          <methodref name="FreeOnRelease" visibility="public">
          </methodref>
          <methodref name="GetEnumerator" visibility="public" procflags="inline">
          </methodref>
          <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
          </methodref>
          <methodref name="GetNamePath" visibility="public" procflags="override">
          </methodref>
          <methodref name="HasParent" visibility="public" procflags="dynamic">
          </methodref>
          <methodref name="InsertComponent" visibility="public">
          </methodref>
          <methodref name="RemoveComponent" visibility="public">
          </methodref>
          <methodref name="SetSubComponent" visibility="public">
          </methodref>
          <methodref name="SafeCallException" visibility="public" procflags="override">
          </methodref>
          <methodref name="UpdateAction" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="IsImplementorOf" visibility="public">
          </methodref>
          <methodref name="ReferenceInterface" visibility="public">
          </methodref>
          <propertyref name="ComObject" visibility="public">
          </propertyref>
          <propertyref name="Components" visibility="public">
          </propertyref>
          <propertyref name="ComponentCount" visibility="public">
          </propertyref>
          <propertyref name="ComponentIndex" visibility="public">
          </propertyref>
          <propertyref name="ComponentState" visibility="public">
          </propertyref>
          <propertyref name="ComponentStyle" visibility="public">
          </propertyref>
          <propertyref name="DesignInfo" visibility="public">
          </propertyref>
          <propertyref name="Owner" visibility="public">
          </propertyref>
          <propertyref name="VCLComObject" visibility="public">
          </propertyref>
          <propertyref name="Observers" visibility="public">
          </propertyref>
          <propertyref name="Name" visibility="published">
          </propertyref>
          <propertyref name="Tag" visibility="published">
          </propertyref>
          <ancestor name="TPersistent" namespace="System.Classes">
            <methodref name="AssignError" visibility="private">
            </methodref>
            <methodref name="AssignTo" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DefineProperties" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetOwner" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor override">
            </methodref>
            <methodref name="Assign" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="GetNamePath" visibility="public" procflags="dynamic">
            </methodref>
            <ancestor name="TObject" namespace="System">
              <methodref name="Create" visibility="public" procflags="constructor">
              </methodref>
              <methodref name="Free" visibility="public">
              </methodref>
              <methodref name="DisposeOf" visibility="public" procflags="inline">
              </methodref>
              <methodref name="InitInstance" visibility="public" procflags="class">
              </methodref>
              <methodref name="CleanupInstance" visibility="public">
              </methodref>
              <methodref name="ClassType" visibility="public" procflags="inline">
              </methodref>
              <methodref name="ClassName" visibility="public" procflags="class">
              </methodref>
              <methodref name="ClassNameIs" visibility="public" procflags="class">
              </methodref>
              <methodref name="ClassParent" visibility="public" procflags="class inline">
              </methodref>
              <methodref name="ClassInfo" visibility="public" procflags="class inline">
              </methodref>
              <methodref name="InstanceSize" visibility="public" procflags="class inline">
              </methodref>
              <methodref name="InheritsFrom" visibility="public" procflags="class">
              </methodref>
              <methodref name="MethodAddress" visibility="public" procflags="class overload">
              </methodref>
              <methodref name="MethodAddress" visibility="public" procflags="class overload">
              </methodref>
              <methodref name="MethodName" visibility="public" procflags="class">
              </methodref>
              <methodref name="QualifiedClassName" visibility="public" procflags="class">
              </methodref>
              <methodref name="FieldAddress" visibility="public" procflags="overload">
              </methodref>
              <methodref name="FieldAddress" visibility="public" procflags="overload">
              </methodref>
              <methodref name="GetInterface" visibility="public">
              </methodref>
              <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
              </methodref>
              <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
              </methodref>
              <methodref name="UnitName" visibility="public" procflags="class">
              </methodref>
              <methodref name="UnitScope" visibility="public" procflags="class">
              </methodref>
              <methodref name="Equals" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="GetHashCode" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="ToString" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="SafeCallException" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="AfterConstruction" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="Dispatch" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="DefaultHandler" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="NewInstance" visibility="public" procflags="class virtual">
              </methodref>
              <methodref name="FreeInstance" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor virtual">
              </methodref>
              <methodref name="GetDisposed" visibility="protected" procflags="inline">
              </methodref>
              <methodref name="CheckDisposed" visibility="protected" procflags="inline">
              </methodref>
              <propertyref name="Disposed" visibility="protected">
              </propertyref>
            </ancestor>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <interfaces>
      <implements name="IGlyph"/>
      <implements name="IItemsContainer"/>
    </interfaces>
    <members>
      <field name="FContent" type="TContent" visibility="private" size="4" offset="144" file="FMX.Menus.pas" line="272"/>
      <field name="FNoItemsContent" type="TFmxObject" visibility="private" size="4" offset="148" file="FMX.Menus.pas" line="273"/>
      <field name="FPopupPoint" type="TPointF" visibility="private" size="8" offset="152" file="FMX.Menus.pas" line="274"/>
      <field name="FMenuService" type="IFMXMenuService" visibility="private" size="4" offset="160" file="FMX.Menus.pas" line="275"/>
      <field name="FImageLink" type="TGlyphImageLink" visibility="private" size="4" offset="164" file="FMX.Menus.pas" line="276"/>
      <field name="FImages" type="TCustomImageList" visibility="private" size="4" offset="168" file="FMX.Menus.pas" line="277">
        <attributes>
          <attribute name="TObject"/>
        </attributes>
      </field>
      <procedure name="AddNoItemObject" visibility="private" file="FMX.Menus.pas" line="278">
        <parameters>
          <parameter name="AObject" type="TFmxObject" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetItemsCount" visibility="private" file="FMX.Menus.pas" line="280">
        <parameters>
          <retval type="Integer"/>
        </parameters>
      </function>
      <function name="GetItem" visibility="private" file="FMX.Menus.pas" line="281">
        <parameters>
          <parameter name="AIndex" type="Integer" paramflags="const"/>
          <retval type="TFmxObject"/>
        </parameters>
      </function>
      <function name="GetObject" visibility="private" file="FMX.Menus.pas" line="282">
        <parameters>
          <retval type="TFmxObject"/>
        </parameters>
      </function>
      <function name="GetItems" visibility="private" file="FMX.Menus.pas" line="283">
        <parameters>
          <parameter name="Index" type="Integer" paramflags="const"/>
          <retval type="TMenuItem">
            <devnotes>
               <summary> This class describe the role and functionality of a menu item.
                This object is used to populate different types of menus defined in FMX:
                main menu, menu bar, popup menu.
               </summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <function name="GetImages" visibility="private" file="FMX.Menus.pas" line="284">
        <parameters>
          <retval type="TCustomImageList">
            <devnotes>
               <summary> List of images. Base class that used in fire monkey without published properties </summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <procedure name="SetImages" visibility="private" file="FMX.Menus.pas" line="285">
        <parameters>
          <parameter name="Value" type="TCustomImageList" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetImageIndex" visibility="private" file="FMX.Menus.pas" line="287">
        <parameters>
          <retval type="TImageIndex"/>
        </parameters>
      </function>
      <procedure name="SetImageIndex" visibility="private" file="FMX.Menus.pas" line="288">
        <parameters>
          <parameter name="Value" type="TImageIndex" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetImageList" visibility="private" procflags="inline" file="FMX.Menus.pas" line="289">
        <parameters>
          <retval type="TBaseImageList"/>
        </parameters>
      </function>
      <procedure name="SetImageList" visibility="private" file="FMX.Menus.pas" line="290">
        <parameters>
          <parameter name="Value" type="TBaseImageList" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="DoAddObject" visibility="protected" procflags="override" file="FMX.Menus.pas" line="294">
        <parameters>
          <parameter name="AObject" type="TFmxObject" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Adds the AObject object to the Children list of children attached to this parent object (self).
FMX.Menus.TPopupMenu.DoAddObject inherits from FMX.Types.TFmxObject.DoAddObject. All content below this line refers to FMX.Types.TFmxObject.DoAddObject.
Adds the AObject object to the Children list of children attached to this parent object (self).
DoAddObject adds the object provided in the AObject parameter to the list of children stored in the Children property of this object (self). DoAddObject changes the parent of AObject to this object (self) and sets the root of AObject to the Root object of this object (self).
Descendant classes, like TCommonCustomForm and TControl, additionally handle tab stop lists keeping ordered lists of objects to which the user can tab. If such descendant class supports the ITabStopController interface and AObject is an object of a class supporting the IControl interface, then DoAddObject of this descendant adds AObject to the TabList tab stop lists of the (self) object. 
DoAddObject is internally called from AddObject.
</summary></devnotes></procedure>
      <procedure name="DoInsertObject" visibility="protected" procflags="override" file="FMX.Menus.pas" line="295">
        <parameters>
          <parameter name="Index" type="Integer"/>
          <parameter name="AObject" type="TFmxObject" paramflags="const"/>
        </parameters>
      <devnotes><summary>


Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <procedure name="DoRemoveObject" visibility="protected" procflags="override" file="FMX.Menus.pas" line="296">
        <parameters>
          <parameter name="AObject" type="TFmxObject" paramflags="const"/>
        </parameters>
      <devnotes><summary>


Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <procedure name="Loaded" visibility="protected" procflags="override" file="FMX.Menus.pas" line="297">
      <devnotes><summary>
Initializes the component after the form file has been read into memory.
FMX.Menus.TPopupMenu.Loaded inherits from System.Classes.TComponent.Loaded. All content below this line refers to System.Classes.TComponent.Loaded.
Initializes the component after the form file has been read into memory.
Do not call the protected Loaded method. The streaming system calls this method after it loads the component's form from a stream.
When the streaming system loads a form or data module from its form file, it first constructs the form component by calling its constructor, then reads its property values from the form file. After reading all the property values for all the components, the streaming system calls the Loaded methods of each component in the order the components were created. This gives the components a chance to initialize any data that depends on the values of other components or other parts of itself.

Note:  All references to sibling components are resolved by the time Loaded is called. Loaded is the first place that sibling pointers can be used after being streamed in.
As implemented in TComponent, Loaded clears the csLoading flag in the ComponentState property, indicating that the component is no longer loading.

Warning: Loaded may be called multiple times on inherited forms. It is called every time a level of inheritance is streamed in. Do not allocate memory in an overridden Loaded method without first checking that the memory has not been allocated in a previous call.</summary></devnotes></procedure>
      <procedure name="ImagesChanged" visibility="protected" procflags="virtual" file="FMX.Menus.pas" line="301">
        <devnotes><summary>
Should be called when the component needs to redraw the image.
ImagesChanged  should be called when you change the Images reference to the TCustomImageList object or the object itself.
</summary></devnotes>
      </procedure>
      <constructor name="Create" visibility="public" file="FMX.Menus.pas" line="303">
        <parameters>
          <parameter name="AOwner" type="TComponent"/>
        </parameters>
      <devnotes><summary>
Allocates memory and constructs a safely initialized instance of a component.
Allocates memory and constructs a safely initialized instance of a component.
FMX.Menus.TPopupMenu.Create inherits from System.Classes.TComponent.Create. All content below this line refers to System.Classes.TComponent.Create.
Allocates memory and constructs a safely initialized instance of a component.
All objects have a Create method that constructs the object. TComponent redefines Create so that, for components, Create also:

Establishes the relationship of a component and its Owner, as indicated by the AOwner parameter.
Sets the ComponentStyle property to csInheritable, meaning that the component can be inherited by a descendent form type.
It is not necessary to explicitly create components added in the Form Designer. These components are created automatically when the application is run, and they are destroyed when the application is closed.
For components created programmatically, that is, not created in the Form Designer, call Create and pass in an owner component as the AOwner parameter. The owner disposes of the component when it is destroyed. If the component is not owned, then use Free when it needs to be destroyed.

Tip:  When passing in Self as the Owner parameter, consider what Self references. If a component creates another component in one of its methods, then Self refers to the first component and not the component being created, which is then owned by the first component.
Note:  The TComponent constructor is virtual in part to allow polymorphic instantiation of class references. This is critical to the streaming system and to the Form Designer. Do not forget to use the override directive when declaring a new component's Create constructor.</summary></devnotes></constructor>
      <destructor name="Destroy" visibility="public" file="FMX.Menus.pas" line="304">
        <parameters>
        </parameters>
      <devnotes><summary>
Disposes of the component and its owned components.
Disposes of the component and its owned components.
FMX.Menus.TPopupMenu.Destroy inherits from System.Classes.TComponent.Destroy. All content below this line refers to System.Classes.TComponent.Destroy.
Disposes of the component and its owned components.
Do not call Destroy directly. Call Free instead. Free verifies that the component is not nil, and only then calls Destroy.
Never explicitly free a component in one of its own event handlers, nor free a component from the event handler of a component that it owns or contains.
To destroy a form, call its Release method. Release waits for all the form's event handlers and the event handlers of the form's components to finish executing before destroying the form.

Note: A form owns all the controls and nonvisual components that are placed on it in design mode. When it is freed, all of these components are automatically freed as well. By default, all forms are owned by the global Application object. When an application terminates, it frees the global Application object, which frees all forms. For objects that are not components, and for components created with a nil owner, be sure to call Free after finishing with the object; otherwise the memory allocated for the object will be lost until the application terminates.</summary></devnotes></destructor>
      <procedure name="Clear" visibility="public" file="FMX.Menus.pas" line="305">
      <devnotes><summary>
Clears this TPopupMenu.
Clear removes all the child menu items of this pop-up menu.
</summary></devnotes></procedure>
      <procedure name="CloseMenu" visibility="public" procflags="inline" file="FMX.Menus.pas" line="306">
      <devnotes><summary>
TPopupMenu descendants may implement CloseMenu to define actions made when the pop-up menu closes.  
CloseMenu does nothing. It is meant to be implemented by TPopupMenu descendants to describe actions made when the pop-up menu closes.
</summary></devnotes></procedure>
      <procedure name="Popup" visibility="public" procflags="override" file="FMX.Menus.pas" line="307">
        <parameters>
          <parameter name="X" type="Single"/>
          <parameter name="Y" type="Single"/>
        </parameters>
      <devnotes><summary>
Displays the pop-up menu onscreen.
Call Popup to bring up the pop-up menu. The menu appears at the screen coordinates indicated by the values (in pixels) of X and Y. 
</summary></devnotes></procedure>
      <property name="PopupPoint" visibility="public" read="FPopupPoint" type="TPointF" file="FMX.Menus.pas" line="308"><devnotes><summary>
The point where the pop-up menu opens.
</summary></devnotes></property>
      <procedure name="DialogKey" visibility="public" file="FMX.Menus.pas" line="309">
        <parameters>
          <parameter name="Key" type="Word" paramflags="var"/>
          <parameter name="Shift" type="TShiftState"/>
        </parameters>
      <devnotes><summary>
Processes a dialog key for each of the TPopupMenu's TMenuItems.
DialogKey is called during the message preprocessing to handle dialog characters. If the pressed keys match the ShortCut property of one of the TPopupMenu's TMenuItems, the OnClick event of that TMenuItem is triggered.
</summary></devnotes></procedure>
      <property name="ItemsCount" visibility="public" read="GetItemsCount" type="Integer" file="FMX.Menus.pas" line="310"><devnotes><summary>
Represents the number of child TMenuItems of this pop-up menu.
</summary></devnotes></property>
      <property name="Items[const AIndex]" visibility="public" read="GetItems" type="TMenuItem" file="FMX.Menus.pas" line="311"/>
      <property name="Images" visibility="published" read="GetImages" write="SetImages" type="TCustomImageList" file="FMX.Menus.pas" line="314">
        <devnotes><summary>
Defines the reference to a TCustomImageList list of images to be used to draw images on the component.
If the TCustomImageList list is empty, then Images is nil/null.
Call ImagesChanged when Images is changed.
</summary></devnotes>
      </property>
      <event name="OnPopup" visibility="published" read="FOnPopup" write="FOnPopup" type="TNotifyEvent" hoisted="true" file="FMX.Menus.pas" line="315"/>
    </members>
  </class>
  <class name="TMenuBar" file="FMX.Menus.pas" line="324">
    
    <devnotes><summary>
Represents an editable menu bar.
TMenuBar describes the structure of a menu bar that can be moved, resized, and edited. TMenuBar is composed of TMenuItems.
Menu items can be added in several ways:

To add a menu item at design time, do any of the following:
Right-click the component and select Add Item from the context menu.
Double-click the component and click the Add Item button on the Items Designer.
Right-click the component, select Items Editor from the context menu, and then click the Add Item button.
To add a menu item at run time, use the AddObject procedure of the TMenuBar.
Use Items and ItemsCount to retrieve information about menu items.
TMenuBar:

</summary></devnotes>
    <ancestor name="TStyledControl" namespace="FMX.Controls">
      <methodref name="GetStyleData" visibility="class private"/>
      <methodref name="SetStyleData" visibility="class private"/>
      <methodref name="SetStyleLookup" visibility="class private"/>
      <methodref name="ScaleChangedHandler" visibility="class private"/>
      <methodref name="StyleChangedHandler" visibility="class private"/>
      <methodref name="InternalFreeStyle" visibility="private"/>
      <methodref name="SearchInto" visibility="protected" procflags="override"/>
      <methodref name="GetBackIndex" visibility="protected" procflags="override"/>
      <methodref name="IsHelpContextStored" visibility="protected"/>
      <methodref name="SetHelpContext" visibility="protected"/>
      <methodref name="SetHelpKeyword" visibility="protected"/>
      <methodref name="Notification" visibility="protected" procflags="override"/>
      <methodref name="DoSetSize" visibility="protected" procflags="override"/>
      <methodref name="DoApplyStyleLookup" visibility="protected" procflags="virtual"/>
      <methodref name="StyleDataChanged" visibility="protected" procflags="virtual"/>
      <methodref name="RequestStyleData" visibility="protected" procflags="virtual"/>
      <methodref name="Painting" visibility="protected" procflags="override"/>
      <methodref name="ApplyStyle" visibility="protected" procflags="virtual"/>
      <methodref name="FreeStyle" visibility="protected" procflags="virtual"/>
      <methodref name="GetStyleContext" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetDefaultStyleLookupName" visibility="protected" procflags="virtual"/>
      <methodref name="GetParentClassStyleLookupName" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoEnter" visibility="protected" procflags="override"/>
      <methodref name="Disappear" visibility="protected" procflags="override"/>
      <methodref name="AdjustSize" visibility="protected" procflags="virtual"/>
      <methodref name="AdjustFixedSize" visibility="protected" procflags="virtual"/>
      <methodref name="ChooseAdjustType" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DoStyleChanged" visibility="protected" procflags="virtual"/>
      <methodref name="StyleLookupChanged" visibility="protected" procflags="virtual"/>
      <methodref name="RecycleResourceLink" visibility="protected"/>
      <methodref name="KillResourceLink" visibility="protected"/>
      <methodref name="DoDeleteChildren" visibility="protected" procflags="override"/>
      <methodref name="GenerateStyleName" visibility="protected">
      </methodref>
      <methodref name="GetStyleObject" visibility="protected" procflags="overload virtual"/>
      <methodref name="GetStyleObject" visibility="protected" procflags="overload virtual"/>
      <methodref name="SetAdjustSizeValue" visibility="protected" procflags="virtual"/>
      <methodref name="SetAdjustType" visibility="protected" procflags="virtual"/>
      <methodref name="GetResourceLink" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetResourceControl" visibility="protected">
      </methodref>
      <propertyref name="IsNeedStyleLookup" visibility="protected"/>
      <propertyref name="ResourceLink" visibility="protected"/>
      <propertyref name="ResourceControl" visibility="protected"/>
      <methodref name="GetAdjustSizeValue" visibility="protected" procflags="override"/>
      <methodref name="GetAdjustType" visibility="protected" procflags="override"/>
      <methodref name="Create" visibility="public" procflags="constructor overload override"/>
      <methodref name="BeforeDestruction" visibility="public" procflags="override"/>
      <methodref name="Destroy" visibility="public" procflags="destructor override"/>
      <propertyref name="AdjustType" visibility="public"/>
      <propertyref name="AdjustSizeValue" visibility="public"/>
      <propertyref name="StyleState" visibility="public">
      </propertyref>
      <methodref name="RecalcSize" visibility="public" procflags="override"/>
      <methodref name="FindStyleResource" visibility="public" procflags="overload override"/>
      <methodref name="FindStyleResource" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FindAndCloneStyleResource" visibility="public">
      </methodref>
      <methodref name="SetNewScene" visibility="public" procflags="override"/>
      <methodref name="ApplyStyleLookup" visibility="public" procflags="virtual"/>
      <methodref name="NeedStyleLookup" visibility="public" procflags="virtual"/>
      <methodref name="Inflate" visibility="public" procflags="virtual"/>
      <methodref name="PrepareForPaint" visibility="public" procflags="override"/>
      <methodref name="StartTriggerAnimation" visibility="public" procflags="override"/>
      <methodref name="StartTriggerAnimationWait" visibility="public" procflags="override"/>
      <propertyref name="AutoTranslate" visibility="public"/>
      <propertyref name="DefaultStyleLookupName" visibility="public"/>
      <propertyref name="ParentClassStyleLookupName" visibility="public">
      </propertyref>
      <propertyref name="HelpType" visibility="public"/>
      <propertyref name="HelpKeyword" visibility="public"/>
      <propertyref name="HelpContext" visibility="public"/>
      <propertyref name="StylesData" visibility="public"/>
      <propertyref name="StyleLookup" visibility="public"/>
      <propertyref name="LoadableStyle" visibility="public">
      </propertyref>
      <methodref name="LookupStyleObject" visibility="public" procflags="class">
      </methodref>
      <ancestor name="TControl" namespace="FMX.Controls">
        <interfaces>
          <implements name="ITriggerEffect"/>
          <implements name="ITriggerAnimation"/>
          <implements name="ITabStopController"/>
          <implements name="IGestureControl"/>
          <implements name="IEffectContainer"/>
          <implements name="IAlignableObject"/>
          <implements name="IRotatedControl"/>
          <implements name="IAlignRoot"/>
          <implements name="IContainerObject"/>
          <implements name="IControl"/>
        </interfaces>
        <methodref name="AddToEffectsList" visibility="class private"/>
        <methodref name="RemoveFromEffectsList" visibility="class private"/>
        <methodref name="GetInvertAbsoluteMatrix" visibility="class private"/>
        <methodref name="SetPosition" visibility="class private"/>
        <methodref name="SetHitTest" visibility="class private"/>
        <methodref name="SetClipChildren" visibility="class private"/>
        <methodref name="GetCanvas" visibility="class private" procflags="inline"/>
        <methodref name="SetLocked" visibility="class private"/>
        <methodref name="SetTempCanvas" visibility="class private"/>
        <methodref name="SetOpacity" visibility="class private"/>
        <methodref name="IsOpacityStored" visibility="class private"/>
        <methodref name="SetCursor" visibility="class private"/>
        <methodref name="RefreshInheritedCursor" visibility="class private"/>
        <methodref name="RefreshInheritedCursorForChildren" visibility="class private"/>
        <methodref name="GetAbsoluteWidth" visibility="class private"/>
        <methodref name="GetAbsoluteHeight" visibility="class private"/>
        <methodref name="IsAnchorsStored" visibility="class private"/>
        <methodref name="GetEnabled" visibility="class private"/>
        <methodref name="GetCursor" visibility="class private"/>
        <methodref name="GetInheritedCursor" visibility="class private"/>
        <methodref name="GetAbsoluteHasEffect" visibility="class private"/>
        <methodref name="GetAbsoluteHasDisablePaintEffect" visibility="class private"/>
        <methodref name="GetAbsoluteHasAfterPaintEffect" visibility="class private"/>
        <methodref name="PaddingChangedHandler" visibility="class private" procflags="overload"/>
        <methodref name="MarginsChanged" visibility="class private"/>
        <methodref name="MatrixChanged" visibility="class private"/>
        <methodref name="SizeChanged" visibility="class private"/>
        <methodref name="GetControlsCount" visibility="class private"/>
        <methodref name="OnClickStored" visibility="class private"/>
        <methodref name="IsPopupMenuStored" visibility="class private"/>
        <methodref name="RequestAlign" visibility="class private"/>
        <methodref name="SetMinClipHeight" visibility="class private"/>
        <methodref name="SetMinClipWidth" visibility="class private"/>
        <methodref name="UpdateSmallSizeControl" visibility="class private"/>
        <methodref name="Create@" visibility="class private" procflags="class constructor noself"/>
        <methodref name="Destroy@" visibility="class private" procflags="class destructor noself"/>
        <methodref name="SetOnClick" visibility="class private"/>
        <methodref name="GetIsFocused" visibility="class private"/>
        <methodref name="SetPadding" visibility="class private"/>
        <methodref name="SetMargins" visibility="class private"/>
        <methodref name="SetTouchTargetExpansion" visibility="class private"/>
        <methodref name="InternalSizeChanged" visibility="class private"/>
        <methodref name="ReadFixedWidth" visibility="class private"/>
        <methodref name="WriteFixedWidth" visibility="class private"/>
        <methodref name="ReadFixedHeight" visibility="class private"/>
        <methodref name="WriteFixedHeight" visibility="class private"/>
        <methodref name="ReadDesignVisible" visibility="class private"/>
        <methodref name="ReadHint" visibility="class private"/>
        <methodref name="ReadShowHint" visibility="class private"/>
        <methodref name="DisabledOpacityStored" visibility="class private"/>
        <methodref name="SetDisabledOpacity" visibility="class private"/>
        <methodref name="GetAxisAlignedRect" visibility="class private"/>
        <methodref name="GetRotationAngle" visibility="class private"/>
        <methodref name="GetRotationCenter" visibility="class private"/>
        <methodref name="GetScale" visibility="class private"/>
        <methodref name="SetRotationAngle" visibility="class private"/>
        <methodref name="SetRotationCenter" visibility="class private"/>
        <methodref name="SetScale" visibility="class private"/>
        <methodref name="GetTabOrder" visibility="class private"/>
        <methodref name="SetTabOrder" visibility="class private"/>
        <methodref name="GetTabStop" visibility="class private"/>
        <methodref name="SetTabStop" visibility="class private"/>
        <methodref name="SetDisableDisappear" visibility="class private"/>
        <methodref name="GetDisableDisappear" visibility="class private"/>
        <methodref name="UpdateParentProperties" visibility="class private"/>
        <methodref name="CreateTouchManagerIfRequired" visibility="private"/>
        <methodref name="GetTouchManager" visibility="private"/>
        <methodref name="SetTouchManager" visibility="private"/>
        <methodref name="IsShowHintStored" visibility="private"/>
        <methodref name="SetParentShowHint" visibility="private"/>
        <methodref name="SetShowHint" visibility="private"/>
        <methodref name="GetAbsoluteClipRect" visibility="private"/>
        <methodref name="HintStored" visibility="private"/>
        <methodref name="RepaintJointArea" visibility="class protected"/>
        <methodref name="DoAbsoluteChanged" visibility="protected" procflags="virtual"/>
        <methodref name="CheckHitTest" visibility="protected" procflags="virtual"/>
        <methodref name="SetInPaintTo" visibility="protected"/>
        <methodref name="EndUpdateNoChanges" visibility="protected"/>
        <methodref name="SetHint" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetEnabled" visibility="protected" procflags="virtual"/>
        <methodref name="Loaded" visibility="protected" procflags="override"/>
        <methodref name="Updated" visibility="protected" procflags="override"/>
        <methodref name="DefineProperties" visibility="protected" procflags="override"/>
        <methodref name="Notification" visibility="protected" procflags="override"/>
        <methodref name="ParentChanged" visibility="protected" procflags="override"/>
        <methodref name="ChangeOrder" visibility="protected" procflags="override"/>
        <methodref name="ChangeChildren" visibility="protected" procflags="override"/>
        <methodref name="SetVisible" visibility="protected" procflags="virtual"/>
        <methodref name="DoSetWidth" visibility="protected" procflags="virtual" symflags="deprecated">
        </methodref>
        <methodref name="DoSetHeight" visibility="protected" procflags="virtual" symflags="deprecated">
        </methodref>
        <methodref name="DoSetSize" visibility="protected" procflags="virtual"/>
        <methodref name="HandleSizeChanged" visibility="protected" procflags="virtual"/>
        <methodref name="DoMatrixChanged" visibility="protected" procflags="virtual"/>
        <methodref name="SetHeight" visibility="protected" procflags="virtual"/>
        <methodref name="SetWidth" visibility="protected" procflags="virtual"/>
        <methodref name="SetSize" visibility="protected" procflags="overload virtual"/>
        <methodref name="SetSize" visibility="protected" procflags="overload virtual"/>
        <methodref name="GetAbsoluteRect" visibility="protected" procflags="virtual"/>
        <methodref name="GetChildrenMatrix" visibility="protected" procflags="virtual"/>
        <methodref name="GetAbsoluteScale" visibility="protected" procflags="virtual"/>
        <methodref name="GetParentedRect" visibility="protected" procflags="virtual" symflags="deprecated">
        </methodref>
        <methodref name="GetClipRect" visibility="protected" procflags="virtual"/>
        <methodref name="GetEffectsRect" visibility="protected" procflags="virtual"/>
        <methodref name="GetAbsoluteEnabled" visibility="protected" procflags="virtual"/>
        <methodref name="GetChildrenRect" visibility="protected" procflags="virtual"/>
        <methodref name="GetLocalRect" visibility="protected" procflags="virtual"/>
        <methodref name="GetBoundsRect" visibility="protected" procflags="virtual"/>
        <methodref name="SetBoundsRect" visibility="protected" procflags="virtual"/>
        <methodref name="IsHeightStored" visibility="protected" procflags="virtual" symflags="deprecated">
        </methodref>
        <methodref name="IsWidthStored" visibility="protected" procflags="virtual" symflags="deprecated">
        </methodref>
        <methodref name="IsPositionStored" visibility="protected" procflags="virtual"/>
        <methodref name="IsSizeStored" visibility="protected" procflags="virtual"/>
        <methodref name="SetPopupMenu" visibility="protected"/>
        <methodref name="GetAbsoluteMatrix" visibility="protected" procflags="virtual"/>
        <methodref name="GetHasClipParent" visibility="protected"/>
        <methodref name="GetUpdateRect" visibility="protected"/>
        <methodref name="DoGetUpdateRect" visibility="protected" procflags="virtual"/>
        <methodref name="GetAbsoluteOpacity" visibility="protected" procflags="virtual"/>
        <methodref name="BeginAutoDrag" visibility="protected" procflags="virtual"/>
        <methodref name="Capture" visibility="protected"/>
        <methodref name="ReleaseCapture" visibility="protected"/>
        <propertyref name="EnableExecuteAction" visibility="protected"/>
        <methodref name="Click" visibility="protected" procflags="virtual"/>
        <methodref name="DblClick" visibility="protected" procflags="virtual"/>
        <methodref name="MouseDown" visibility="protected" procflags="virtual"/>
        <methodref name="MouseMove" visibility="protected" procflags="virtual"/>
        <methodref name="MouseUp" visibility="protected" procflags="virtual"/>
        <methodref name="MouseWheel" visibility="protected" procflags="virtual"/>
        <methodref name="MouseClick" visibility="protected" procflags="virtual"/>
        <methodref name="KeyDown" visibility="protected" procflags="virtual"/>
        <methodref name="KeyUp" visibility="protected" procflags="virtual"/>
        <methodref name="DialogKey" visibility="protected" procflags="virtual"/>
        <methodref name="AfterDialogKey" visibility="protected" procflags="virtual"/>
        <methodref name="ShowContextMenu" visibility="protected" procflags="virtual"/>
        <methodref name="DragEnter" visibility="protected" procflags="virtual"/>
        <methodref name="DragOver" visibility="protected" procflags="virtual"/>
        <methodref name="DragDrop" visibility="protected" procflags="virtual"/>
        <methodref name="DragLeave" visibility="protected" procflags="virtual"/>
        <methodref name="DragEnd" visibility="protected" procflags="virtual"/>
        <methodref name="GetDefaultTouchTargetExpansion" visibility="protected" procflags="virtual"/>
        <methodref name="GetCanFocus" visibility="protected" procflags="virtual"/>
        <methodref name="GetCanParentFocus" visibility="protected" procflags="virtual"/>
        <methodref name="EnterChildren" visibility="protected" procflags="virtual"/>
        <methodref name="ExitChildren" visibility="protected" procflags="virtual"/>
        <methodref name="GetParentedVisible" visibility="protected" procflags="virtual"/>
        <methodref name="NeedUpdateEffects" visibility="protected"/>
        <methodref name="BeforeEffectEnabledChanged" visibility="protected"/>
        <methodref name="EffectEnabledChanged" visibility="protected"/>
        <methodref name="Realign" visibility="protected"/>
        <methodref name="ChildrenAlignChanged" visibility="protected"/>
        <methodref name="GetAlign" visibility="protected"/>
        <methodref name="SetAlign" visibility="protected" procflags="virtual"/>
        <methodref name="GetAnchors" visibility="protected"/>
        <methodref name="SetAnchors" visibility="protected" procflags="virtual"/>
        <methodref name="GetMargins" visibility="protected"/>
        <methodref name="GetPadding" visibility="protected"/>
        <methodref name="GetWidth" visibility="protected" procflags="virtual"/>
        <methodref name="GetHeight" visibility="protected" procflags="virtual"/>
        <methodref name="GetLeft" visibility="protected" procflags="virtual"/>
        <methodref name="GetTop" visibility="protected" procflags="virtual"/>
        <methodref name="GetAllowAlign" visibility="protected"/>
        <methodref name="GetAnchorRules" visibility="protected"/>
        <methodref name="GetAnchorOrigin" visibility="protected"/>
        <methodref name="GetOriginalParentSize" visibility="protected"/>
        <methodref name="GetAnchorMove" visibility="protected"/>
        <methodref name="SetAnchorMove" visibility="protected"/>
        <methodref name="GetAdjustSizeValue" visibility="protected" procflags="virtual"/>
        <methodref name="GetAdjustType" visibility="protected" procflags="virtual"/>
        <methodref name="GetContainerWidth" visibility="protected"/>
        <methodref name="GetContainerHeight" visibility="protected"/>
        <methodref name="GetObject" visibility="protected"/>
        <methodref name="GetParent" visibility="protected"/>
        <methodref name="GetVisible" visibility="protected"/>
        <methodref name="GetDesignInteractive" visibility="protected"/>
        <methodref name="GetPopupMenu" visibility="protected"/>
        <methodref name="DoEnter" visibility="protected" procflags="virtual"/>
        <methodref name="DoExit" visibility="protected" procflags="virtual"/>
        <methodref name="DoActivate" visibility="protected" procflags="virtual"/>
        <methodref name="DoDeactivate" visibility="protected" procflags="virtual"/>
        <methodref name="DoMouseEnter" visibility="protected" procflags="virtual"/>
        <methodref name="DoMouseLeave" visibility="protected" procflags="virtual"/>
        <methodref name="CheckForAllowFocus" visibility="protected"/>
        <methodref name="GetDragMode" visibility="protected" procflags="virtual"/>
        <methodref name="SetDragMode" visibility="protected" procflags="virtual"/>
        <methodref name="GetLocked" visibility="protected"/>
        <methodref name="GetHitTest" visibility="protected"/>
        <methodref name="GetAcceptsControls" visibility="protected"/>
        <methodref name="SetAcceptsControls" visibility="protected"/>
        <methodref name="FindTarget" visibility="protected" procflags="virtual"/>
        <methodref name="ObjectAtPoint" visibility="protected" procflags="virtual"/>
        <methodref name="HasHint" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetHintString" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetHintObject" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CanShowHint" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="BroadcastGesture" visibility="protected"/>
        <methodref name="CMGesture" visibility="protected" procflags="virtual"/>
        <methodref name="TouchManager" visibility="protected"/>
        <methodref name="GetFirstControlWithGesture" visibility="protected" procflags="virtual"/>
        <methodref name="GetFirstControlWithGestureEngine" visibility="protected"/>
        <methodref name="GetListOfInteractiveGestures" visibility="protected"/>
        <methodref name="Tap" visibility="protected" procflags="virtual"/>
        <methodref name="GetFirstVisibleObjectIndex" visibility="protected" procflags="virtual"/>
        <methodref name="GetLastVisibleObjectIndex" visibility="protected" procflags="virtual"/>
        <methodref name="GetDefaultSize" visibility="protected" procflags="virtual"/>
        <methodref name="FillTextFlags" visibility="protected" procflags="virtual"/>
        <methodref name="ApplyEffect" visibility="protected" procflags="virtual"/>
        <methodref name="PaintInternal" visibility="protected"/>
        <methodref name="SupportsPaintStage" visibility="protected" procflags="virtual"/>
        <methodref name="CanRepaint" visibility="protected" procflags="virtual"/>
        <methodref name="RepaintRect" visibility="protected"/>
        <methodref name="PaintChildren" visibility="protected" procflags="virtual"/>
        <methodref name="Painting" visibility="protected" procflags="virtual"/>
        <methodref name="Paint" visibility="protected" procflags="virtual"/>
        <methodref name="DoPaint" visibility="protected" procflags="virtual"/>
        <methodref name="AfterPaint" visibility="protected" procflags="virtual"/>
        <methodref name="DrawDesignBorder" visibility="protected"/>
        <methodref name="DoRealign" visibility="protected" procflags="virtual"/>
        <methodref name="DoBeginUpdate" visibility="protected" procflags="virtual"/>
        <methodref name="DoEndUpdate" visibility="protected" procflags="virtual"/>
        <methodref name="Move" visibility="protected" procflags="virtual"/>
        <methodref name="Resize" visibility="protected" procflags="virtual"/>
        <methodref name="DoResized" visibility="protected" procflags="virtual"/>
        <methodref name="Disappear" visibility="protected" procflags="virtual"/>
        <methodref name="Show" visibility="protected" procflags="virtual"/>
        <methodref name="Hide" visibility="protected" procflags="virtual"/>
        <methodref name="AncestorVisibleChanged" visibility="protected" procflags="virtual"/>
        <methodref name="AncestorParentChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ClipChildrenChanged" visibility="protected" procflags="virtual"/>
        <methodref name="HitTestChanged" visibility="protected" procflags="virtual"/>
        <methodref name="PaddingChanged" visibility="protected" procflags="overload virtual">
        </methodref>
        <propertyref name="MinClipWidth" visibility="protected"/>
        <propertyref name="MinClipHeight" visibility="protected"/>
        <propertyref name="SmallSizeControl" visibility="protected"/>
        <methodref name="DoAddObject" visibility="protected" procflags="override"/>
        <methodref name="DoInsertObject" visibility="protected" procflags="override"/>
        <methodref name="DoRemoveObject" visibility="protected" procflags="override"/>
        <methodref name="DoDeleteChildren" visibility="protected" procflags="override"/>
        <propertyref name="PaintStage" visibility="protected"/>
        <propertyref name="TempCanvas" visibility="protected"/>
        <methodref name="SetLeft" visibility="protected"/>
        <methodref name="SetTop" visibility="protected"/>
        <methodref name="UpdateExplicitBounds" visibility="protected"/>
        <methodref name="UpdateAnchorRules" visibility="protected"/>
        <propertyref name="Left" visibility="protected"/>
        <propertyref name="Top" visibility="protected"/>
        <propertyref name="ExplicitLeft" visibility="protected"/>
        <propertyref name="ExplicitTop" visibility="protected"/>
        <propertyref name="ExplicitWidth" visibility="protected"/>
        <propertyref name="ExplicitHeight" visibility="protected"/>
        <methodref name="GetActionLinkClass" visibility="protected" procflags="override"/>
        <methodref name="ActionChange" visibility="protected" procflags="override"/>
        <methodref name="EnabledStored" visibility="protected" procflags="virtual"/>
        <methodref name="VisibleStored" visibility="protected" procflags="virtual"/>
        <methodref name="EnabledChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="VisibleChanged" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="IsControlRectEmpty" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetControls" visibility="protected"/>
        <methodref name="DoGesture" visibility="protected" procflags="virtual"/>
        <methodref name="GetTabStopController" visibility="protected" procflags="virtual"/>
        <methodref name="GetTabListClass" visibility="protected" procflags="virtual"/>
        <propertyref name="DoubleClick" visibility="protected"/>
        <propertyref name="RotationAngle" visibility="protected"/>
        <propertyref name="RotationCenter" visibility="protected"/>
        <propertyref name="Scale" visibility="protected"/>
        <propertyref name="DisabledOpacity" visibility="protected"/>
        <propertyref name="ParentContent" visibility="protected"/>
        <propertyref name="ParentShowHint" visibility="protected">
        </propertyref>
        <methodref name="Create" visibility="public" procflags="constructor override"/>
        <methodref name="Destroy" visibility="public" procflags="destructor override"/>
        <methodref name="SetNewScene" visibility="public" procflags="virtual"/>
        <methodref name="SetBounds" visibility="public" procflags="virtual"/>
        <methodref name="AbsoluteToLocal" visibility="public" procflags="overload virtual">
        </methodref>
        <methodref name="AbsoluteToLocal" visibility="public" procflags="overload">
        </methodref>
        <methodref name="LocalToAbsolute" visibility="public" procflags="overload virtual">
        </methodref>
        <methodref name="LocalToAbsolute" visibility="public" procflags="overload">
        </methodref>
        <methodref name="ScreenToLocal" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="LocalToScreen" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="ConvertLocalPointFrom" visibility="public">
        </methodref>
        <methodref name="ConvertLocalPointTo" visibility="public">
        </methodref>
        <methodref name="AbsoluteToLocalVector" visibility="public" procflags="virtual"/>
        <methodref name="LocalToAbsoluteVector" visibility="public" procflags="virtual"/>
        <methodref name="PointInObject" visibility="public" procflags="virtual"/>
        <methodref name="PointInObjectLocal" visibility="public" procflags="virtual"/>
        <methodref name="MakeScreenshot" visibility="public"/>
        <methodref name="BeginUpdate" visibility="public" procflags="virtual"/>
        <methodref name="IsUpdating" visibility="public" procflags="virtual"/>
        <methodref name="EndUpdate" visibility="public" procflags="virtual"/>
        <methodref name="RecalcAbsoluteNow" visibility="public"/>
        <methodref name="RecalcUpdateRect" visibility="public" procflags="virtual"/>
        <methodref name="RecalcOpacity" visibility="public" procflags="virtual"/>
        <methodref name="RecalcAbsolute" visibility="public" procflags="virtual"/>
        <methodref name="RecalcEnabled" visibility="public" procflags="virtual"/>
        <methodref name="RecalcHasEffect" visibility="public" procflags="virtual"/>
        <methodref name="RecalcHasClipParent" visibility="public" procflags="virtual"/>
        <methodref name="PrepareForPaint" visibility="public" procflags="virtual"/>
        <methodref name="RecalcSize" visibility="public" procflags="virtual"/>
        <methodref name="UpdateEffects" visibility="public"/>
        <methodref name="ApplyTriggerEffect" visibility="public" procflags="virtual"/>
        <methodref name="StartTriggerAnimation" visibility="public" procflags="virtual"/>
        <methodref name="StartTriggerAnimationWait" visibility="public" procflags="virtual"/>
        <methodref name="SetFocus" visibility="public"/>
        <methodref name="ResetFocus" visibility="public"/>
        <methodref name="PaintTo" visibility="public">
        </methodref>
        <methodref name="Repaint" visibility="public"/>
        <methodref name="InvalidateRect" visibility="public"/>
        <methodref name="Lock" visibility="public"/>
        <propertyref name="AbsoluteMatrix" visibility="public"/>
        <propertyref name="AbsoluteOpacity" visibility="public"/>
        <propertyref name="AbsoluteWidth" visibility="public"/>
        <propertyref name="AbsoluteHeight" visibility="public"/>
        <propertyref name="AbsoluteScale" visibility="public"/>
        <propertyref name="AbsoluteEnabled" visibility="public"/>
        <propertyref name="AbsoluteRect" visibility="public"/>
        <propertyref name="AbsoluteClipRect" visibility="public">
        </propertyref>
        <propertyref name="AxisAlignedRect" visibility="public"/>
        <propertyref name="ApplyingEffect" visibility="public">
        </propertyref>
        <propertyref name="HasEffect" visibility="public"/>
        <propertyref name="HasDisablePaintEffect" visibility="public"/>
        <propertyref name="HasAfterPaintEffect" visibility="public"/>
        <propertyref name="HasClipParent" visibility="public"/>
        <propertyref name="ChildrenRect" visibility="public"/>
        <propertyref name="DefaultSize" visibility="public"/>
        <propertyref name="FixedSize" visibility="public"/>
        <propertyref name="InvertAbsoluteMatrix" visibility="public"/>
        <propertyref name="InPaintTo" visibility="public"/>
        <propertyref name="LocalRect" visibility="public"/>
        <propertyref name="Pressed" visibility="public"/>
        <propertyref name="PressedPosition" visibility="public">
        </propertyref>
        <propertyref name="UpdateRect" visibility="public"/>
        <propertyref name="BoundsRect" visibility="public"/>
        <propertyref name="ParentedRect" visibility="public"/>
        <propertyref name="ParentedVisible" visibility="public"/>
        <propertyref name="ClipRect" visibility="public"/>
        <propertyref name="Canvas" visibility="public"/>
        <propertyref name="Controls" visibility="public"/>
        <propertyref name="ControlsCount" visibility="public"/>
        <propertyref name="ParentControl" visibility="public"/>
        <propertyref name="Scene" visibility="public"/>
        <propertyref name="AutoCapture" visibility="public"/>
        <propertyref name="CanFocus" visibility="public"/>
        <propertyref name="CanParentFocus" visibility="public"/>
        <propertyref name="DisableFocusEffect" visibility="public"/>
        <propertyref name="IsInflated" visibility="public"/>
        <methodref name="EnumControls" visibility="public" procflags="overload"/>
        <methodref name="EnumControls" visibility="public" procflags="overload" symflags="deprecated">
        </methodref>
        <methodref name="GetTabList" visibility="public" procflags="virtual"/>
        <methodref name="ShowInDesigner" visibility="public" procflags="virtual"/>
        <methodref name="ShouldTestMouseHits" visibility="public" procflags="virtual">
        </methodref>
        <propertyref name="IsMouseOver" visibility="public"/>
        <propertyref name="IsDragOver" visibility="public"/>
        <propertyref name="IsFocused" visibility="public"/>
        <propertyref name="IsVisible" visibility="public"/>
        <propertyref name="Align" visibility="public"/>
        <propertyref name="Anchors" visibility="public"/>
        <propertyref name="Cursor" visibility="public"/>
        <propertyref name="InheritedCursor" visibility="public"/>
        <propertyref name="DragMode" visibility="public"/>
        <propertyref name="EnableDragHighlight" visibility="public"/>
        <propertyref name="Enabled" visibility="public"/>
        <propertyref name="Position" visibility="public"/>
        <propertyref name="Locked" visibility="public"/>
        <propertyref name="Width" visibility="public"/>
        <propertyref name="Height" visibility="public"/>
        <propertyref name="Size" visibility="public"/>
        <propertyref name="Padding" visibility="public"/>
        <propertyref name="Margins" visibility="public"/>
        <propertyref name="Opacity" visibility="public"/>
        <propertyref name="ClipChildren" visibility="public"/>
        <propertyref name="ClipParent" visibility="public"/>
        <propertyref name="HitTest" visibility="public"/>
        <propertyref name="PopupMenu" visibility="public"/>
        <propertyref name="TabOrder" visibility="public"/>
        <propertyref name="Visible" visibility="public"/>
        <eventref name="CustomSceneAddRect" visibility="public"/>
        <eventref name="OnDragEnter" visibility="public"/>
        <eventref name="OnDragLeave" visibility="public"/>
        <eventref name="OnDragOver" visibility="public"/>
        <eventref name="OnDragDrop" visibility="public"/>
        <eventref name="OnDragEnd" visibility="public"/>
        <eventref name="OnKeyDown" visibility="public"/>
        <eventref name="OnKeyUp" visibility="public"/>
        <eventref name="OnClick" visibility="public"/>
        <eventref name="OnDblClick" visibility="public"/>
        <eventref name="OnCanFocus" visibility="public"/>
        <eventref name="OnEnter" visibility="public"/>
        <eventref name="OnExit" visibility="public"/>
        <eventref name="OnMouseDown" visibility="public"/>
        <eventref name="OnMouseMove" visibility="public"/>
        <eventref name="OnMouseUp" visibility="public"/>
        <eventref name="OnMouseWheel" visibility="public"/>
        <eventref name="OnMouseEnter" visibility="public"/>
        <eventref name="OnMouseLeave" visibility="public"/>
        <eventref name="OnPainting" visibility="public"/>
        <eventref name="OnPaint" visibility="public"/>
        <eventref name="OnResize" visibility="public"/>
        <eventref name="OnResized" visibility="public"/>
        <eventref name="OnActivate" visibility="public"/>
        <eventref name="OnDeactivate" visibility="public"/>
        <eventref name="OnApplyStyleLookup" visibility="public"/>
        <propertyref name="TouchTargetExpansion" visibility="public"/>
        <propertyref name="TabStop" visibility="public"/>
        <propertyref name="DisableDisappear" visibility="public"/>
        <propertyref name="ShowHint" visibility="public">
        </propertyref>
        <propertyref name="Hint" visibility="public">
        </propertyref>
        <propertyref name="Touch" visibility="published"/>
        <eventref name="OnGesture" visibility="published"/>
        <eventref name="OnTap" visibility="published"/>
        <ancestor name="TFmxObject" namespace="FMX.Types">
          <interfaces>
            <implements name="IActionClient"/>
            <implements name="IFreeNotification"/>
          </interfaces>
          <methodref name="SetStyleName" visibility="private"/>
          <methodref name="SetStored" visibility="private"/>
          <methodref name="GetChildrenCount" visibility="private" procflags="inline"/>
          <methodref name="GetIndexOfChild" visibility="private"/>
          <methodref name="SetIndexOfChild" visibility="private"/>
          <methodref name="SetIndex" visibility="private"/>
          <methodref name="GetActionRoot" visibility="private"/>
          <methodref name="GetActionClient" visibility="private" procflags="inline"/>
          <methodref name="SetActionClient" visibility="private"/>
          <methodref name="GetAction" visibility="private"/>
          <methodref name="SetAction" visibility="private"/>
          <methodref name="GetIndex" visibility="private"/>
          <methodref name="Create@" visibility="class private" procflags="class constructor noself"/>
          <methodref name="Destroy@" visibility="class private" procflags="class destructor noself"/>
          <methodref name="CreateChildrenList" visibility="protected" procflags="virtual"/>
          <methodref name="ResetChildrenIndicesSpan" visibility="protected"/>
          <methodref name="ResetChildrenIndices" visibility="protected"/>
          <methodref name="GetBackIndex" visibility="protected" procflags="virtual"/>
          <methodref name="DefineProperties" visibility="protected" procflags="override"/>
          <methodref name="IgnoreBindingName" visibility="protected"/>
          <methodref name="GetChildren" visibility="protected" procflags="override"/>
          <methodref name="SetParentComponent" visibility="protected" procflags="override"/>
          <methodref name="Notification" visibility="protected" procflags="override"/>
          <methodref name="GetActionLinkClass" visibility="protected" procflags="virtual"/>
          <methodref name="InitiateAction" visibility="protected" procflags="virtual"/>
          <methodref name="DoActionChange" visibility="protected" procflags="virtual"/>
          <methodref name="ActionChange" visibility="protected" procflags="virtual"/>
          <methodref name="DoActionClientChanged" visibility="protected" procflags="virtual"/>
          <propertyref name="ActionLink" visibility="protected"/>
          <propertyref name="Action" visibility="protected"/>
          <propertyref name="StyleIndexer" visibility="protected"/>
          <methodref name="GetParentComponent" visibility="public" procflags="override"/>
          <methodref name="HasParent" visibility="public" procflags="override"/>
          <methodref name="AddToResourcePool" visibility="protected" procflags="virtual"/>
          <methodref name="RemoveFromResourcePool" visibility="protected" procflags="virtual"/>
          <methodref name="SetParent" visibility="protected" procflags="virtual"/>
          <methodref name="DoRootChanging" visibility="protected" procflags="virtual"/>
          <methodref name="DoRootChanged" visibility="protected" procflags="virtual"/>
          <methodref name="ParentChanged" visibility="protected" procflags="virtual"/>
          <methodref name="ChangeOrder" visibility="protected" procflags="virtual"/>
          <methodref name="ChangeChildren" visibility="protected" procflags="virtual"/>
          <methodref name="DoAddObject" visibility="protected" procflags="virtual"/>
          <methodref name="DoInsertObject" visibility="protected" procflags="virtual"/>
          <methodref name="DoRemoveObject" visibility="protected" procflags="virtual"/>
          <methodref name="DoDeleteChildren" visibility="protected" procflags="virtual"/>
          <methodref name="SearchInto" visibility="protected" procflags="virtual"/>
          <methodref name="FreeNotification" visibility="protected" procflags="virtual"/>
          <methodref name="SupportsPlatformService" visibility="protected" procflags="virtual"/>
          <methodref name="GetData" visibility="protected" procflags="virtual"/>
          <methodref name="SetData" visibility="protected" procflags="virtual"/>
          <methodref name="IgnoreIntegerValue" visibility="protected"/>
          <methodref name="IgnoreFloatValue" visibility="protected"/>
          <methodref name="IgnoreBooleanValue" visibility="protected"/>
          <methodref name="IgnoreIdentValue" visibility="protected"/>
          <methodref name="Create" visibility="public" procflags="constructor override"/>
          <methodref name="Destroy" visibility="public" procflags="destructor override"/>
          <methodref name="BeforeDestruction" visibility="public" procflags="override"/>
          <methodref name="Release" visibility="public" procflags="virtual"/>
          <methodref name="Released" visibility="public" symflags="deprecated">
          </methodref>
          <methodref name="ObjectState" visibility="public" symflags="deprecated">
          </methodref>
          <methodref name="SetRoot" visibility="public"/>
          <methodref name="SetDesign" visibility="public"/>
          <methodref name="Clone" visibility="public"/>
          <methodref name="AddObject" visibility="public"/>
          <methodref name="InsertObject" visibility="public"/>
          <methodref name="RemoveObject" visibility="public" procflags="overload"/>
          <methodref name="RemoveObject" visibility="public" procflags="overload"/>
          <methodref name="ContainsObject" visibility="public" procflags="virtual"/>
          <methodref name="Exchange" visibility="public" procflags="virtual"/>
          <methodref name="DeleteChildren" visibility="public"/>
          <methodref name="IsChild" visibility="public" procflags="virtual"/>
          <methodref name="BringChildToFront" visibility="public"/>
          <methodref name="SendChildToBack" visibility="public"/>
          <methodref name="BringToFront" visibility="public" procflags="virtual"/>
          <methodref name="SendToBack" visibility="public" procflags="virtual"/>
          <methodref name="AddObjectsToList" visibility="public"/>
          <methodref name="Sort" visibility="public" procflags="virtual"/>
          <methodref name="EnumObjects" visibility="public">
          </methodref>
          <methodref name="AnimateFloat" visibility="public" symflags="deprecated">
          </methodref>
          <methodref name="AnimateFloatDelay" visibility="public" symflags="deprecated">
          </methodref>
          <methodref name="AnimateFloatWait" visibility="public" symflags="deprecated">
          </methodref>
          <methodref name="AnimateInt" visibility="public" symflags="deprecated">
          </methodref>
          <methodref name="AnimateIntWait" visibility="public" symflags="deprecated">
          </methodref>
          <methodref name="AnimateColor" visibility="public" symflags="deprecated">
          </methodref>
          <methodref name="StopPropertyAnimation" visibility="public"/>
          <methodref name="AddFreeNotify" visibility="public"/>
          <methodref name="RemoveFreeNotify" visibility="public"/>
          <methodref name="FindStyleResource" visibility="public" procflags="overload virtual"/>
          <propertyref name="Root" visibility="public"/>
          <propertyref name="Stored" visibility="public"/>
          <propertyref name="TagObject" visibility="public"/>
          <propertyref name="TagFloat" visibility="public"/>
          <propertyref name="TagString" visibility="public"/>
          <propertyref name="ChildrenCount" visibility="public"/>
          <propertyref name="Children" visibility="public"/>
          <propertyref name="Data" visibility="public"/>
          <propertyref name="Parent" visibility="public"/>
          <propertyref name="Index" visibility="public"/>
          <propertyref name="ActionClient" visibility="public"/>
          <propertyref name="StyleName" visibility="published"/>
          <ancestor name="TComponent" namespace="System.Classes">
            <interfaces>
              <implements name="IInterfaceComponentReference"/>
              <implements name="IInterface"/>
            </interfaces>
            <methodref name="GetComObject" visibility="private">
            </methodref>
            <methodref name="GetComponent" visibility="private">
            </methodref>
            <methodref name="GetComponentCount" visibility="private">
            </methodref>
            <methodref name="GetComponentIndex" visibility="private">
            </methodref>
            <methodref name="Insert" visibility="private">
            </methodref>
            <methodref name="ReadLeft" visibility="private">
            </methodref>
            <methodref name="ReadTop" visibility="private">
            </methodref>
            <methodref name="Remove" visibility="private">
            </methodref>
            <methodref name="RemoveNotification" visibility="private">
            </methodref>
            <methodref name="SetComponentIndex" visibility="private">
            </methodref>
            <methodref name="SetReference" visibility="private">
            </methodref>
            <methodref name="WriteLeft" visibility="private">
            </methodref>
            <methodref name="WriteTop" visibility="private">
            </methodref>
            <methodref name="IntfGetComponent" visibility="private">
            </methodref>
            <methodref name="DoGetDeltaStreams" visibility="private">
            </methodref>
            <methodref name="ReadDeltaStream" visibility="private">
            </methodref>
            <methodref name="ReadDeltaState" visibility="private">
            </methodref>
            <methodref name="FindSortedComponent" visibility="private">
            </methodref>
            <methodref name="AddSortedComponent" visibility="private">
            </methodref>
            <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
            </methodref>
            <methodref name="Create@" visibility="class private" procflags="class constructor noself">
            </methodref>
            <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ChangeName" visibility="protected">
            </methodref>
            <methodref name="DefineProperties" visibility="protected" procflags="override">
            </methodref>
            <methodref name="GetChildren" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="GetOwner" visibility="protected" procflags="override">
            </methodref>
            <methodref name="Loaded" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Notification" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="ReadState" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="CanObserve" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="GetObservers" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetAncestor" visibility="protected">
            </methodref>
            <methodref name="SetDesigning" visibility="protected">
            </methodref>
            <methodref name="SetInline" visibility="protected">
            </methodref>
            <methodref name="SetDesignInstance" visibility="protected">
            </methodref>
            <methodref name="SetName" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="Updating" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="Updated" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
            </methodref>
            <methodref name="ValidateRename" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
            </methodref>
            <methodref name="WriteState" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="RemoveFreeNotifications" visibility="protected">
            </methodref>
            <methodref name="QueryInterface" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="_AddRef" visibility="protected">
            </methodref>
            <methodref name="_Release" visibility="protected">
            </methodref>
            <methodref name="GetTypeInfoCount" visibility="protected">
            </methodref>
            <methodref name="GetTypeInfo" visibility="protected">
            </methodref>
            <methodref name="GetIDsOfNames" visibility="protected">
            </methodref>
            <methodref name="Invoke" visibility="protected">
            </methodref>
            <eventref name="OnGetDeltaStreams" visibility="protected">
            </eventref>
            <methodref name="Create" visibility="public" procflags="constructor virtual">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor override">
            </methodref>
            <methodref name="BeforeDestruction" visibility="public" procflags="override">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="BeginInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="EndInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="EndInvoke" visibility="public" procflags="overload">
            </methodref>
            <methodref name="EndFunctionInvoke" visibility="public">
            </methodref>
            <methodref name="DestroyComponents" visibility="public">
            </methodref>
            <methodref name="Destroying" visibility="public">
            </methodref>
            <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
            </methodref>
            <methodref name="FindComponent" visibility="public">
            </methodref>
            <methodref name="FreeNotification" visibility="public">
            </methodref>
            <methodref name="RemoveFreeNotification" visibility="public">
            </methodref>
            <methodref name="FreeOnRelease" visibility="public">
            </methodref>
            <methodref name="GetEnumerator" visibility="public" procflags="inline">
            </methodref>
            <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
            </methodref>
            <methodref name="GetNamePath" visibility="public" procflags="override">
            </methodref>
            <methodref name="HasParent" visibility="public" procflags="dynamic">
            </methodref>
            <methodref name="InsertComponent" visibility="public">
            </methodref>
            <methodref name="RemoveComponent" visibility="public">
            </methodref>
            <methodref name="SetSubComponent" visibility="public">
            </methodref>
            <methodref name="SafeCallException" visibility="public" procflags="override">
            </methodref>
            <methodref name="UpdateAction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="IsImplementorOf" visibility="public">
            </methodref>
            <methodref name="ReferenceInterface" visibility="public">
            </methodref>
            <propertyref name="ComObject" visibility="public">
            </propertyref>
            <propertyref name="Components" visibility="public">
            </propertyref>
            <propertyref name="ComponentCount" visibility="public">
            </propertyref>
            <propertyref name="ComponentIndex" visibility="public">
            </propertyref>
            <propertyref name="ComponentState" visibility="public">
            </propertyref>
            <propertyref name="ComponentStyle" visibility="public">
            </propertyref>
            <propertyref name="DesignInfo" visibility="public">
            </propertyref>
            <propertyref name="Owner" visibility="public">
            </propertyref>
            <propertyref name="VCLComObject" visibility="public">
            </propertyref>
            <propertyref name="Observers" visibility="public">
            </propertyref>
            <propertyref name="Name" visibility="published">
            </propertyref>
            <propertyref name="Tag" visibility="published">
            </propertyref>
            <ancestor name="TPersistent" namespace="System.Classes">
              <methodref name="AssignError" visibility="private">
              </methodref>
              <methodref name="AssignTo" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DefineProperties" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="GetOwner" visibility="protected" procflags="dynamic">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor override">
              </methodref>
              <methodref name="Assign" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="GetNamePath" visibility="public" procflags="dynamic">
              </methodref>
              <ancestor name="TObject" namespace="System">
                <methodref name="Create" visibility="public" procflags="constructor">
                </methodref>
                <methodref name="Free" visibility="public">
                </methodref>
                <methodref name="DisposeOf" visibility="public" procflags="inline">
                </methodref>
                <methodref name="InitInstance" visibility="public" procflags="class">
                </methodref>
                <methodref name="CleanupInstance" visibility="public">
                </methodref>
                <methodref name="ClassType" visibility="public" procflags="inline">
                </methodref>
                <methodref name="ClassName" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassNameIs" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassParent" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="ClassInfo" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="InstanceSize" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="InheritsFrom" visibility="public" procflags="class">
                </methodref>
                <methodref name="MethodAddress" visibility="public" procflags="class overload">
                </methodref>
                <methodref name="MethodAddress" visibility="public" procflags="class overload">
                </methodref>
                <methodref name="MethodName" visibility="public" procflags="class">
                </methodref>
                <methodref name="QualifiedClassName" visibility="public" procflags="class">
                </methodref>
                <methodref name="FieldAddress" visibility="public" procflags="overload">
                </methodref>
                <methodref name="FieldAddress" visibility="public" procflags="overload">
                </methodref>
                <methodref name="GetInterface" visibility="public">
                </methodref>
                <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                </methodref>
                <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="UnitName" visibility="public" procflags="class">
                </methodref>
                <methodref name="UnitScope" visibility="public" procflags="class">
                </methodref>
                <methodref name="Equals" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="GetHashCode" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="ToString" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="SafeCallException" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Dispatch" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="NewInstance" visibility="public" procflags="class virtual">
                </methodref>
                <methodref name="FreeInstance" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                </methodref>
                <methodref name="GetDisposed" visibility="protected" procflags="inline">
                </methodref>
                <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                </methodref>
                <propertyref name="Disposed" visibility="protected">
                </propertyref>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <interfaces>
      <implements name="IGlyph"/>
      <implements name="IMenuView"/>
      <implements name="INativeControl"/>
      <implements name="IItemsContainer"/>
    </interfaces>
    <members>
      <field name="FContent" type="TContent" visibility="private" size="4" offset="944" file="FMX.Menus.pas" line="326"/>
      <field name="FContentLayout" type="TControl" visibility="private" size="4" offset="948" file="FMX.Menus.pas" line="327"/>
      <field name="FNoItemsContent" type="TControl" visibility="private" size="4" offset="952" file="FMX.Menus.pas" line="328"/>
      <field name="FLoop" type="Boolean" visibility="private" size="1" offset="956" file="FMX.Menus.pas" line="330"/>
      <field name="FParentView" type="IMenuView" visibility="private" size="4" offset="960" file="FMX.Menus.pas" line="331"/>
      <field name="FChildView" type="IMenuView" visibility="private" size="4" offset="964" file="FMX.Menus.pas" line="332"/>
      <field name="FSelected" type="TMenuItem" visibility="private" size="4" offset="968" file="FMX.Menus.pas" line="333"/>
      <field name="FMenuService" type="IFMXMenuService" visibility="private" size="4" offset="972" file="FMX.Menus.pas" line="334"/>
      <field name="FExplicitVisible" type="Boolean" visibility="private" size="1" offset="976" file="FMX.Menus.pas" line="335"/>
      <field name="FUpdatingVisible" type="Boolean" visibility="private" size="1" offset="977" file="FMX.Menus.pas" line="336"/>
      <field name="FImageLink" type="TGlyphImageLink" visibility="private" size="4" offset="980" file="FMX.Menus.pas" line="337"/>
      <field name="FImages" type="TCustomImageList" visibility="private" size="4" offset="984" file="FMX.Menus.pas" line="338">
        <attributes>
          <attribute name="TObject"/>
        </attributes>
      </field>
      <function name="GetLoop" visibility="private" file="FMX.Menus.pas" line="339">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <procedure name="SetLoop" visibility="private" file="FMX.Menus.pas" line="340">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetParentView" visibility="private" file="FMX.Menus.pas" line="341">
        <parameters>
          <retval type="IMenuView">
            <devnotes>
               <summary>For internal use only.</summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <procedure name="SetParentView" visibility="private" file="FMX.Menus.pas" line="342">
        <parameters>
          <parameter name="Value" type="IMenuView" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetChildView" visibility="private" file="FMX.Menus.pas" line="343">
        <parameters>
          <retval type="IMenuView">
            <devnotes>
               <summary>For internal use only.</summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <procedure name="SetChildView" visibility="private" file="FMX.Menus.pas" line="344">
        <parameters>
          <parameter name="Value" type="IMenuView" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetSelected" visibility="private" file="FMX.Menus.pas" line="345">
        <parameters>
          <retval type="TMenuItem">
            <devnotes>
               <summary> This class describe the role and functionality of a menu item.
                This object is used to populate different types of menus defined in FMX:
                main menu, menu bar, popup menu.
               </summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <procedure name="SetSelected" visibility="private" file="FMX.Menus.pas" line="346">
        <parameters>
          <parameter name="Value" type="TMenuItem" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetIsMenuBar" visibility="private" file="FMX.Menus.pas" line="347">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="GetItemsCount" visibility="private" file="FMX.Menus.pas" line="349">
        <parameters>
          <retval type="Integer"/>
        </parameters>
      </function>
      <function name="GetItem" visibility="private" file="FMX.Menus.pas" line="350">
        <parameters>
          <parameter name="AIndex" type="Integer" paramflags="const"/>
          <retval type="TFmxObject"/>
        </parameters>
      </function>
      <procedure name="AddNoItemObject" visibility="private" file="FMX.Menus.pas" line="352">
        <parameters>
          <parameter name="AObject" type="TFmxObject"/>
        </parameters>
      </procedure>
      <function name="GetHandle" visibility="private" file="FMX.Menus.pas" line="353">
        <parameters>
          <retval type="NativeUInt"/>
        </parameters>
      </function>
      <procedure name="SetHandle" visibility="private" file="FMX.Menus.pas" line="354">
        <parameters>
          <parameter name="Value" type="NativeUInt" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetHandleSupported" visibility="private" file="FMX.Menus.pas" line="355">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="GetItems" visibility="private" file="FMX.Menus.pas" line="356">
        <parameters>
          <parameter name="Index" type="Integer" paramflags="const"/>
          <retval type="TMenuItem">
            <devnotes>
               <summary> This class describe the role and functionality of a menu item.
                This object is used to populate different types of menus defined in FMX:
                main menu, menu bar, popup menu.
               </summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <procedure name="UpdateVisible" visibility="private" file="FMX.Menus.pas" line="357">
      </procedure>
      <procedure name="StartMenuLoopMessage" visibility="private" file="FMX.Menus.pas" line="358">
        <parameters>
          <parameter name="Sender" type="TObject" paramflags="const"/>
          <parameter name="M" type="TMessageBase" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetImages" visibility="private" file="FMX.Menus.pas" line="359">
        <parameters>
          <retval type="TCustomImageList">
            <devnotes>
               <summary> List of images. Base class that used in fire monkey without published properties </summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <procedure name="SetImages" visibility="private" file="FMX.Menus.pas" line="360">
        <parameters>
          <parameter name="Value" type="TCustomImageList" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetImageIndex" visibility="private" file="FMX.Menus.pas" line="362">
        <parameters>
          <retval type="TImageIndex"/>
        </parameters>
      </function>
      <procedure name="SetImageIndex" visibility="private" file="FMX.Menus.pas" line="363">
        <parameters>
          <parameter name="Value" type="TImageIndex" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetImageList" visibility="private" procflags="inline" file="FMX.Menus.pas" line="364">
        <parameters>
          <retval type="TBaseImageList"/>
        </parameters>
      </function>
      <procedure name="SetImageList" visibility="private" file="FMX.Menus.pas" line="365">
        <parameters>
          <parameter name="Value" type="TBaseImageList" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetMenuItem" visibility="protected" file="FMX.Menus.pas" line="369">
        <parameters>
          <parameter name="AIndex" type="Integer" paramflags="const"/>
          <retval type="TMenuItem">
            <devnotes>
               <summary> This class describe the role and functionality of a menu item.
                This object is used to populate different types of menus defined in FMX:
                main menu, menu bar, popup menu.
               </summary>
            </devnotes>
          </retval>
        </parameters>
      <devnotes><summary>
Retrieves the TMenuItem specified by AIndex from the menu's list of children menu items. 
</summary></devnotes></function>
      <procedure name="DefineProperties" visibility="protected" procflags="override" file="FMX.Menus.pas" line="370">
        <parameters>
          <parameter name="Filer" type="TFiler"/>
        </parameters>
      <devnotes><summary>




Designates methods for storing an object's unpublished data on a stream such as a form file.
FMX.Menus.TMenuBar.DefineProperties inherits from System.Classes.TComponent.DefineProperties. All content below this line refers to System.Classes.TComponent.DefineProperties.
Designates methods for storing an object's unpublished data on a stream such as a form file.
TComponent overrides the DefineProperties method defined in TPersistent to define &quot;fake&quot; Top and Left properties. These are defined so that components that are not controls can be manipulated at design time. However, the Top and Left properties are hidden, that is, they are not published, because only controls appear at run time.
DefineProperties is virtual; descendent classes can override it. When overriding DefineProperties, be aware that the Ancestor property of Filer might be set, and that this property can determine whether or not it is appropriate to write properties.
DefineProperties is called automatically as part of the component streaming system; do not call it directly.
</summary></devnotes></procedure>
      <procedure name="DoRealign" visibility="protected" procflags="override" file="FMX.Menus.pas" line="371">
      <devnotes><summary>
Performs the alignment of a FireMonkey control.
FMX.Menus.TMenuBar.DoRealign inherits from FMX.Controls.TControl.DoRealign. All content below this line refers to FMX.Controls.TControl.DoRealign.
Performs the alignment of a FireMonkey control.

 See Also
FMX.Types.AlignObjects

</summary></devnotes></procedure>
      <procedure name="DoAddObject" visibility="protected" procflags="override" file="FMX.Menus.pas" line="372">
        <parameters>
          <parameter name="AObject" type="TFmxObject" paramflags="const"/>
        </parameters>
      <devnotes><summary>


Adds the AObject object to the Children list of children attached to this parent object (self).
FMX.Menus.TMenuBar.DoAddObject inherits from FMX.Types.TFmxObject.DoAddObject. All content below this line refers to FMX.Types.TFmxObject.DoAddObject.
Adds the AObject object to the Children list of children attached to this parent object (self).
DoAddObject adds the object provided in the AObject parameter to the list of children stored in the Children property of this object (self). DoAddObject changes the parent of AObject to this object (self) and sets the root of AObject to the Root object of this object (self).
Descendant classes, like TCommonCustomForm and TControl, additionally handle tab stop lists keeping ordered lists of objects to which the user can tab. If such descendant class supports the ITabStopController interface and AObject is an object of a class supporting the IControl interface, then DoAddObject of this descendant adds AObject to the TabList tab stop lists of the (self) object. 
DoAddObject is internally called from AddObject.
</summary></devnotes></procedure>
      <procedure name="DoInsertObject" visibility="protected" procflags="override" file="FMX.Menus.pas" line="373">
        <parameters>
          <parameter name="Index" type="Integer"/>
          <parameter name="AObject" type="TFmxObject" paramflags="const"/>
        </parameters>
      <devnotes><summary>




Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <procedure name="DoRemoveObject" visibility="protected" procflags="override" file="FMX.Menus.pas" line="374">
        <parameters>
          <parameter name="AObject" type="TFmxObject" paramflags="const"/>
        </parameters>
      <devnotes><summary>




Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <procedure name="DialogKey" visibility="protected" procflags="override" file="FMX.Menus.pas" line="375">
        <parameters>
          <parameter name="Key" type="Word" paramflags="var"/>
          <parameter name="Shift" type="TShiftState"/>
        </parameters>
      <devnotes><summary>
Processes a dialog key. 
FMX.Menus.TMenuBar.DialogKey inherits from FMX.Controls.TControl.DialogKey. All content below this line refers to FMX.Controls.TControl.DialogKey.
Processes a dialog key. 
DialogKey is called during the message preprocessing to handle dialog characters. 
Do not call DialogKey in an application. It is for internal use only.
DialogKey processes the dialog key messages for each of the control's children.


</summary></devnotes></procedure>
      <procedure name="DoUpdateOSMenu" visibility="protected" file="FMX.Menus.pas" line="376">
        <parameters>
          <parameter name="Sender" type="TObject" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Updates the structure of the menu bar, if possible.
</summary></devnotes></procedure>
      <procedure name="SetVisible" visibility="protected" procflags="override" file="FMX.Menus.pas" line="377">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Setter function for the Visible property.
FMX.Menus.TMenuBar.SetVisible inherits from FMX.Controls.TControl.SetVisible. All content below this line refers to FMX.Controls.TControl.SetVisible.
Setter function for the Visible property. Value specifies the new value of the Visible property.
</summary></devnotes></procedure>
      <procedure name="ImagesChanged" visibility="protected" procflags="virtual" file="FMX.Menus.pas" line="381">
        <devnotes><summary>
Should be called when the component needs to redraw the image.
ImagesChanged  should be called when you change the Images reference to the TCustomImageList object or the object itself.
</summary></devnotes>
      </procedure>
      <procedure name="Loaded" visibility="protected" procflags="override" file="FMX.Menus.pas" line="383">
      <devnotes><summary>
Initializes the component after the form file has been read into memory.
FMX.Menus.TMenuBar.Loaded inherits from FMX.Controls.TControl.Loaded. All content below this line refers to FMX.Controls.TControl.Loaded.
Initializes the component after the form file has been read into memory. 
Loaded inherits TComponent.Loaded, realigns the children, if any, and updates the tab list.
For details, see TComponent.Loaded.
</summary></devnotes></procedure>
      <function name="GetDefaultStyleLookupName" visibility="protected" procflags="override" file="FMX.Menus.pas" line="385">
        <parameters>
          <retval type="string"/>
        </parameters>
      <devnotes><summary>
Protected getter implementation for the DefaultStyleLookupName property.
FMX.Menus.TMenuBar.GetDefaultStyleLookupName inherits from FMX.Controls.TStyledControl.GetDefaultStyleLookupName. All content below this line refers to FMX.Controls.TStyledControl.GetDefaultStyleLookupName.
Protected getter implementation for the DefaultStyleLookupName property.
When you Create a styled FireMonkey component by extending an existing component, override this method, if you want your component to inherit styles from the parent component. See Step 2 - Implement a Property to Specify the Format: Inheriting Styles of the Parent Component for more information and example code.
</summary></devnotes></function>
      <procedure name="ApplyStyle" visibility="protected" procflags="override" file="FMX.Menus.pas" line="386">
      <devnotes><summary>
Customizes styles in complex objects.
FMX.Menus.TMenuBar.ApplyStyle inherits from FMX.Controls.TStyledControl.ApplyStyle. All content below this line refers to FMX.Controls.TStyledControl.ApplyStyle.
Customizes styles in complex objects.
TStyledControl descendants override it to apply styles in concordance with their primitive components.      
Do not call ApplyStyle explicitly in an application. It is called by the ApplyStyleLookup method when object styles are updated.
For an example of an ApplyStyle implementation, see &quot;TCalloutPanel:Style Contracts&quot; in FireMonkey Component Design.
</summary></devnotes></procedure>
      <procedure name="FreeStyle" visibility="protected" procflags="override" file="FMX.Menus.pas" line="387">
      <devnotes><summary>
Frees the style of TStyledControl.
FMX.Menus.TMenuBar.FreeStyle inherits from FMX.Controls.TStyledControl.FreeStyle. All content below this line refers to FMX.Controls.TStyledControl.FreeStyle.
Frees the style of TStyledControl.
Override it to free additional component-specific style resources.
</summary></devnotes></procedure>
      <constructor name="Create" visibility="public" file="FMX.Menus.pas" line="389">
        <parameters>
          <parameter name="AOwner" type="TComponent"/>
        </parameters>
      <devnotes><summary>
Allocates memory and constructs a safely initialized instance of a component.
Allocates memory and constructs a safely initialized instance of a component.
FMX.Menus.TMenuBar.Create inherits from System.Classes.TComponent.Create. All content below this line refers to System.Classes.TComponent.Create.
Allocates memory and constructs a safely initialized instance of a component.
All objects have a Create method that constructs the object. TComponent redefines Create so that, for components, Create also:

Establishes the relationship of a component and its Owner, as indicated by the AOwner parameter.
Sets the ComponentStyle property to csInheritable, meaning that the component can be inherited by a descendent form type.
It is not necessary to explicitly create components added in the Form Designer. These components are created automatically when the application is run, and they are destroyed when the application is closed.
For components created programmatically, that is, not created in the Form Designer, call Create and pass in an owner component as the AOwner parameter. The owner disposes of the component when it is destroyed. If the component is not owned, then use Free when it needs to be destroyed.

Tip:  When passing in Self as the Owner parameter, consider what Self references. If a component creates another component in one of its methods, then Self refers to the first component and not the component being created, which is then owned by the first component.
Note:  The TComponent constructor is virtual in part to allow polymorphic instantiation of class references. This is critical to the streaming system and to the Form Designer. Do not forget to use the override directive when declaring a new component's Create constructor.</summary></devnotes></constructor>
      <destructor name="Destroy" visibility="public" file="FMX.Menus.pas" line="390">
        <parameters>
        </parameters>
      <devnotes><summary>
Disposes of the component and its owned components.
Disposes of the component and its owned components.
FMX.Menus.TMenuBar.Destroy inherits from System.Classes.TComponent.Destroy. All content below this line refers to System.Classes.TComponent.Destroy.
Disposes of the component and its owned components.
Do not call Destroy directly. Call Free instead. Free verifies that the component is not nil, and only then calls Destroy.
Never explicitly free a component in one of its own event handlers, nor free a component from the event handler of a component that it owns or contains.
To destroy a form, call its Release method. Release waits for all the form's event handlers and the event handlers of the form's components to finish executing before destroying the form.

Note: A form owns all the controls and nonvisual components that are placed on it in design mode. When it is freed, all of these components are automatically freed as well. By default, all forms are owned by the global Application object. When an application terminates, it frees the global Application object, which frees all forms. For objects that are not components, and for components created with a nil owner, be sure to call Free after finishing with the object; otherwise the memory allocated for the object will be lost until the application terminates.</summary></devnotes></destructor>
      <procedure name="StartMenuLoop" visibility="public" file="FMX.Menus.pas" line="391">
      <devnotes><summary>
Starts the menu loop for this menu bar. There is no need to manually call StartMenuLoop in applications.


</summary></devnotes></procedure>
      <procedure name="Clear" visibility="public" file="FMX.Menus.pas" line="392">
      <devnotes><summary>
Clears this TMenuBar.
Clear removes all the children of this menu bar.
</summary></devnotes></procedure>
      <property name="ItemsCount" visibility="public" read="GetItemsCount" type="Integer" file="FMX.Menus.pas" line="393"><devnotes><summary>
Returns the total number of menu items in this menu bar.
</summary></devnotes></property>
      <property name="Items[const AIndex]" visibility="public" read="GetItems" type="TMenuItem" file="FMX.Menus.pas" line="394"/>
      <property name="Anchors" visibility="published" read="FAnchors" write="SetAnchors" stored="IsAnchorsStored" type="TAnchors" hoisted="true" file="FMX.Menus.pas" line="396"/>
      <property name="Align" visibility="published" read="FAlign" write="SetAlign" type="TAlignLayout" default="1" hoisted="true" file="FMX.Menus.pas" line="397"/>
      <property name="ClipChildren" visibility="published" read="FClipChildren" write="SetClipChildren" type="Boolean" default="0" hoisted="true" file="FMX.Menus.pas" line="398"/>
      <property name="ClipParent" visibility="published" read="FClipParent" write="FClipParent" type="Boolean" default="0" hoisted="true" file="FMX.Menus.pas" line="399"/>
      <property name="Cursor" visibility="published" read="GetCursor" write="SetCursor" type="TCursor" default="0" hoisted="true" file="FMX.Menus.pas" line="400"/>
      <property name="DragMode" visibility="published" read="GetDragMode" write="SetDragMode" type="TDragMode" default="0" hoisted="true" file="FMX.Menus.pas" line="401"/>
      <property name="EnableDragHighlight" visibility="published" read="FEnableDragHighlight" write="FEnableDragHighlight" type="Boolean" default="1" hoisted="true" file="FMX.Menus.pas" line="402"/>
      <property name="Enabled" visibility="published" read="FEnabled" write="SetEnabled" stored="EnabledStored" type="Boolean" hoisted="true" file="FMX.Menus.pas" line="403"/>
      <property name="Images" visibility="published" read="GetImages" write="SetImages" type="TCustomImageList" file="FMX.Menus.pas" line="405">
        <devnotes><summary>
Defines the reference to a TCustomImageList list of images to be used to draw images on the component.
If the TCustomImageList list is empty, then Images is nil/null.
Call ImagesChanged when Images is changed.
</summary></devnotes>
      </property>
      <property name="Locked" visibility="published" read="FLocked" write="SetLocked" type="Boolean" default="0" hoisted="true" file="FMX.Menus.pas" line="406"/>
      <property name="Height" visibility="published" read="GetHeight" write="SetHeight" stored="False" type="Single" hoisted="true" file="FMX.Menus.pas" line="407"/>
      <property name="HelpContext" visibility="published" read="FHelpContext" write="SetHelpContext" stored="IsHelpContextStored" type="THelpContext" default="0" hoisted="true" file="FMX.Menus.pas" line="408"/>
      <property name="HelpKeyword" visibility="published" read="FHelpKeyword" write="SetHelpKeyword" stored="IsHelpContextStored" type="string" default="0" hoisted="true" file="FMX.Menus.pas" line="409"/>
      <property name="HelpType" visibility="published" read="FHelpType" write="FHelpType" type="THelpType" default="1" hoisted="true" file="FMX.Menus.pas" line="410"/>
      <property name="Padding" visibility="published" read="GetPadding" write="SetPadding" type="TBounds" hoisted="true" file="FMX.Menus.pas" line="411"/>
      <property name="Opacity" visibility="published" read="FOpacity" write="SetOpacity" stored="IsOpacityStored" type="Single" hoisted="true" file="FMX.Menus.pas" line="412"/>
      <property name="Margins" visibility="published" read="GetMargins" write="SetMargins" type="TBounds" hoisted="true" file="FMX.Menus.pas" line="413"/>
      <property name="PopupMenu" visibility="published" read="FPopupMenu" write="SetPopupMenu" stored="IsPopupMenuStored" type="TCustomPopupMenu" hoisted="true" file="FMX.Menus.pas" line="414"/>
      <property name="Position" visibility="published" read="FPosition" write="SetPosition" stored="IsPositionStored" type="TPosition" hoisted="true" file="FMX.Menus.pas" line="415"/>
      <property name="RotationAngle" visibility="published" read="GetRotationAngle" write="SetRotationAngle" type="Single" default="0" hoisted="true" file="FMX.Menus.pas" line="416"/>
      <property name="RotationCenter" visibility="published" read="GetRotationCenter" write="SetRotationCenter" type="TPosition" hoisted="true" file="FMX.Menus.pas" line="417"/>
      <property name="Scale" visibility="published" read="GetScale" write="SetScale" type="TPosition" hoisted="true" file="FMX.Menus.pas" line="418"/>
      <property name="Size" visibility="published" read="FSize" write="SetSize" stored="IsSizeStored" type="TControlSize" hoisted="true" file="FMX.Menus.pas" line="419"/>
      <property name="StyleLookup" visibility="published" read="FStyleLookup" write="SetStyleLookup" type="string" default="0" hoisted="true" file="FMX.Menus.pas" line="420"/>
      <property name="TabOrder" visibility="published" read="GetTabOrder" write="SetTabOrder" type="TTabOrder" default="-1" hoisted="true" file="FMX.Menus.pas" line="421"/>
      <property name="TouchTargetExpansion" visibility="published" read="FTouchTargetExpansion" write="SetTouchTargetExpansion" type="TBounds" hoisted="true" file="FMX.Menus.pas" line="422"/>
      <property name="Visible" visibility="published" read="FVisible" write="SetVisible" stored="VisibleStored" type="Boolean" default="1" hoisted="true" file="FMX.Menus.pas" line="423"/>
      <property name="Width" visibility="published" read="GetWidth" write="SetWidth" stored="False" type="Single" hoisted="true" file="FMX.Menus.pas" line="424"/>
      <event name="OnApplyStyleLookup" visibility="published" read="FOnApplyStyleLookup" write="FOnApplyStyleLookup" type="TNotifyEvent" hoisted="true" file="FMX.Menus.pas" line="426"/>
      <event name="OnDragEnter" visibility="published" read="FOnDragEnter" write="FOnDragEnter" type="TDragEnterEvent" hoisted="true" file="FMX.Menus.pas" line="428"/>
      <event name="OnDragLeave" visibility="published" read="FOnDragLeave" write="FOnDragLeave" type="TNotifyEvent" hoisted="true" file="FMX.Menus.pas" line="429"/>
      <event name="OnDragOver" visibility="published" read="FOnDragOver" write="FOnDragOver" type="TDragOverEvent" hoisted="true" file="FMX.Menus.pas" line="430"/>
      <event name="OnDragDrop" visibility="published" read="FOnDragDrop" write="FOnDragDrop" type="TDragDropEvent" hoisted="true" file="FMX.Menus.pas" line="431"/>
      <event name="OnDragEnd" visibility="published" read="FOnDragEnd" write="FOnDragEnd" type="TNotifyEvent" hoisted="true" file="FMX.Menus.pas" line="432"/>
      <event name="OnCanFocus" visibility="published" read="FOnCanFocus" write="FOnCanFocus" type="TCanFocusEvent" hoisted="true" file="FMX.Menus.pas" line="434"/>
      <event name="OnClick" visibility="published" read="FOnClick" write="SetOnClick" stored="OnClickStored" type="TNotifyEvent" hoisted="true" file="FMX.Menus.pas" line="435"/>
      <event name="OnMouseMove" visibility="published" read="FOnMouseMove" write="FOnMouseMove" type="TMouseMoveEvent" hoisted="true" file="FMX.Menus.pas" line="437"/>
      <event name="OnMouseWheel" visibility="published" read="FOnMouseWheel" write="FOnMouseWheel" type="TMouseWheelEvent" hoisted="true" file="FMX.Menus.pas" line="438"/>
      <event name="OnMouseEnter" visibility="published" read="FOnMouseEnter" write="FOnMouseEnter" type="TNotifyEvent" hoisted="true" file="FMX.Menus.pas" line="439"/>
      <event name="OnMouseLeave" visibility="published" read="FOnMouseLeave" write="FOnMouseLeave" type="TNotifyEvent" hoisted="true" file="FMX.Menus.pas" line="440"/>
      <event name="OnPainting" visibility="published" read="FOnPainting" write="FOnPainting" type="TOnPaintEvent" hoisted="true" file="FMX.Menus.pas" line="442"/>
      <event name="OnPaint" visibility="published" read="FOnPaint" write="FOnPaint" type="TOnPaintEvent" hoisted="true" file="FMX.Menus.pas" line="443"/>
      <event name="OnResize" visibility="published" read="FOnResize" write="FOnResize" type="TNotifyEvent" hoisted="true" file="FMX.Menus.pas" line="444"/>
      <event name="OnResized" visibility="published" read="FOnResized" write="FOnResized" type="TNotifyEvent" hoisted="true" file="FMX.Menus.pas" line="445"/>
    </members>
  </class>
  <class name="TMainMenu" file="FMX.Menus.pas" line="455">
    
    <devnotes><summary>
Describes the structure of the form's main menu.
Use TMainMenu to describe the structure of the form's main menu. TMainMenu is composed of TMenuItems. 
Menu items can be added in several ways:

To add a menu item at design time, do any of the following:
Right-click the component and select Add Item from the context menu.
Double-click the component and click the Add Item button on the Items Designer.
Right-click the component, select Items Editor from the context menu, and then click the Add Item button.
To add a menu item at run time, use the AddObject procedure of the TMainMenu.</summary></devnotes>
    <ancestor name="TFmxObject" namespace="FMX.Types">
      <interfaces>
        <implements name="IActionClient"/>
        <implements name="IFreeNotification"/>
      </interfaces>
      <methodref name="SetStyleName" visibility="private"/>
      <methodref name="SetStored" visibility="private"/>
      <methodref name="GetChildrenCount" visibility="private" procflags="inline"/>
      <methodref name="GetIndexOfChild" visibility="private"/>
      <methodref name="SetIndexOfChild" visibility="private"/>
      <methodref name="SetIndex" visibility="private"/>
      <methodref name="GetActionRoot" visibility="private"/>
      <methodref name="GetActionClient" visibility="private" procflags="inline"/>
      <methodref name="SetActionClient" visibility="private"/>
      <methodref name="GetAction" visibility="private"/>
      <methodref name="SetAction" visibility="private"/>
      <methodref name="GetIndex" visibility="private"/>
      <methodref name="Create@" visibility="class private" procflags="class constructor noself"/>
      <methodref name="Destroy@" visibility="class private" procflags="class destructor noself"/>
      <methodref name="CreateChildrenList" visibility="protected" procflags="virtual"/>
      <methodref name="ResetChildrenIndicesSpan" visibility="protected"/>
      <methodref name="ResetChildrenIndices" visibility="protected"/>
      <methodref name="GetBackIndex" visibility="protected" procflags="virtual"/>
      <methodref name="DefineProperties" visibility="protected" procflags="override"/>
      <methodref name="IgnoreBindingName" visibility="protected"/>
      <methodref name="GetChildren" visibility="protected" procflags="override"/>
      <methodref name="SetParentComponent" visibility="protected" procflags="override"/>
      <methodref name="Notification" visibility="protected" procflags="override"/>
      <methodref name="GetActionLinkClass" visibility="protected" procflags="virtual"/>
      <methodref name="InitiateAction" visibility="protected" procflags="virtual"/>
      <methodref name="DoActionChange" visibility="protected" procflags="virtual"/>
      <methodref name="ActionChange" visibility="protected" procflags="virtual"/>
      <methodref name="DoActionClientChanged" visibility="protected" procflags="virtual"/>
      <propertyref name="ActionLink" visibility="protected"/>
      <propertyref name="Action" visibility="protected"/>
      <propertyref name="StyleIndexer" visibility="protected"/>
      <methodref name="GetParentComponent" visibility="public" procflags="override"/>
      <methodref name="HasParent" visibility="public" procflags="override"/>
      <methodref name="AddToResourcePool" visibility="protected" procflags="virtual"/>
      <methodref name="RemoveFromResourcePool" visibility="protected" procflags="virtual"/>
      <methodref name="SetParent" visibility="protected" procflags="virtual"/>
      <methodref name="DoRootChanging" visibility="protected" procflags="virtual"/>
      <methodref name="DoRootChanged" visibility="protected" procflags="virtual"/>
      <methodref name="ParentChanged" visibility="protected" procflags="virtual"/>
      <methodref name="ChangeOrder" visibility="protected" procflags="virtual"/>
      <methodref name="ChangeChildren" visibility="protected" procflags="virtual"/>
      <methodref name="DoAddObject" visibility="protected" procflags="virtual"/>
      <methodref name="DoInsertObject" visibility="protected" procflags="virtual"/>
      <methodref name="DoRemoveObject" visibility="protected" procflags="virtual"/>
      <methodref name="DoDeleteChildren" visibility="protected" procflags="virtual"/>
      <methodref name="SearchInto" visibility="protected" procflags="virtual"/>
      <methodref name="FreeNotification" visibility="protected" procflags="virtual"/>
      <methodref name="SupportsPlatformService" visibility="protected" procflags="virtual"/>
      <methodref name="GetData" visibility="protected" procflags="virtual"/>
      <methodref name="SetData" visibility="protected" procflags="virtual"/>
      <methodref name="IgnoreIntegerValue" visibility="protected"/>
      <methodref name="IgnoreFloatValue" visibility="protected"/>
      <methodref name="IgnoreBooleanValue" visibility="protected"/>
      <methodref name="IgnoreIdentValue" visibility="protected"/>
      <methodref name="Create" visibility="public" procflags="constructor override"/>
      <methodref name="Destroy" visibility="public" procflags="destructor override"/>
      <methodref name="BeforeDestruction" visibility="public" procflags="override"/>
      <methodref name="Release" visibility="public" procflags="virtual"/>
      <methodref name="Released" visibility="public" symflags="deprecated">
      </methodref>
      <methodref name="ObjectState" visibility="public" symflags="deprecated">
      </methodref>
      <methodref name="SetRoot" visibility="public"/>
      <methodref name="SetDesign" visibility="public"/>
      <methodref name="Clone" visibility="public"/>
      <methodref name="AddObject" visibility="public"/>
      <methodref name="InsertObject" visibility="public"/>
      <methodref name="RemoveObject" visibility="public" procflags="overload"/>
      <methodref name="RemoveObject" visibility="public" procflags="overload"/>
      <methodref name="ContainsObject" visibility="public" procflags="virtual"/>
      <methodref name="Exchange" visibility="public" procflags="virtual"/>
      <methodref name="DeleteChildren" visibility="public"/>
      <methodref name="IsChild" visibility="public" procflags="virtual"/>
      <methodref name="BringChildToFront" visibility="public"/>
      <methodref name="SendChildToBack" visibility="public"/>
      <methodref name="BringToFront" visibility="public" procflags="virtual"/>
      <methodref name="SendToBack" visibility="public" procflags="virtual"/>
      <methodref name="AddObjectsToList" visibility="public"/>
      <methodref name="Sort" visibility="public" procflags="virtual"/>
      <methodref name="EnumObjects" visibility="public">
      </methodref>
      <methodref name="AnimateFloat" visibility="public" symflags="deprecated">
      </methodref>
      <methodref name="AnimateFloatDelay" visibility="public" symflags="deprecated">
      </methodref>
      <methodref name="AnimateFloatWait" visibility="public" symflags="deprecated">
      </methodref>
      <methodref name="AnimateInt" visibility="public" symflags="deprecated">
      </methodref>
      <methodref name="AnimateIntWait" visibility="public" symflags="deprecated">
      </methodref>
      <methodref name="AnimateColor" visibility="public" symflags="deprecated">
      </methodref>
      <methodref name="StopPropertyAnimation" visibility="public"/>
      <methodref name="AddFreeNotify" visibility="public"/>
      <methodref name="RemoveFreeNotify" visibility="public"/>
      <methodref name="FindStyleResource" visibility="public" procflags="overload virtual"/>
      <propertyref name="Root" visibility="public"/>
      <propertyref name="Stored" visibility="public"/>
      <propertyref name="TagObject" visibility="public"/>
      <propertyref name="TagFloat" visibility="public"/>
      <propertyref name="TagString" visibility="public"/>
      <propertyref name="ChildrenCount" visibility="public"/>
      <propertyref name="Children" visibility="public"/>
      <propertyref name="Data" visibility="public"/>
      <propertyref name="Parent" visibility="public"/>
      <propertyref name="Index" visibility="public"/>
      <propertyref name="ActionClient" visibility="public"/>
      <propertyref name="StyleName" visibility="published"/>
      <ancestor name="TComponent" namespace="System.Classes">
        <interfaces>
          <implements name="IInterfaceComponentReference"/>
          <implements name="IInterface"/>
        </interfaces>
        <methodref name="GetComObject" visibility="private">
        </methodref>
        <methodref name="GetComponent" visibility="private">
        </methodref>
        <methodref name="GetComponentCount" visibility="private">
        </methodref>
        <methodref name="GetComponentIndex" visibility="private">
        </methodref>
        <methodref name="Insert" visibility="private">
        </methodref>
        <methodref name="ReadLeft" visibility="private">
        </methodref>
        <methodref name="ReadTop" visibility="private">
        </methodref>
        <methodref name="Remove" visibility="private">
        </methodref>
        <methodref name="RemoveNotification" visibility="private">
        </methodref>
        <methodref name="SetComponentIndex" visibility="private">
        </methodref>
        <methodref name="SetReference" visibility="private">
        </methodref>
        <methodref name="WriteLeft" visibility="private">
        </methodref>
        <methodref name="WriteTop" visibility="private">
        </methodref>
        <methodref name="IntfGetComponent" visibility="private">
        </methodref>
        <methodref name="DoGetDeltaStreams" visibility="private">
        </methodref>
        <methodref name="ReadDeltaStream" visibility="private">
        </methodref>
        <methodref name="ReadDeltaState" visibility="private">
        </methodref>
        <methodref name="FindSortedComponent" visibility="private">
        </methodref>
        <methodref name="AddSortedComponent" visibility="private">
        </methodref>
        <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
        </methodref>
        <methodref name="Create@" visibility="class private" procflags="class constructor noself">
        </methodref>
        <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ChangeName" visibility="protected">
        </methodref>
        <methodref name="DefineProperties" visibility="protected" procflags="override">
        </methodref>
        <methodref name="GetChildren" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetOwner" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Loaded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Notification" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ReadState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CanObserve" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetObservers" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetAncestor" visibility="protected">
        </methodref>
        <methodref name="SetDesigning" visibility="protected">
        </methodref>
        <methodref name="SetInline" visibility="protected">
        </methodref>
        <methodref name="SetDesignInstance" visibility="protected">
        </methodref>
        <methodref name="SetName" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updating" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updated" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
        </methodref>
        <methodref name="ValidateRename" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="WriteState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="RemoveFreeNotifications" visibility="protected">
        </methodref>
        <methodref name="QueryInterface" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="_AddRef" visibility="protected">
        </methodref>
        <methodref name="_Release" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfoCount" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfo" visibility="protected">
        </methodref>
        <methodref name="GetIDsOfNames" visibility="protected">
        </methodref>
        <methodref name="Invoke" visibility="protected">
        </methodref>
        <eventref name="OnGetDeltaStreams" visibility="protected">
        </eventref>
        <methodref name="Create" visibility="public" procflags="constructor virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor override">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="override">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndFunctionInvoke" visibility="public">
        </methodref>
        <methodref name="DestroyComponents" visibility="public">
        </methodref>
        <methodref name="Destroying" visibility="public">
        </methodref>
        <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="FindComponent" visibility="public">
        </methodref>
        <methodref name="FreeNotification" visibility="public">
        </methodref>
        <methodref name="RemoveFreeNotification" visibility="public">
        </methodref>
        <methodref name="FreeOnRelease" visibility="public">
        </methodref>
        <methodref name="GetEnumerator" visibility="public" procflags="inline">
        </methodref>
        <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="GetNamePath" visibility="public" procflags="override">
        </methodref>
        <methodref name="HasParent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="InsertComponent" visibility="public">
        </methodref>
        <methodref name="RemoveComponent" visibility="public">
        </methodref>
        <methodref name="SetSubComponent" visibility="public">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="override">
        </methodref>
        <methodref name="UpdateAction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="IsImplementorOf" visibility="public">
        </methodref>
        <methodref name="ReferenceInterface" visibility="public">
        </methodref>
        <propertyref name="ComObject" visibility="public">
        </propertyref>
        <propertyref name="Components" visibility="public">
        </propertyref>
        <propertyref name="ComponentCount" visibility="public">
        </propertyref>
        <propertyref name="ComponentIndex" visibility="public">
        </propertyref>
        <propertyref name="ComponentState" visibility="public">
        </propertyref>
        <propertyref name="ComponentStyle" visibility="public">
        </propertyref>
        <propertyref name="DesignInfo" visibility="public">
        </propertyref>
        <propertyref name="Owner" visibility="public">
        </propertyref>
        <propertyref name="VCLComObject" visibility="public">
        </propertyref>
        <propertyref name="Observers" visibility="public">
        </propertyref>
        <propertyref name="Name" visibility="published">
        </propertyref>
        <propertyref name="Tag" visibility="published">
        </propertyref>
        <ancestor name="TPersistent" namespace="System.Classes">
          <methodref name="AssignError" visibility="private">
          </methodref>
          <methodref name="AssignTo" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DefineProperties" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetOwner" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="Assign" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="GetNamePath" visibility="public" procflags="dynamic">
          </methodref>
          <ancestor name="TObject" namespace="System">
            <methodref name="Create" visibility="public" procflags="constructor">
            </methodref>
            <methodref name="Free" visibility="public">
            </methodref>
            <methodref name="DisposeOf" visibility="public" procflags="inline">
            </methodref>
            <methodref name="InitInstance" visibility="public" procflags="class">
            </methodref>
            <methodref name="CleanupInstance" visibility="public">
            </methodref>
            <methodref name="ClassType" visibility="public" procflags="inline">
            </methodref>
            <methodref name="ClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassNameIs" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassParent" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="ClassInfo" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InstanceSize" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InheritsFrom" visibility="public" procflags="class">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodName" visibility="public" procflags="class">
            </methodref>
            <methodref name="QualifiedClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="GetInterface" visibility="public">
            </methodref>
            <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
            </methodref>
            <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="UnitName" visibility="public" procflags="class">
            </methodref>
            <methodref name="UnitScope" visibility="public" procflags="class">
            </methodref>
            <methodref name="Equals" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="GetHashCode" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="ToString" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="SafeCallException" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="AfterConstruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Dispatch" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="DefaultHandler" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="NewInstance" visibility="public" procflags="class virtual">
            </methodref>
            <methodref name="FreeInstance" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor virtual">
            </methodref>
            <methodref name="GetDisposed" visibility="protected" procflags="inline">
            </methodref>
            <methodref name="CheckDisposed" visibility="protected" procflags="inline">
            </methodref>
            <propertyref name="Disposed" visibility="protected">
            </propertyref>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <interfaces>
      <implements name="IGlyph"/>
      <implements name="INativeControl"/>
      <implements name="IItemsContainer"/>
    </interfaces>
    <members>
      <field name="FMenuService" type="IFMXMenuService" visibility="private" size="4" offset="128" file="FMX.Menus.pas" line="457"/>
      <field name="FHandle" type="NativeUInt" visibility="private" size="4" offset="132" file="FMX.Menus.pas" line="458"/>
      <field name="FStyleChangedId" type="Integer" visibility="private" size="4" offset="136" file="FMX.Menus.pas" line="459"/>
      <field name="FOldForm" type="TCommonCustomForm" visibility="private" size="4" offset="140" file="FMX.Menus.pas" line="460"/>
      <field name="FImageLink" type="TGlyphImageLink" visibility="private" size="4" offset="144" file="FMX.Menus.pas" line="461"/>
      <field name="FImages" type="TCustomImageList" visibility="private" size="4" offset="148" file="FMX.Menus.pas" line="462">
        <attributes>
          <attribute name="TObject"/>
        </attributes>
      </field>
      <procedure name="StyleChangedHandler" visibility="private" file="FMX.Menus.pas" line="463">
        <parameters>
          <parameter name="Sender" type="TObject" paramflags="const"/>
          <parameter name="Msg" type="TMessageBase" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetItemsCount" visibility="private" file="FMX.Menus.pas" line="465">
        <parameters>
          <retval type="Integer"/>
        </parameters>
      </function>
      <function name="GetItem" visibility="private" file="FMX.Menus.pas" line="466">
        <parameters>
          <parameter name="AIndex" type="Integer" paramflags="const"/>
          <retval type="TFmxObject"/>
        </parameters>
      </function>
      <function name="GetObject" visibility="private" file="FMX.Menus.pas" line="467">
        <parameters>
          <retval type="TFmxObject"/>
        </parameters>
      </function>
      <function name="GetHandle" visibility="private" file="FMX.Menus.pas" line="468">
        <parameters>
          <retval type="NativeUInt"/>
        </parameters>
      </function>
      <procedure name="SetHandle" visibility="private" file="FMX.Menus.pas" line="469">
        <parameters>
          <parameter name="Value" type="NativeUInt" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetHandleSupported" visibility="private" file="FMX.Menus.pas" line="470">
        <parameters>
          <retval type="Boolean"/>
        </parameters>
      </function>
      <function name="ParentForm" visibility="private" file="FMX.Menus.pas" line="471">
        <parameters>
          <retval type="TCommonCustomForm"/>
        </parameters>
      </function>
      <function name="GetImages" visibility="private" file="FMX.Menus.pas" line="472">
        <parameters>
          <retval type="TCustomImageList">
            <devnotes>
               <summary> List of images. Base class that used in fire monkey without published properties </summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
      <procedure name="SetImages" visibility="private" file="FMX.Menus.pas" line="473">
        <parameters>
          <parameter name="Value" type="TCustomImageList" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetImageIndex" visibility="private" file="FMX.Menus.pas" line="475">
        <parameters>
          <retval type="TImageIndex"/>
        </parameters>
      </function>
      <procedure name="SetImageIndex" visibility="private" file="FMX.Menus.pas" line="476">
        <parameters>
          <parameter name="Value" type="TImageIndex" paramflags="const"/>
        </parameters>
      </procedure>
      <function name="GetImageList" visibility="private" procflags="inline" file="FMX.Menus.pas" line="477">
        <parameters>
          <retval type="TBaseImageList"/>
        </parameters>
      </function>
      <procedure name="SetImageList" visibility="private" file="FMX.Menus.pas" line="478">
        <parameters>
          <parameter name="Value" type="TBaseImageList" paramflags="const"/>
        </parameters>
      </procedure>
      <procedure name="ParentChanged" visibility="protected" procflags="override" file="FMX.Menus.pas" line="482">
      <devnotes><summary>
Notification method called after the parent is changed.
FMX.Menus.TMainMenu.ParentChanged inherits from FMX.Types.TFmxObject.ParentChanged. All content below this line refers to FMX.Types.TFmxObject.ParentChanged.
Notification method called after the parent is changed. ParentChanged is a virtual method to be implemented in subclasses to allow for changing the parent of this FMX object.
</summary></devnotes></procedure>
      <procedure name="DoRecreateOSMenu" visibility="protected" procflags="virtual" file="FMX.Menus.pas" line="483">
        <parameters>
          <parameter name="Form" type="TCommonCustomForm" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <procedure name="DoAddObject" visibility="protected" procflags="override" file="FMX.Menus.pas" line="484">
        <parameters>
          <parameter name="AObject" type="TFmxObject" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Adds the AObject object to the Children list of children attached to this parent object (self).
FMX.Menus.TMainMenu.DoAddObject inherits from FMX.Types.TFmxObject.DoAddObject. All content below this line refers to FMX.Types.TFmxObject.DoAddObject.
Adds the AObject object to the Children list of children attached to this parent object (self).
DoAddObject adds the object provided in the AObject parameter to the list of children stored in the Children property of this object (self). DoAddObject changes the parent of AObject to this object (self) and sets the root of AObject to the Root object of this object (self).
Descendant classes, like TCommonCustomForm and TControl, additionally handle tab stop lists keeping ordered lists of objects to which the user can tab. If such descendant class supports the ITabStopController interface and AObject is an object of a class supporting the IControl interface, then DoAddObject of this descendant adds AObject to the TabList tab stop lists of the (self) object. 
DoAddObject is internally called from AddObject.
</summary></devnotes></procedure>
      <procedure name="DoInsertObject" visibility="protected" procflags="override" file="FMX.Menus.pas" line="485">
        <parameters>
          <parameter name="Index" type="Integer"/>
          <parameter name="AObject" type="TFmxObject" paramflags="const"/>
        </parameters>
      <devnotes><summary>


Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <procedure name="DoRemoveObject" visibility="protected" procflags="override" file="FMX.Menus.pas" line="486">
        <parameters>
          <parameter name="AObject" type="TFmxObject" paramflags="const"/>
        </parameters>
      <devnotes><summary>


Embarcadero Technologies does not currently have any additional information.


</summary></devnotes></procedure>
      <procedure name="Loaded" visibility="protected" procflags="override" file="FMX.Menus.pas" line="487">
      <devnotes><summary>
Initializes the component after the form file has been read into memory.
FMX.Menus.TMainMenu.Loaded inherits from System.Classes.TComponent.Loaded. All content below this line refers to System.Classes.TComponent.Loaded.
Initializes the component after the form file has been read into memory.
Do not call the protected Loaded method. The streaming system calls this method after it loads the component's form from a stream.
When the streaming system loads a form or data module from its form file, it first constructs the form component by calling its constructor, then reads its property values from the form file. After reading all the property values for all the components, the streaming system calls the Loaded methods of each component in the order the components were created. This gives the components a chance to initialize any data that depends on the values of other components or other parts of itself.

Note:  All references to sibling components are resolved by the time Loaded is called. Loaded is the first place that sibling pointers can be used after being streamed in.
As implemented in TComponent, Loaded clears the csLoading flag in the ComponentState property, indicating that the component is no longer loading.

Warning: Loaded may be called multiple times on inherited forms. It is called every time a level of inheritance is streamed in. Do not allocate memory in an overridden Loaded method without first checking that the memory has not been allocated in a previous call.</summary></devnotes></procedure>
      <procedure name="ImagesChanged" visibility="protected" procflags="virtual" file="FMX.Menus.pas" line="491">
        <devnotes><summary>
Should be called when the component needs to redraw the image.
ImagesChanged  should be called when you change the Images reference to the TCustomImageList object or the object itself.
</summary></devnotes>
      </procedure>
      <constructor name="Create" visibility="public" file="FMX.Menus.pas" line="493">
        <parameters>
          <parameter name="AOwner" type="TComponent"/>
        </parameters>
      <devnotes><summary>
Allocates memory and constructs a safely initialized instance of a component.
Allocates memory and constructs a safely initialized instance of a component.
FMX.Menus.TMainMenu.Create inherits from System.Classes.TComponent.Create. All content below this line refers to System.Classes.TComponent.Create.
Allocates memory and constructs a safely initialized instance of a component.
All objects have a Create method that constructs the object. TComponent redefines Create so that, for components, Create also:

Establishes the relationship of a component and its Owner, as indicated by the AOwner parameter.
Sets the ComponentStyle property to csInheritable, meaning that the component can be inherited by a descendent form type.
It is not necessary to explicitly create components added in the Form Designer. These components are created automatically when the application is run, and they are destroyed when the application is closed.
For components created programmatically, that is, not created in the Form Designer, call Create and pass in an owner component as the AOwner parameter. The owner disposes of the component when it is destroyed. If the component is not owned, then use Free when it needs to be destroyed.

Tip:  When passing in Self as the Owner parameter, consider what Self references. If a component creates another component in one of its methods, then Self refers to the first component and not the component being created, which is then owned by the first component.
Note:  The TComponent constructor is virtual in part to allow polymorphic instantiation of class references. This is critical to the streaming system and to the Form Designer. Do not forget to use the override directive when declaring a new component's Create constructor.</summary></devnotes></constructor>
      <destructor name="Destroy" visibility="public" file="FMX.Menus.pas" line="494">
        <parameters>
        </parameters>
      <devnotes><summary>
Disposes of the component and its owned components.
Disposes of the component and its owned components.
FMX.Menus.TMainMenu.Destroy inherits from System.Classes.TComponent.Destroy. All content below this line refers to System.Classes.TComponent.Destroy.
Disposes of the component and its owned components.
Do not call Destroy directly. Call Free instead. Free verifies that the component is not nil, and only then calls Destroy.
Never explicitly free a component in one of its own event handlers, nor free a component from the event handler of a component that it owns or contains.
To destroy a form, call its Release method. Release waits for all the form's event handlers and the event handlers of the form's components to finish executing before destroying the form.

Note: A form owns all the controls and nonvisual components that are placed on it in design mode. When it is freed, all of these components are automatically freed as well. By default, all forms are owned by the global Application object. When an application terminates, it frees the global Application object, which frees all forms. For objects that are not components, and for components created with a nil owner, be sure to call Free after finishing with the object; otherwise the memory allocated for the object will be lost until the application terminates.</summary></devnotes></destructor>
      <procedure name="BeforeDestruction" visibility="public" procflags="override" file="FMX.Menus.pas" line="495">
      <devnotes><summary>


Performs any necessary actions before the first destructor is called.
FMX.Menus.TMainMenu.BeforeDestruction inherits from System.Classes.TComponent.BeforeDestruction. All content below this line refers to System.Classes.TComponent.BeforeDestruction.
Performs any necessary actions before the first destructor is called.
BeforeDestruction is called automatically immediately before the component's first destructor executes. Do not call it explicitly in your applications.
As implemented in TComponent, BeforeDestruction checks whether the Destroying method has been called, and if not, calls it. Descendants that override this method to perform other actions before a component is destroyed should call the inherited method first to ensure that this check takes place.
</summary></devnotes></procedure>
      <procedure name="RecreateOSMenu" visibility="public" file="FMX.Menus.pas" line="496">
      <devnotes><summary>
Recreates the OS specific menu.
</summary></devnotes></procedure>
      <procedure name="Exchange" visibility="public" procflags="override" file="FMX.Menus.pas" line="497">
        <parameters>
          <parameter name="AObject1" type="TFmxObject" paramflags="const"/>
          <parameter name="AObject2" type="TFmxObject" paramflags="const"/>
        </parameters>
      <devnotes><summary>
Exchanges two objects from the children list.
FMX.Menus.TMainMenu.Exchange inherits from FMX.Types.TFmxObject.Exchange. All content below this line refers to FMX.Types.TFmxObject.Exchange.
Exchanges two objects from the children list. Exchange exchanges AObject1 with AObject2.
</summary></devnotes></procedure>
      <procedure name="DialogKey" visibility="public" file="FMX.Menus.pas" line="499">
        <parameters>
          <parameter name="Key" type="Word" paramflags="var"/>
          <parameter name="Shift" type="TShiftState"/>
        </parameters>
      <devnotes><summary>
Processes a dialog key for every item in the menu.
Do not call DialogKey in an application. It is for internal use only.
</summary></devnotes></procedure>
      <property name="ItemsCount" visibility="public" read="GetItemsCount" type="Integer" file="FMX.Menus.pas" line="500"><devnotes><summary>
Represents the number of child menu items of this menu.
</summary></devnotes></property>
      <property name="Items[const AIndex]" visibility="public" read="GetItem" type="TFmxObject" file="FMX.Menus.pas" line="501"/>
      <property name="Images" visibility="published" read="GetImages" write="SetImages" type="TCustomImageList" file="FMX.Menus.pas" line="504">
        <devnotes><summary>
Defines the reference to a TCustomImageList list of images to be used to draw images on the component.
If the TCustomImageList list is empty, then Images is nil/null.
Call ImagesChanged when Images is changed.
</summary></devnotes>
      </property>
    </members>
  </class>
  <function name="TextToShortCut" visibility="public" file="FMX.Menus.pas" line="518">
    <parameters>
      <parameter name="Text" type="string" paramflags="const"/>
      <retval type="Integer"/>
    </parameters>
  </function>
</namespace>